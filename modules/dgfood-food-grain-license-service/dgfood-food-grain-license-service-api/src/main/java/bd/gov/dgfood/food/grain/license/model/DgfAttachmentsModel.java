/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package bd.gov.dgfood.food.grain.license.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the DgfAttachments service. Represents a row in the &quot;dgf_attachments&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>bd.gov.dgfood.food.grain.license.model.impl.DgfAttachmentsModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>bd.gov.dgfood.food.grain.license.model.impl.DgfAttachmentsImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see DgfAttachments
 * @generated
 */
@ProviderType
public interface DgfAttachmentsModel extends BaseModel<DgfAttachments> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a dgf attachments model instance should use the {@link DgfAttachments} interface instead.
	 */

	/**
	 * Returns the primary key of this dgf attachments.
	 *
	 * @return the primary key of this dgf attachments
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this dgf attachments.
	 *
	 * @param primaryKey the primary key of this dgf attachments
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the attchm ID of this dgf attachments.
	 *
	 * @return the attchm ID of this dgf attachments
	 */
	public long getAttchmId();

	/**
	 * Sets the attchm ID of this dgf attachments.
	 *
	 * @param attchmId the attchm ID of this dgf attachments
	 */
	public void setAttchmId(long attchmId);

	/**
	 * Returns the national ID of this dgf attachments.
	 *
	 * @return the national ID of this dgf attachments
	 */
	public long getNationalId();

	/**
	 * Sets the national ID of this dgf attachments.
	 *
	 * @param nationalId the national ID of this dgf attachments
	 */
	public void setNationalId(long nationalId);

	/**
	 * Returns the attachment catagory of this dgf attachments.
	 *
	 * @return the attachment catagory of this dgf attachments
	 */
	@AutoEscape
	public String getAttachmentCatagory();

	/**
	 * Sets the attachment catagory of this dgf attachments.
	 *
	 * @param attachmentCatagory the attachment catagory of this dgf attachments
	 */
	public void setAttachmentCatagory(String attachmentCatagory);

	/**
	 * Returns the attachmnt date of this dgf attachments.
	 *
	 * @return the attachmnt date of this dgf attachments
	 */
	public Date getAttachmntDate();

	/**
	 * Sets the attachmnt date of this dgf attachments.
	 *
	 * @param attachmntDate the attachmnt date of this dgf attachments
	 */
	public void setAttachmntDate(Date attachmntDate);

	/**
	 * Returns the file entry ID of this dgf attachments.
	 *
	 * @return the file entry ID of this dgf attachments
	 */
	public long getFileEntryId();

	/**
	 * Sets the file entry ID of this dgf attachments.
	 *
	 * @param fileEntryId the file entry ID of this dgf attachments
	 */
	public void setFileEntryId(long fileEntryId);

	/**
	 * Returns the title of this dgf attachments.
	 *
	 * @return the title of this dgf attachments
	 */
	@AutoEscape
	public String getTitle();

	/**
	 * Sets the title of this dgf attachments.
	 *
	 * @param title the title of this dgf attachments
	 */
	public void setTitle(String title);

	/**
	 * Returns the file path of this dgf attachments.
	 *
	 * @return the file path of this dgf attachments
	 */
	@AutoEscape
	public String getFilePath();

	/**
	 * Sets the file path of this dgf attachments.
	 *
	 * @param filePath the file path of this dgf attachments
	 */
	public void setFilePath(String filePath);

	/**
	 * Returns the version of this dgf attachments.
	 *
	 * @return the version of this dgf attachments
	 */
	public long getVersion();

	/**
	 * Sets the version of this dgf attachments.
	 *
	 * @param version the version of this dgf attachments
	 */
	public void setVersion(long version);

	/**
	 * Returns the open text ID of this dgf attachments.
	 *
	 * @return the open text ID of this dgf attachments
	 */
	public long getOpenTextId();

	/**
	 * Sets the open text ID of this dgf attachments.
	 *
	 * @param openTextId the open text ID of this dgf attachments
	 */
	public void setOpenTextId(long openTextId);

	/**
	 * Returns the status of this dgf attachments.
	 *
	 * @return the status of this dgf attachments
	 */
	public long getStatus();

	/**
	 * Sets the status of this dgf attachments.
	 *
	 * @param status the status of this dgf attachments
	 */
	public void setStatus(long status);

	/**
	 * Returns the last updated date of this dgf attachments.
	 *
	 * @return the last updated date of this dgf attachments
	 */
	public Date getLastUpdatedDate();

	/**
	 * Sets the last updated date of this dgf attachments.
	 *
	 * @param lastUpdatedDate the last updated date of this dgf attachments
	 */
	public void setLastUpdatedDate(Date lastUpdatedDate);

	/**
	 * Returns the last updated by of this dgf attachments.
	 *
	 * @return the last updated by of this dgf attachments
	 */
	public long getLastUpdatedBy();

	/**
	 * Sets the last updated by of this dgf attachments.
	 *
	 * @param lastUpdatedBy the last updated by of this dgf attachments
	 */
	public void setLastUpdatedBy(long lastUpdatedBy);

	@Override
	public DgfAttachments cloneWithOriginalValues();

	public default String toXmlString() {
		return null;
	}

}