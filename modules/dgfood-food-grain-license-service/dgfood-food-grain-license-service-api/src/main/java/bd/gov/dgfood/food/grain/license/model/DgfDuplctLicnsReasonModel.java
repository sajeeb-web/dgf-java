/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package bd.gov.dgfood.food.grain.license.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.WorkflowedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the DgfDuplctLicnsReason service. Represents a row in the &quot;dgf_duplct_licns_reason&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>bd.gov.dgfood.food.grain.license.model.impl.DgfDuplctLicnsReasonModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>bd.gov.dgfood.food.grain.license.model.impl.DgfDuplctLicnsReasonImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see DgfDuplctLicnsReason
 * @generated
 */
@ProviderType
public interface DgfDuplctLicnsReasonModel
	extends BaseModel<DgfDuplctLicnsReason>, WorkflowedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a dgf duplct licns reason model instance should use the {@link DgfDuplctLicnsReason} interface instead.
	 */

	/**
	 * Returns the primary key of this dgf duplct licns reason.
	 *
	 * @return the primary key of this dgf duplct licns reason
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this dgf duplct licns reason.
	 *
	 * @param primaryKey the primary key of this dgf duplct licns reason
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the duplicate license reason ID of this dgf duplct licns reason.
	 *
	 * @return the duplicate license reason ID of this dgf duplct licns reason
	 */
	public long getDuplicateLicenseReasonID();

	/**
	 * Sets the duplicate license reason ID of this dgf duplct licns reason.
	 *
	 * @param duplicateLicenseReasonID the duplicate license reason ID of this dgf duplct licns reason
	 */
	public void setDuplicateLicenseReasonID(long duplicateLicenseReasonID);

	/**
	 * Returns the user ID of this dgf duplct licns reason.
	 *
	 * @return the user ID of this dgf duplct licns reason
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this dgf duplct licns reason.
	 *
	 * @param userId the user ID of this dgf duplct licns reason
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this dgf duplct licns reason.
	 *
	 * @return the user uuid of this dgf duplct licns reason
	 */
	public String getUserUuid();

	/**
	 * Sets the user uuid of this dgf duplct licns reason.
	 *
	 * @param userUuid the user uuid of this dgf duplct licns reason
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the national ID of this dgf duplct licns reason.
	 *
	 * @return the national ID of this dgf duplct licns reason
	 */
	@AutoEscape
	public String getNationalId();

	/**
	 * Sets the national ID of this dgf duplct licns reason.
	 *
	 * @param nationalId the national ID of this dgf duplct licns reason
	 */
	public void setNationalId(String nationalId);

	/**
	 * Returns the license no of this dgf duplct licns reason.
	 *
	 * @return the license no of this dgf duplct licns reason
	 */
	@AutoEscape
	public String getLicenseNo();

	/**
	 * Sets the license no of this dgf duplct licns reason.
	 *
	 * @param licenseNo the license no of this dgf duplct licns reason
	 */
	public void setLicenseNo(String licenseNo);

	/**
	 * Returns the license expiry date of this dgf duplct licns reason.
	 *
	 * @return the license expiry date of this dgf duplct licns reason
	 */
	public Date getLicenseExpiryDate();

	/**
	 * Sets the license expiry date of this dgf duplct licns reason.
	 *
	 * @param licenseExpiryDate the license expiry date of this dgf duplct licns reason
	 */
	public void setLicenseExpiryDate(Date licenseExpiryDate);

	/**
	 * Returns the trade license no of this dgf duplct licns reason.
	 *
	 * @return the trade license no of this dgf duplct licns reason
	 */
	@AutoEscape
	public String getTradeLicenseNo();

	/**
	 * Sets the trade license no of this dgf duplct licns reason.
	 *
	 * @param tradeLicenseNo the trade license no of this dgf duplct licns reason
	 */
	public void setTradeLicenseNo(String tradeLicenseNo);

	/**
	 * Returns the trade license expiry date of this dgf duplct licns reason.
	 *
	 * @return the trade license expiry date of this dgf duplct licns reason
	 */
	public Date getTradeLicenseExpiryDate();

	/**
	 * Sets the trade license expiry date of this dgf duplct licns reason.
	 *
	 * @param tradeLicenseExpiryDate the trade license expiry date of this dgf duplct licns reason
	 */
	public void setTradeLicenseExpiryDate(Date tradeLicenseExpiryDate);

	/**
	 * Returns the trade lic attch ID of this dgf duplct licns reason.
	 *
	 * @return the trade lic attch ID of this dgf duplct licns reason
	 */
	public long getTradeLicAttchId();

	/**
	 * Sets the trade lic attch ID of this dgf duplct licns reason.
	 *
	 * @param tradeLicAttchId the trade lic attch ID of this dgf duplct licns reason
	 */
	public void setTradeLicAttchId(long tradeLicAttchId);

	/**
	 * Returns the payment attch ID of this dgf duplct licns reason.
	 *
	 * @return the payment attch ID of this dgf duplct licns reason
	 */
	public long getPaymentAttchId();

	/**
	 * Sets the payment attch ID of this dgf duplct licns reason.
	 *
	 * @param paymentAttchId the payment attch ID of this dgf duplct licns reason
	 */
	public void setPaymentAttchId(long paymentAttchId);

	/**
	 * Returns the application no of this dgf duplct licns reason.
	 *
	 * @return the application no of this dgf duplct licns reason
	 */
	@AutoEscape
	public String getApplicationNo();

	/**
	 * Sets the application no of this dgf duplct licns reason.
	 *
	 * @param applicationNo the application no of this dgf duplct licns reason
	 */
	public void setApplicationNo(String applicationNo);

	/**
	 * Returns the license application type of this dgf duplct licns reason.
	 *
	 * @return the license application type of this dgf duplct licns reason
	 */
	@AutoEscape
	public String getLicenseApplicationType();

	/**
	 * Sets the license application type of this dgf duplct licns reason.
	 *
	 * @param licenseApplicationType the license application type of this dgf duplct licns reason
	 */
	public void setLicenseApplicationType(String licenseApplicationType);

	/**
	 * Returns the duplicate license reason display of this dgf duplct licns reason.
	 *
	 * @return the duplicate license reason display of this dgf duplct licns reason
	 */
	@AutoEscape
	public String getDuplicateLicenseReasonDisplay();

	/**
	 * Sets the duplicate license reason display of this dgf duplct licns reason.
	 *
	 * @param duplicateLicenseReasonDisplay the duplicate license reason display of this dgf duplct licns reason
	 */
	public void setDuplicateLicenseReasonDisplay(
		String duplicateLicenseReasonDisplay);

	/**
	 * Returns the comments of this dgf duplct licns reason.
	 *
	 * @return the comments of this dgf duplct licns reason
	 */
	@AutoEscape
	public String getComments();

	/**
	 * Sets the comments of this dgf duplct licns reason.
	 *
	 * @param comments the comments of this dgf duplct licns reason
	 */
	public void setComments(String comments);

	/**
	 * Returns the created date of this dgf duplct licns reason.
	 *
	 * @return the created date of this dgf duplct licns reason
	 */
	public Date getCreatedDate();

	/**
	 * Sets the created date of this dgf duplct licns reason.
	 *
	 * @param createdDate the created date of this dgf duplct licns reason
	 */
	public void setCreatedDate(Date createdDate);

	/**
	 * Returns the modified by of this dgf duplct licns reason.
	 *
	 * @return the modified by of this dgf duplct licns reason
	 */
	public long getModifiedBy();

	/**
	 * Sets the modified by of this dgf duplct licns reason.
	 *
	 * @param modifiedBy the modified by of this dgf duplct licns reason
	 */
	public void setModifiedBy(long modifiedBy);

	/**
	 * Returns the modified date of this dgf duplct licns reason.
	 *
	 * @return the modified date of this dgf duplct licns reason
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this dgf duplct licns reason.
	 *
	 * @param modifiedDate the modified date of this dgf duplct licns reason
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the fgl pre primary ID of this dgf duplct licns reason.
	 *
	 * @return the fgl pre primary ID of this dgf duplct licns reason
	 */
	public long getFglPrePrimaryId();

	/**
	 * Sets the fgl pre primary ID of this dgf duplct licns reason.
	 *
	 * @param fglPrePrimaryId the fgl pre primary ID of this dgf duplct licns reason
	 */
	public void setFglPrePrimaryId(long fglPrePrimaryId);

	/**
	 * Returns the status of this dgf duplct licns reason.
	 *
	 * @return the status of this dgf duplct licns reason
	 */
	@Override
	public int getStatus();

	/**
	 * Sets the status of this dgf duplct licns reason.
	 *
	 * @param status the status of this dgf duplct licns reason
	 */
	@Override
	public void setStatus(int status);

	/**
	 * Returns the status by user ID of this dgf duplct licns reason.
	 *
	 * @return the status by user ID of this dgf duplct licns reason
	 */
	@Override
	public long getStatusByUserId();

	/**
	 * Sets the status by user ID of this dgf duplct licns reason.
	 *
	 * @param statusByUserId the status by user ID of this dgf duplct licns reason
	 */
	@Override
	public void setStatusByUserId(long statusByUserId);

	/**
	 * Returns the status by user uuid of this dgf duplct licns reason.
	 *
	 * @return the status by user uuid of this dgf duplct licns reason
	 */
	@Override
	public String getStatusByUserUuid();

	/**
	 * Sets the status by user uuid of this dgf duplct licns reason.
	 *
	 * @param statusByUserUuid the status by user uuid of this dgf duplct licns reason
	 */
	@Override
	public void setStatusByUserUuid(String statusByUserUuid);

	/**
	 * Returns the status by user name of this dgf duplct licns reason.
	 *
	 * @return the status by user name of this dgf duplct licns reason
	 */
	@AutoEscape
	@Override
	public String getStatusByUserName();

	/**
	 * Sets the status by user name of this dgf duplct licns reason.
	 *
	 * @param statusByUserName the status by user name of this dgf duplct licns reason
	 */
	@Override
	public void setStatusByUserName(String statusByUserName);

	/**
	 * Returns the status date of this dgf duplct licns reason.
	 *
	 * @return the status date of this dgf duplct licns reason
	 */
	@Override
	public Date getStatusDate();

	/**
	 * Sets the status date of this dgf duplct licns reason.
	 *
	 * @param statusDate the status date of this dgf duplct licns reason
	 */
	@Override
	public void setStatusDate(Date statusDate);

	/**
	 * Returns <code>true</code> if this dgf duplct licns reason is approved.
	 *
	 * @return <code>true</code> if this dgf duplct licns reason is approved; <code>false</code> otherwise
	 */
	@Override
	public boolean isApproved();

	/**
	 * Returns <code>true</code> if this dgf duplct licns reason is denied.
	 *
	 * @return <code>true</code> if this dgf duplct licns reason is denied; <code>false</code> otherwise
	 */
	@Override
	public boolean isDenied();

	/**
	 * Returns <code>true</code> if this dgf duplct licns reason is a draft.
	 *
	 * @return <code>true</code> if this dgf duplct licns reason is a draft; <code>false</code> otherwise
	 */
	@Override
	public boolean isDraft();

	/**
	 * Returns <code>true</code> if this dgf duplct licns reason is expired.
	 *
	 * @return <code>true</code> if this dgf duplct licns reason is expired; <code>false</code> otherwise
	 */
	@Override
	public boolean isExpired();

	/**
	 * Returns <code>true</code> if this dgf duplct licns reason is inactive.
	 *
	 * @return <code>true</code> if this dgf duplct licns reason is inactive; <code>false</code> otherwise
	 */
	@Override
	public boolean isInactive();

	/**
	 * Returns <code>true</code> if this dgf duplct licns reason is incomplete.
	 *
	 * @return <code>true</code> if this dgf duplct licns reason is incomplete; <code>false</code> otherwise
	 */
	@Override
	public boolean isIncomplete();

	/**
	 * Returns <code>true</code> if this dgf duplct licns reason is pending.
	 *
	 * @return <code>true</code> if this dgf duplct licns reason is pending; <code>false</code> otherwise
	 */
	@Override
	public boolean isPending();

	/**
	 * Returns <code>true</code> if this dgf duplct licns reason is scheduled.
	 *
	 * @return <code>true</code> if this dgf duplct licns reason is scheduled; <code>false</code> otherwise
	 */
	@Override
	public boolean isScheduled();

	@Override
	public DgfDuplctLicnsReason cloneWithOriginalValues();

	public default String toXmlString() {
		return null;
	}

}