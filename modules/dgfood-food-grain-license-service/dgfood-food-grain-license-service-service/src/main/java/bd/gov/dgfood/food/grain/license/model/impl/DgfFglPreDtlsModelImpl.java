/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package bd.gov.dgfood.food.grain.license.model.impl;

import bd.gov.dgfood.food.grain.license.model.DgfFglPreDtls;
import bd.gov.dgfood.food.grain.license.model.DgfFglPreDtlsModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;
import com.liferay.portal.kernel.workflow.WorkflowConstants;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the DgfFglPreDtls service. Represents a row in the &quot;dgf_fgl_pre_dtls&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>DgfFglPreDtlsModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DgfFglPreDtlsImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see DgfFglPreDtlsImpl
 * @generated
 */
@JSON(strict = true)
public class DgfFglPreDtlsModelImpl
	extends BaseModelImpl<DgfFglPreDtls> implements DgfFglPreDtlsModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a dgf fgl pre dtls model instance should use the <code>DgfFglPreDtls</code> interface instead.
	 */
	public static final String TABLE_NAME = "dgf_fgl_pre_dtls";

	public static final Object[][] TABLE_COLUMNS = {
		{"fglPrePrimaryId", Types.BIGINT}, {"nationalId", Types.BIGINT},
		{"fglApplicationNo", Types.VARCHAR}, {"applicantName", Types.VARCHAR},
		{"tradeLicenseNo", Types.VARCHAR},
		{"tradeLicenseExpiryDate", Types.TIMESTAMP},
		{"tradeLicenseIssuerCode", Types.VARCHAR},
		{"tradeLicenseIssuerCity", Types.VARCHAR},
		{"businessIdentificationNo", Types.VARCHAR},
		{"taxIdentificationNo", Types.VARCHAR}, {"businessName", Types.VARCHAR},
		{"businessType", Types.VARCHAR}, {"paymentChallanId", Types.BIGINT},
		{"paymentStatus", Types.BIGINT}, {"reviewComments", Types.VARCHAR},
		{"applicationStatus", Types.BIGINT},
		{"applicationStatusDate", Types.TIMESTAMP},
		{"duplicateLicenseReasonId", Types.BIGINT}, {"comments", Types.VARCHAR},
		{"fglLicenseVersion", Types.BIGINT},
		{"foodGrainLicenseType", Types.VARCHAR}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"createdDate", Types.TIMESTAMP},
		{"modifiedBy", Types.BIGINT}, {"modifiedDate", Types.TIMESTAMP},
		{"applicationStatusById", Types.BIGINT},
		{"presentAddrId", Types.BIGINT}, {"bussinessAddrId", Types.BIGINT},
		{"tradeLicenseDocId", Types.BIGINT},
		{"bussIdentfctDocId", Types.BIGINT}, {"taxIdentfctDocId", Types.BIGINT},
		{"bnkStatmtDocId", Types.BIGINT}, {"status", Types.INTEGER},
		{"statusByUserId", Types.BIGINT}, {"statusByUserName", Types.VARCHAR},
		{"statusDate", Types.TIMESTAMP}, {"userId", Types.BIGINT},
		{"birthDate", Types.TIMESTAMP}, {"fglApplicationType", Types.VARCHAR},
		{"photographDocId", Types.BIGINT}, {"otherReleventDocId", Types.BIGINT},
		{"electricExemptionMemoId", Types.BIGINT},
		{"envClrMemoId", Types.BIGINT}, {"bstiClrMemoId", Types.BIGINT},
		{"fireLicNumDocId", Types.BIGINT}, {"productType", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("fglPrePrimaryId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("nationalId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("fglApplicationNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("applicantName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tradeLicenseNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tradeLicenseExpiryDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("tradeLicenseIssuerCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tradeLicenseIssuerCity", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("businessIdentificationNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("taxIdentificationNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("businessName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("businessType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("paymentChallanId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("paymentStatus", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("reviewComments", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("applicationStatus", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("applicationStatusDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("duplicateLicenseReasonId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("comments", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fglLicenseVersion", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("foodGrainLicenseType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createdDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedBy", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("applicationStatusById", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("presentAddrId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("bussinessAddrId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("tradeLicenseDocId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("bussIdentfctDocId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("taxIdentfctDocId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("bnkStatmtDocId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("status", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("statusByUserId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("statusByUserName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("statusDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("birthDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("fglApplicationType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("photographDocId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("otherReleventDocId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("electricExemptionMemoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("envClrMemoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("bstiClrMemoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("fireLicNumDocId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("productType", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table dgf_fgl_pre_dtls (fglPrePrimaryId LONG not null primary key,nationalId LONG,fglApplicationNo VARCHAR(75) null,applicantName VARCHAR(75) null,tradeLicenseNo VARCHAR(75) null,tradeLicenseExpiryDate DATE null,tradeLicenseIssuerCode VARCHAR(75) null,tradeLicenseIssuerCity VARCHAR(75) null,businessIdentificationNo VARCHAR(75) null,taxIdentificationNo VARCHAR(75) null,businessName VARCHAR(75) null,businessType VARCHAR(75) null,paymentChallanId LONG,paymentStatus LONG,reviewComments VARCHAR(75) null,applicationStatus LONG,applicationStatusDate DATE null,duplicateLicenseReasonId LONG,comments VARCHAR(75) null,fglLicenseVersion LONG,foodGrainLicenseType VARCHAR(75) null,groupId LONG,companyId LONG,createdDate DATE null,modifiedBy LONG,modifiedDate DATE null,applicationStatusById LONG,presentAddrId LONG,bussinessAddrId LONG,tradeLicenseDocId LONG,bussIdentfctDocId LONG,taxIdentfctDocId LONG,bnkStatmtDocId LONG,status INTEGER,statusByUserId LONG,statusByUserName VARCHAR(75) null,statusDate DATE null,userId LONG,birthDate DATE null,fglApplicationType VARCHAR(75) null,photographDocId LONG,otherReleventDocId LONG,electricExemptionMemoId LONG,envClrMemoId LONG,bstiClrMemoId LONG,fireLicNumDocId LONG,productType VARCHAR(75) null)";

	public static final String TABLE_SQL_DROP = "drop table dgf_fgl_pre_dtls";

	public static final String ORDER_BY_JPQL =
		" ORDER BY dgfFglPreDtls.fglPrePrimaryId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY dgf_fgl_pre_dtls.fglPrePrimaryId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long BNKSTATMTDOCID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long BSTICLRMEMOID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long BUSSIDENTFCTDOCID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long BUSSINESSADDRID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long DUPLICATELICENSEREASONID_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ELECTRICEXEMPTIONMEMOID_COLUMN_BITMASK = 32L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ENVCLRMEMOID_COLUMN_BITMASK = 64L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long FGLAPPLICATIONNO_COLUMN_BITMASK = 128L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long FIRELICNUMDOCID_COLUMN_BITMASK = 256L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long NATIONALID_COLUMN_BITMASK = 512L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long OTHERRELEVENTDOCID_COLUMN_BITMASK = 1024L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long PAYMENTCHALLANID_COLUMN_BITMASK = 2048L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long PHOTOGRAPHDOCID_COLUMN_BITMASK = 4096L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long PRESENTADDRID_COLUMN_BITMASK = 8192L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long TAXIDENTFCTDOCID_COLUMN_BITMASK = 16384L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long TRADELICENSEDOCID_COLUMN_BITMASK = 32768L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long FGLPREPRIMARYID_COLUMN_BITMASK = 65536L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public DgfFglPreDtlsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _fglPrePrimaryId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setFglPrePrimaryId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _fglPrePrimaryId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return DgfFglPreDtls.class;
	}

	@Override
	public String getModelClassName() {
		return DgfFglPreDtls.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<DgfFglPreDtls, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<DgfFglPreDtls, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<DgfFglPreDtls, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((DgfFglPreDtls)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<DgfFglPreDtls, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<DgfFglPreDtls, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(DgfFglPreDtls)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<DgfFglPreDtls, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<DgfFglPreDtls, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<DgfFglPreDtls, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<DgfFglPreDtls, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<DgfFglPreDtls, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<DgfFglPreDtls, Object>>();
		Map<String, BiConsumer<DgfFglPreDtls, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<DgfFglPreDtls, ?>>();

		attributeGetterFunctions.put(
			"fglPrePrimaryId", DgfFglPreDtls::getFglPrePrimaryId);
		attributeSetterBiConsumers.put(
			"fglPrePrimaryId",
			(BiConsumer<DgfFglPreDtls, Long>)DgfFglPreDtls::setFglPrePrimaryId);
		attributeGetterFunctions.put(
			"nationalId", DgfFglPreDtls::getNationalId);
		attributeSetterBiConsumers.put(
			"nationalId",
			(BiConsumer<DgfFglPreDtls, Long>)DgfFglPreDtls::setNationalId);
		attributeGetterFunctions.put(
			"fglApplicationNo", DgfFglPreDtls::getFglApplicationNo);
		attributeSetterBiConsumers.put(
			"fglApplicationNo",
			(BiConsumer<DgfFglPreDtls, String>)
				DgfFglPreDtls::setFglApplicationNo);
		attributeGetterFunctions.put(
			"applicantName", DgfFglPreDtls::getApplicantName);
		attributeSetterBiConsumers.put(
			"applicantName",
			(BiConsumer<DgfFglPreDtls, String>)DgfFglPreDtls::setApplicantName);
		attributeGetterFunctions.put(
			"tradeLicenseNo", DgfFglPreDtls::getTradeLicenseNo);
		attributeSetterBiConsumers.put(
			"tradeLicenseNo",
			(BiConsumer<DgfFglPreDtls, String>)
				DgfFglPreDtls::setTradeLicenseNo);
		attributeGetterFunctions.put(
			"tradeLicenseExpiryDate", DgfFglPreDtls::getTradeLicenseExpiryDate);
		attributeSetterBiConsumers.put(
			"tradeLicenseExpiryDate",
			(BiConsumer<DgfFglPreDtls, Date>)
				DgfFglPreDtls::setTradeLicenseExpiryDate);
		attributeGetterFunctions.put(
			"tradeLicenseIssuerCode", DgfFglPreDtls::getTradeLicenseIssuerCode);
		attributeSetterBiConsumers.put(
			"tradeLicenseIssuerCode",
			(BiConsumer<DgfFglPreDtls, String>)
				DgfFglPreDtls::setTradeLicenseIssuerCode);
		attributeGetterFunctions.put(
			"tradeLicenseIssuerCity", DgfFglPreDtls::getTradeLicenseIssuerCity);
		attributeSetterBiConsumers.put(
			"tradeLicenseIssuerCity",
			(BiConsumer<DgfFglPreDtls, String>)
				DgfFglPreDtls::setTradeLicenseIssuerCity);
		attributeGetterFunctions.put(
			"businessIdentificationNo",
			DgfFglPreDtls::getBusinessIdentificationNo);
		attributeSetterBiConsumers.put(
			"businessIdentificationNo",
			(BiConsumer<DgfFglPreDtls, String>)
				DgfFglPreDtls::setBusinessIdentificationNo);
		attributeGetterFunctions.put(
			"taxIdentificationNo", DgfFglPreDtls::getTaxIdentificationNo);
		attributeSetterBiConsumers.put(
			"taxIdentificationNo",
			(BiConsumer<DgfFglPreDtls, String>)
				DgfFglPreDtls::setTaxIdentificationNo);
		attributeGetterFunctions.put(
			"businessName", DgfFglPreDtls::getBusinessName);
		attributeSetterBiConsumers.put(
			"businessName",
			(BiConsumer<DgfFglPreDtls, String>)DgfFglPreDtls::setBusinessName);
		attributeGetterFunctions.put(
			"businessType", DgfFglPreDtls::getBusinessType);
		attributeSetterBiConsumers.put(
			"businessType",
			(BiConsumer<DgfFglPreDtls, String>)DgfFglPreDtls::setBusinessType);
		attributeGetterFunctions.put(
			"paymentChallanId", DgfFglPreDtls::getPaymentChallanId);
		attributeSetterBiConsumers.put(
			"paymentChallanId",
			(BiConsumer<DgfFglPreDtls, Long>)
				DgfFglPreDtls::setPaymentChallanId);
		attributeGetterFunctions.put(
			"paymentStatus", DgfFglPreDtls::getPaymentStatus);
		attributeSetterBiConsumers.put(
			"paymentStatus",
			(BiConsumer<DgfFglPreDtls, Long>)DgfFglPreDtls::setPaymentStatus);
		attributeGetterFunctions.put(
			"reviewComments", DgfFglPreDtls::getReviewComments);
		attributeSetterBiConsumers.put(
			"reviewComments",
			(BiConsumer<DgfFglPreDtls, String>)
				DgfFglPreDtls::setReviewComments);
		attributeGetterFunctions.put(
			"applicationStatus", DgfFglPreDtls::getApplicationStatus);
		attributeSetterBiConsumers.put(
			"applicationStatus",
			(BiConsumer<DgfFglPreDtls, Long>)
				DgfFglPreDtls::setApplicationStatus);
		attributeGetterFunctions.put(
			"applicationStatusDate", DgfFglPreDtls::getApplicationStatusDate);
		attributeSetterBiConsumers.put(
			"applicationStatusDate",
			(BiConsumer<DgfFglPreDtls, Date>)
				DgfFglPreDtls::setApplicationStatusDate);
		attributeGetterFunctions.put(
			"duplicateLicenseReasonId",
			DgfFglPreDtls::getDuplicateLicenseReasonId);
		attributeSetterBiConsumers.put(
			"duplicateLicenseReasonId",
			(BiConsumer<DgfFglPreDtls, Long>)
				DgfFglPreDtls::setDuplicateLicenseReasonId);
		attributeGetterFunctions.put("comments", DgfFglPreDtls::getComments);
		attributeSetterBiConsumers.put(
			"comments",
			(BiConsumer<DgfFglPreDtls, String>)DgfFglPreDtls::setComments);
		attributeGetterFunctions.put(
			"fglLicenseVersion", DgfFglPreDtls::getFglLicenseVersion);
		attributeSetterBiConsumers.put(
			"fglLicenseVersion",
			(BiConsumer<DgfFglPreDtls, Long>)
				DgfFglPreDtls::setFglLicenseVersion);
		attributeGetterFunctions.put(
			"foodGrainLicenseType", DgfFglPreDtls::getFoodGrainLicenseType);
		attributeSetterBiConsumers.put(
			"foodGrainLicenseType",
			(BiConsumer<DgfFglPreDtls, String>)
				DgfFglPreDtls::setFoodGrainLicenseType);
		attributeGetterFunctions.put("groupId", DgfFglPreDtls::getGroupId);
		attributeSetterBiConsumers.put(
			"groupId",
			(BiConsumer<DgfFglPreDtls, Long>)DgfFglPreDtls::setGroupId);
		attributeGetterFunctions.put("companyId", DgfFglPreDtls::getCompanyId);
		attributeSetterBiConsumers.put(
			"companyId",
			(BiConsumer<DgfFglPreDtls, Long>)DgfFglPreDtls::setCompanyId);
		attributeGetterFunctions.put(
			"createdDate", DgfFglPreDtls::getCreatedDate);
		attributeSetterBiConsumers.put(
			"createdDate",
			(BiConsumer<DgfFglPreDtls, Date>)DgfFglPreDtls::setCreatedDate);
		attributeGetterFunctions.put(
			"modifiedBy", DgfFglPreDtls::getModifiedBy);
		attributeSetterBiConsumers.put(
			"modifiedBy",
			(BiConsumer<DgfFglPreDtls, Long>)DgfFglPreDtls::setModifiedBy);
		attributeGetterFunctions.put(
			"modifiedDate", DgfFglPreDtls::getModifiedDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<DgfFglPreDtls, Date>)DgfFglPreDtls::setModifiedDate);
		attributeGetterFunctions.put(
			"applicationStatusById", DgfFglPreDtls::getApplicationStatusById);
		attributeSetterBiConsumers.put(
			"applicationStatusById",
			(BiConsumer<DgfFglPreDtls, Long>)
				DgfFglPreDtls::setApplicationStatusById);
		attributeGetterFunctions.put(
			"presentAddrId", DgfFglPreDtls::getPresentAddrId);
		attributeSetterBiConsumers.put(
			"presentAddrId",
			(BiConsumer<DgfFglPreDtls, Long>)DgfFglPreDtls::setPresentAddrId);
		attributeGetterFunctions.put(
			"bussinessAddrId", DgfFglPreDtls::getBussinessAddrId);
		attributeSetterBiConsumers.put(
			"bussinessAddrId",
			(BiConsumer<DgfFglPreDtls, Long>)DgfFglPreDtls::setBussinessAddrId);
		attributeGetterFunctions.put(
			"tradeLicenseDocId", DgfFglPreDtls::getTradeLicenseDocId);
		attributeSetterBiConsumers.put(
			"tradeLicenseDocId",
			(BiConsumer<DgfFglPreDtls, Long>)
				DgfFglPreDtls::setTradeLicenseDocId);
		attributeGetterFunctions.put(
			"bussIdentfctDocId", DgfFglPreDtls::getBussIdentfctDocId);
		attributeSetterBiConsumers.put(
			"bussIdentfctDocId",
			(BiConsumer<DgfFglPreDtls, Long>)
				DgfFglPreDtls::setBussIdentfctDocId);
		attributeGetterFunctions.put(
			"taxIdentfctDocId", DgfFglPreDtls::getTaxIdentfctDocId);
		attributeSetterBiConsumers.put(
			"taxIdentfctDocId",
			(BiConsumer<DgfFglPreDtls, Long>)
				DgfFglPreDtls::setTaxIdentfctDocId);
		attributeGetterFunctions.put(
			"bnkStatmtDocId", DgfFglPreDtls::getBnkStatmtDocId);
		attributeSetterBiConsumers.put(
			"bnkStatmtDocId",
			(BiConsumer<DgfFglPreDtls, Long>)DgfFglPreDtls::setBnkStatmtDocId);
		attributeGetterFunctions.put("status", DgfFglPreDtls::getStatus);
		attributeSetterBiConsumers.put(
			"status",
			(BiConsumer<DgfFglPreDtls, Integer>)DgfFglPreDtls::setStatus);
		attributeGetterFunctions.put(
			"statusByUserId", DgfFglPreDtls::getStatusByUserId);
		attributeSetterBiConsumers.put(
			"statusByUserId",
			(BiConsumer<DgfFglPreDtls, Long>)DgfFglPreDtls::setStatusByUserId);
		attributeGetterFunctions.put(
			"statusByUserName", DgfFglPreDtls::getStatusByUserName);
		attributeSetterBiConsumers.put(
			"statusByUserName",
			(BiConsumer<DgfFglPreDtls, String>)
				DgfFglPreDtls::setStatusByUserName);
		attributeGetterFunctions.put(
			"statusDate", DgfFglPreDtls::getStatusDate);
		attributeSetterBiConsumers.put(
			"statusDate",
			(BiConsumer<DgfFglPreDtls, Date>)DgfFglPreDtls::setStatusDate);
		attributeGetterFunctions.put("userId", DgfFglPreDtls::getUserId);
		attributeSetterBiConsumers.put(
			"userId",
			(BiConsumer<DgfFglPreDtls, Long>)DgfFglPreDtls::setUserId);
		attributeGetterFunctions.put("birthDate", DgfFglPreDtls::getBirthDate);
		attributeSetterBiConsumers.put(
			"birthDate",
			(BiConsumer<DgfFglPreDtls, Date>)DgfFglPreDtls::setBirthDate);
		attributeGetterFunctions.put(
			"fglApplicationType", DgfFglPreDtls::getFglApplicationType);
		attributeSetterBiConsumers.put(
			"fglApplicationType",
			(BiConsumer<DgfFglPreDtls, String>)
				DgfFglPreDtls::setFglApplicationType);
		attributeGetterFunctions.put(
			"photographDocId", DgfFglPreDtls::getPhotographDocId);
		attributeSetterBiConsumers.put(
			"photographDocId",
			(BiConsumer<DgfFglPreDtls, Long>)DgfFglPreDtls::setPhotographDocId);
		attributeGetterFunctions.put(
			"otherReleventDocId", DgfFglPreDtls::getOtherReleventDocId);
		attributeSetterBiConsumers.put(
			"otherReleventDocId",
			(BiConsumer<DgfFglPreDtls, Long>)
				DgfFglPreDtls::setOtherReleventDocId);
		attributeGetterFunctions.put(
			"electricExemptionMemoId",
			DgfFglPreDtls::getElectricExemptionMemoId);
		attributeSetterBiConsumers.put(
			"electricExemptionMemoId",
			(BiConsumer<DgfFglPreDtls, Long>)
				DgfFglPreDtls::setElectricExemptionMemoId);
		attributeGetterFunctions.put(
			"envClrMemoId", DgfFglPreDtls::getEnvClrMemoId);
		attributeSetterBiConsumers.put(
			"envClrMemoId",
			(BiConsumer<DgfFglPreDtls, Long>)DgfFglPreDtls::setEnvClrMemoId);
		attributeGetterFunctions.put(
			"bstiClrMemoId", DgfFglPreDtls::getBstiClrMemoId);
		attributeSetterBiConsumers.put(
			"bstiClrMemoId",
			(BiConsumer<DgfFglPreDtls, Long>)DgfFglPreDtls::setBstiClrMemoId);
		attributeGetterFunctions.put(
			"fireLicNumDocId", DgfFglPreDtls::getFireLicNumDocId);
		attributeSetterBiConsumers.put(
			"fireLicNumDocId",
			(BiConsumer<DgfFglPreDtls, Long>)DgfFglPreDtls::setFireLicNumDocId);
		attributeGetterFunctions.put(
			"productType", DgfFglPreDtls::getProductType);
		attributeSetterBiConsumers.put(
			"productType",
			(BiConsumer<DgfFglPreDtls, String>)DgfFglPreDtls::setProductType);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getFglPrePrimaryId() {
		return _fglPrePrimaryId;
	}

	@Override
	public void setFglPrePrimaryId(long fglPrePrimaryId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_fglPrePrimaryId = fglPrePrimaryId;
	}

	@JSON
	@Override
	public long getNationalId() {
		return _nationalId;
	}

	@Override
	public void setNationalId(long nationalId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nationalId = nationalId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalNationalId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("nationalId"));
	}

	@JSON
	@Override
	public String getFglApplicationNo() {
		if (_fglApplicationNo == null) {
			return "";
		}
		else {
			return _fglApplicationNo;
		}
	}

	@Override
	public void setFglApplicationNo(String fglApplicationNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_fglApplicationNo = fglApplicationNo;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalFglApplicationNo() {
		return getColumnOriginalValue("fglApplicationNo");
	}

	@JSON
	@Override
	public String getApplicantName() {
		if (_applicantName == null) {
			return "";
		}
		else {
			return _applicantName;
		}
	}

	@Override
	public void setApplicantName(String applicantName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_applicantName = applicantName;
	}

	@JSON
	@Override
	public String getTradeLicenseNo() {
		if (_tradeLicenseNo == null) {
			return "";
		}
		else {
			return _tradeLicenseNo;
		}
	}

	@Override
	public void setTradeLicenseNo(String tradeLicenseNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tradeLicenseNo = tradeLicenseNo;
	}

	@JSON
	@Override
	public Date getTradeLicenseExpiryDate() {
		return _tradeLicenseExpiryDate;
	}

	@Override
	public void setTradeLicenseExpiryDate(Date tradeLicenseExpiryDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tradeLicenseExpiryDate = tradeLicenseExpiryDate;
	}

	@JSON
	@Override
	public String getTradeLicenseIssuerCode() {
		if (_tradeLicenseIssuerCode == null) {
			return "";
		}
		else {
			return _tradeLicenseIssuerCode;
		}
	}

	@Override
	public void setTradeLicenseIssuerCode(String tradeLicenseIssuerCode) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tradeLicenseIssuerCode = tradeLicenseIssuerCode;
	}

	@JSON
	@Override
	public String getTradeLicenseIssuerCity() {
		if (_tradeLicenseIssuerCity == null) {
			return "";
		}
		else {
			return _tradeLicenseIssuerCity;
		}
	}

	@Override
	public void setTradeLicenseIssuerCity(String tradeLicenseIssuerCity) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tradeLicenseIssuerCity = tradeLicenseIssuerCity;
	}

	@JSON
	@Override
	public String getBusinessIdentificationNo() {
		if (_businessIdentificationNo == null) {
			return "";
		}
		else {
			return _businessIdentificationNo;
		}
	}

	@Override
	public void setBusinessIdentificationNo(String businessIdentificationNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessIdentificationNo = businessIdentificationNo;
	}

	@JSON
	@Override
	public String getTaxIdentificationNo() {
		if (_taxIdentificationNo == null) {
			return "";
		}
		else {
			return _taxIdentificationNo;
		}
	}

	@Override
	public void setTaxIdentificationNo(String taxIdentificationNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_taxIdentificationNo = taxIdentificationNo;
	}

	@JSON
	@Override
	public String getBusinessName() {
		if (_businessName == null) {
			return "";
		}
		else {
			return _businessName;
		}
	}

	@Override
	public void setBusinessName(String businessName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessName = businessName;
	}

	@JSON
	@Override
	public String getBusinessType() {
		if (_businessType == null) {
			return "";
		}
		else {
			return _businessType;
		}
	}

	@Override
	public void setBusinessType(String businessType) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessType = businessType;
	}

	@JSON
	@Override
	public long getPaymentChallanId() {
		return _paymentChallanId;
	}

	@Override
	public void setPaymentChallanId(long paymentChallanId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_paymentChallanId = paymentChallanId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalPaymentChallanId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("paymentChallanId"));
	}

	@JSON
	@Override
	public long getPaymentStatus() {
		return _paymentStatus;
	}

	@Override
	public void setPaymentStatus(long paymentStatus) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_paymentStatus = paymentStatus;
	}

	@JSON
	@Override
	public String getReviewComments() {
		if (_reviewComments == null) {
			return "";
		}
		else {
			return _reviewComments;
		}
	}

	@Override
	public void setReviewComments(String reviewComments) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_reviewComments = reviewComments;
	}

	@JSON
	@Override
	public long getApplicationStatus() {
		return _applicationStatus;
	}

	@Override
	public void setApplicationStatus(long applicationStatus) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_applicationStatus = applicationStatus;
	}

	@JSON
	@Override
	public Date getApplicationStatusDate() {
		return _applicationStatusDate;
	}

	@Override
	public void setApplicationStatusDate(Date applicationStatusDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_applicationStatusDate = applicationStatusDate;
	}

	@JSON
	@Override
	public long getDuplicateLicenseReasonId() {
		return _duplicateLicenseReasonId;
	}

	@Override
	public void setDuplicateLicenseReasonId(long duplicateLicenseReasonId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_duplicateLicenseReasonId = duplicateLicenseReasonId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalDuplicateLicenseReasonId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("duplicateLicenseReasonId"));
	}

	@JSON
	@Override
	public String getComments() {
		if (_comments == null) {
			return "";
		}
		else {
			return _comments;
		}
	}

	@Override
	public void setComments(String comments) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_comments = comments;
	}

	@JSON
	@Override
	public long getFglLicenseVersion() {
		return _fglLicenseVersion;
	}

	@Override
	public void setFglLicenseVersion(long fglLicenseVersion) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_fglLicenseVersion = fglLicenseVersion;
	}

	@JSON
	@Override
	public String getFoodGrainLicenseType() {
		if (_foodGrainLicenseType == null) {
			return "";
		}
		else {
			return _foodGrainLicenseType;
		}
	}

	@Override
	public void setFoodGrainLicenseType(String foodGrainLicenseType) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_foodGrainLicenseType = foodGrainLicenseType;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@JSON
	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createdDate = createdDate;
	}

	@JSON
	@Override
	public long getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(long modifiedBy) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedBy = modifiedBy;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getApplicationStatusById() {
		return _applicationStatusById;
	}

	@Override
	public void setApplicationStatusById(long applicationStatusById) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_applicationStatusById = applicationStatusById;
	}

	@JSON
	@Override
	public long getPresentAddrId() {
		return _presentAddrId;
	}

	@Override
	public void setPresentAddrId(long presentAddrId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_presentAddrId = presentAddrId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalPresentAddrId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("presentAddrId"));
	}

	@JSON
	@Override
	public long getBussinessAddrId() {
		return _bussinessAddrId;
	}

	@Override
	public void setBussinessAddrId(long bussinessAddrId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bussinessAddrId = bussinessAddrId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalBussinessAddrId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("bussinessAddrId"));
	}

	@JSON
	@Override
	public long getTradeLicenseDocId() {
		return _tradeLicenseDocId;
	}

	@Override
	public void setTradeLicenseDocId(long tradeLicenseDocId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tradeLicenseDocId = tradeLicenseDocId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalTradeLicenseDocId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("tradeLicenseDocId"));
	}

	@JSON
	@Override
	public long getBussIdentfctDocId() {
		return _bussIdentfctDocId;
	}

	@Override
	public void setBussIdentfctDocId(long bussIdentfctDocId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bussIdentfctDocId = bussIdentfctDocId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalBussIdentfctDocId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("bussIdentfctDocId"));
	}

	@JSON
	@Override
	public long getTaxIdentfctDocId() {
		return _taxIdentfctDocId;
	}

	@Override
	public void setTaxIdentfctDocId(long taxIdentfctDocId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_taxIdentfctDocId = taxIdentfctDocId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalTaxIdentfctDocId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("taxIdentfctDocId"));
	}

	@JSON
	@Override
	public long getBnkStatmtDocId() {
		return _bnkStatmtDocId;
	}

	@Override
	public void setBnkStatmtDocId(long bnkStatmtDocId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bnkStatmtDocId = bnkStatmtDocId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalBnkStatmtDocId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("bnkStatmtDocId"));
	}

	@JSON
	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_status = status;
	}

	@JSON
	@Override
	public long getStatusByUserId() {
		return _statusByUserId;
	}

	@Override
	public void setStatusByUserId(long statusByUserId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_statusByUserId = statusByUserId;
	}

	@Override
	public String getStatusByUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getStatusByUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setStatusByUserUuid(String statusByUserUuid) {
	}

	@JSON
	@Override
	public String getStatusByUserName() {
		if (_statusByUserName == null) {
			return "";
		}
		else {
			return _statusByUserName;
		}
	}

	@Override
	public void setStatusByUserName(String statusByUserName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_statusByUserName = statusByUserName;
	}

	@JSON
	@Override
	public Date getStatusDate() {
		return _statusDate;
	}

	@Override
	public void setStatusDate(Date statusDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_statusDate = statusDate;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public Date getBirthDate() {
		return _birthDate;
	}

	@Override
	public void setBirthDate(Date birthDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_birthDate = birthDate;
	}

	@JSON
	@Override
	public String getFglApplicationType() {
		if (_fglApplicationType == null) {
			return "";
		}
		else {
			return _fglApplicationType;
		}
	}

	@Override
	public void setFglApplicationType(String fglApplicationType) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_fglApplicationType = fglApplicationType;
	}

	@JSON
	@Override
	public long getPhotographDocId() {
		return _photographDocId;
	}

	@Override
	public void setPhotographDocId(long photographDocId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_photographDocId = photographDocId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalPhotographDocId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("photographDocId"));
	}

	@JSON
	@Override
	public long getOtherReleventDocId() {
		return _otherReleventDocId;
	}

	@Override
	public void setOtherReleventDocId(long otherReleventDocId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_otherReleventDocId = otherReleventDocId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalOtherReleventDocId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("otherReleventDocId"));
	}

	@JSON
	@Override
	public long getElectricExemptionMemoId() {
		return _electricExemptionMemoId;
	}

	@Override
	public void setElectricExemptionMemoId(long electricExemptionMemoId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_electricExemptionMemoId = electricExemptionMemoId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalElectricExemptionMemoId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("electricExemptionMemoId"));
	}

	@JSON
	@Override
	public long getEnvClrMemoId() {
		return _envClrMemoId;
	}

	@Override
	public void setEnvClrMemoId(long envClrMemoId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_envClrMemoId = envClrMemoId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalEnvClrMemoId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("envClrMemoId"));
	}

	@JSON
	@Override
	public long getBstiClrMemoId() {
		return _bstiClrMemoId;
	}

	@Override
	public void setBstiClrMemoId(long bstiClrMemoId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bstiClrMemoId = bstiClrMemoId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalBstiClrMemoId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("bstiClrMemoId"));
	}

	@JSON
	@Override
	public long getFireLicNumDocId() {
		return _fireLicNumDocId;
	}

	@Override
	public void setFireLicNumDocId(long fireLicNumDocId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_fireLicNumDocId = fireLicNumDocId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalFireLicNumDocId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("fireLicNumDocId"));
	}

	@JSON
	@Override
	public String getProductType() {
		if (_productType == null) {
			return "";
		}
		else {
			return _productType;
		}
	}

	@Override
	public void setProductType(String productType) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_productType = productType;
	}

	@Override
	public boolean isApproved() {
		if (getStatus() == WorkflowConstants.STATUS_APPROVED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDenied() {
		if (getStatus() == WorkflowConstants.STATUS_DENIED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDraft() {
		if (getStatus() == WorkflowConstants.STATUS_DRAFT) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isExpired() {
		if (getStatus() == WorkflowConstants.STATUS_EXPIRED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isInactive() {
		if (getStatus() == WorkflowConstants.STATUS_INACTIVE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isIncomplete() {
		if (getStatus() == WorkflowConstants.STATUS_INCOMPLETE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isPending() {
		if (getStatus() == WorkflowConstants.STATUS_PENDING) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isScheduled() {
		if (getStatus() == WorkflowConstants.STATUS_SCHEDULED) {
			return true;
		}
		else {
			return false;
		}
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), DgfFglPreDtls.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public DgfFglPreDtls toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, DgfFglPreDtls>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DgfFglPreDtlsImpl dgfFglPreDtlsImpl = new DgfFglPreDtlsImpl();

		dgfFglPreDtlsImpl.setFglPrePrimaryId(getFglPrePrimaryId());
		dgfFglPreDtlsImpl.setNationalId(getNationalId());
		dgfFglPreDtlsImpl.setFglApplicationNo(getFglApplicationNo());
		dgfFglPreDtlsImpl.setApplicantName(getApplicantName());
		dgfFglPreDtlsImpl.setTradeLicenseNo(getTradeLicenseNo());
		dgfFglPreDtlsImpl.setTradeLicenseExpiryDate(
			getTradeLicenseExpiryDate());
		dgfFglPreDtlsImpl.setTradeLicenseIssuerCode(
			getTradeLicenseIssuerCode());
		dgfFglPreDtlsImpl.setTradeLicenseIssuerCity(
			getTradeLicenseIssuerCity());
		dgfFglPreDtlsImpl.setBusinessIdentificationNo(
			getBusinessIdentificationNo());
		dgfFglPreDtlsImpl.setTaxIdentificationNo(getTaxIdentificationNo());
		dgfFglPreDtlsImpl.setBusinessName(getBusinessName());
		dgfFglPreDtlsImpl.setBusinessType(getBusinessType());
		dgfFglPreDtlsImpl.setPaymentChallanId(getPaymentChallanId());
		dgfFglPreDtlsImpl.setPaymentStatus(getPaymentStatus());
		dgfFglPreDtlsImpl.setReviewComments(getReviewComments());
		dgfFglPreDtlsImpl.setApplicationStatus(getApplicationStatus());
		dgfFglPreDtlsImpl.setApplicationStatusDate(getApplicationStatusDate());
		dgfFglPreDtlsImpl.setDuplicateLicenseReasonId(
			getDuplicateLicenseReasonId());
		dgfFglPreDtlsImpl.setComments(getComments());
		dgfFglPreDtlsImpl.setFglLicenseVersion(getFglLicenseVersion());
		dgfFglPreDtlsImpl.setFoodGrainLicenseType(getFoodGrainLicenseType());
		dgfFglPreDtlsImpl.setGroupId(getGroupId());
		dgfFglPreDtlsImpl.setCompanyId(getCompanyId());
		dgfFglPreDtlsImpl.setCreatedDate(getCreatedDate());
		dgfFglPreDtlsImpl.setModifiedBy(getModifiedBy());
		dgfFglPreDtlsImpl.setModifiedDate(getModifiedDate());
		dgfFglPreDtlsImpl.setApplicationStatusById(getApplicationStatusById());
		dgfFglPreDtlsImpl.setPresentAddrId(getPresentAddrId());
		dgfFglPreDtlsImpl.setBussinessAddrId(getBussinessAddrId());
		dgfFglPreDtlsImpl.setTradeLicenseDocId(getTradeLicenseDocId());
		dgfFglPreDtlsImpl.setBussIdentfctDocId(getBussIdentfctDocId());
		dgfFglPreDtlsImpl.setTaxIdentfctDocId(getTaxIdentfctDocId());
		dgfFglPreDtlsImpl.setBnkStatmtDocId(getBnkStatmtDocId());
		dgfFglPreDtlsImpl.setStatus(getStatus());
		dgfFglPreDtlsImpl.setStatusByUserId(getStatusByUserId());
		dgfFglPreDtlsImpl.setStatusByUserName(getStatusByUserName());
		dgfFglPreDtlsImpl.setStatusDate(getStatusDate());
		dgfFglPreDtlsImpl.setUserId(getUserId());
		dgfFglPreDtlsImpl.setBirthDate(getBirthDate());
		dgfFglPreDtlsImpl.setFglApplicationType(getFglApplicationType());
		dgfFglPreDtlsImpl.setPhotographDocId(getPhotographDocId());
		dgfFglPreDtlsImpl.setOtherReleventDocId(getOtherReleventDocId());
		dgfFglPreDtlsImpl.setElectricExemptionMemoId(
			getElectricExemptionMemoId());
		dgfFglPreDtlsImpl.setEnvClrMemoId(getEnvClrMemoId());
		dgfFglPreDtlsImpl.setBstiClrMemoId(getBstiClrMemoId());
		dgfFglPreDtlsImpl.setFireLicNumDocId(getFireLicNumDocId());
		dgfFglPreDtlsImpl.setProductType(getProductType());

		dgfFglPreDtlsImpl.resetOriginalValues();

		return dgfFglPreDtlsImpl;
	}

	@Override
	public DgfFglPreDtls cloneWithOriginalValues() {
		DgfFglPreDtlsImpl dgfFglPreDtlsImpl = new DgfFglPreDtlsImpl();

		dgfFglPreDtlsImpl.setFglPrePrimaryId(
			this.<Long>getColumnOriginalValue("fglPrePrimaryId"));
		dgfFglPreDtlsImpl.setNationalId(
			this.<Long>getColumnOriginalValue("nationalId"));
		dgfFglPreDtlsImpl.setFglApplicationNo(
			this.<String>getColumnOriginalValue("fglApplicationNo"));
		dgfFglPreDtlsImpl.setApplicantName(
			this.<String>getColumnOriginalValue("applicantName"));
		dgfFglPreDtlsImpl.setTradeLicenseNo(
			this.<String>getColumnOriginalValue("tradeLicenseNo"));
		dgfFglPreDtlsImpl.setTradeLicenseExpiryDate(
			this.<Date>getColumnOriginalValue("tradeLicenseExpiryDate"));
		dgfFglPreDtlsImpl.setTradeLicenseIssuerCode(
			this.<String>getColumnOriginalValue("tradeLicenseIssuerCode"));
		dgfFglPreDtlsImpl.setTradeLicenseIssuerCity(
			this.<String>getColumnOriginalValue("tradeLicenseIssuerCity"));
		dgfFglPreDtlsImpl.setBusinessIdentificationNo(
			this.<String>getColumnOriginalValue("businessIdentificationNo"));
		dgfFglPreDtlsImpl.setTaxIdentificationNo(
			this.<String>getColumnOriginalValue("taxIdentificationNo"));
		dgfFglPreDtlsImpl.setBusinessName(
			this.<String>getColumnOriginalValue("businessName"));
		dgfFglPreDtlsImpl.setBusinessType(
			this.<String>getColumnOriginalValue("businessType"));
		dgfFglPreDtlsImpl.setPaymentChallanId(
			this.<Long>getColumnOriginalValue("paymentChallanId"));
		dgfFglPreDtlsImpl.setPaymentStatus(
			this.<Long>getColumnOriginalValue("paymentStatus"));
		dgfFglPreDtlsImpl.setReviewComments(
			this.<String>getColumnOriginalValue("reviewComments"));
		dgfFglPreDtlsImpl.setApplicationStatus(
			this.<Long>getColumnOriginalValue("applicationStatus"));
		dgfFglPreDtlsImpl.setApplicationStatusDate(
			this.<Date>getColumnOriginalValue("applicationStatusDate"));
		dgfFglPreDtlsImpl.setDuplicateLicenseReasonId(
			this.<Long>getColumnOriginalValue("duplicateLicenseReasonId"));
		dgfFglPreDtlsImpl.setComments(
			this.<String>getColumnOriginalValue("comments"));
		dgfFglPreDtlsImpl.setFglLicenseVersion(
			this.<Long>getColumnOriginalValue("fglLicenseVersion"));
		dgfFglPreDtlsImpl.setFoodGrainLicenseType(
			this.<String>getColumnOriginalValue("foodGrainLicenseType"));
		dgfFglPreDtlsImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		dgfFglPreDtlsImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		dgfFglPreDtlsImpl.setCreatedDate(
			this.<Date>getColumnOriginalValue("createdDate"));
		dgfFglPreDtlsImpl.setModifiedBy(
			this.<Long>getColumnOriginalValue("modifiedBy"));
		dgfFglPreDtlsImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		dgfFglPreDtlsImpl.setApplicationStatusById(
			this.<Long>getColumnOriginalValue("applicationStatusById"));
		dgfFglPreDtlsImpl.setPresentAddrId(
			this.<Long>getColumnOriginalValue("presentAddrId"));
		dgfFglPreDtlsImpl.setBussinessAddrId(
			this.<Long>getColumnOriginalValue("bussinessAddrId"));
		dgfFglPreDtlsImpl.setTradeLicenseDocId(
			this.<Long>getColumnOriginalValue("tradeLicenseDocId"));
		dgfFglPreDtlsImpl.setBussIdentfctDocId(
			this.<Long>getColumnOriginalValue("bussIdentfctDocId"));
		dgfFglPreDtlsImpl.setTaxIdentfctDocId(
			this.<Long>getColumnOriginalValue("taxIdentfctDocId"));
		dgfFglPreDtlsImpl.setBnkStatmtDocId(
			this.<Long>getColumnOriginalValue("bnkStatmtDocId"));
		dgfFglPreDtlsImpl.setStatus(
			this.<Integer>getColumnOriginalValue("status"));
		dgfFglPreDtlsImpl.setStatusByUserId(
			this.<Long>getColumnOriginalValue("statusByUserId"));
		dgfFglPreDtlsImpl.setStatusByUserName(
			this.<String>getColumnOriginalValue("statusByUserName"));
		dgfFglPreDtlsImpl.setStatusDate(
			this.<Date>getColumnOriginalValue("statusDate"));
		dgfFglPreDtlsImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		dgfFglPreDtlsImpl.setBirthDate(
			this.<Date>getColumnOriginalValue("birthDate"));
		dgfFglPreDtlsImpl.setFglApplicationType(
			this.<String>getColumnOriginalValue("fglApplicationType"));
		dgfFglPreDtlsImpl.setPhotographDocId(
			this.<Long>getColumnOriginalValue("photographDocId"));
		dgfFglPreDtlsImpl.setOtherReleventDocId(
			this.<Long>getColumnOriginalValue("otherReleventDocId"));
		dgfFglPreDtlsImpl.setElectricExemptionMemoId(
			this.<Long>getColumnOriginalValue("electricExemptionMemoId"));
		dgfFglPreDtlsImpl.setEnvClrMemoId(
			this.<Long>getColumnOriginalValue("envClrMemoId"));
		dgfFglPreDtlsImpl.setBstiClrMemoId(
			this.<Long>getColumnOriginalValue("bstiClrMemoId"));
		dgfFglPreDtlsImpl.setFireLicNumDocId(
			this.<Long>getColumnOriginalValue("fireLicNumDocId"));
		dgfFglPreDtlsImpl.setProductType(
			this.<String>getColumnOriginalValue("productType"));

		return dgfFglPreDtlsImpl;
	}

	@Override
	public int compareTo(DgfFglPreDtls dgfFglPreDtls) {
		long primaryKey = dgfFglPreDtls.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof DgfFglPreDtls)) {
			return false;
		}

		DgfFglPreDtls dgfFglPreDtls = (DgfFglPreDtls)object;

		long primaryKey = dgfFglPreDtls.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<DgfFglPreDtls> toCacheModel() {
		DgfFglPreDtlsCacheModel dgfFglPreDtlsCacheModel =
			new DgfFglPreDtlsCacheModel();

		dgfFglPreDtlsCacheModel.fglPrePrimaryId = getFglPrePrimaryId();

		dgfFglPreDtlsCacheModel.nationalId = getNationalId();

		dgfFglPreDtlsCacheModel.fglApplicationNo = getFglApplicationNo();

		String fglApplicationNo = dgfFglPreDtlsCacheModel.fglApplicationNo;

		if ((fglApplicationNo != null) && (fglApplicationNo.length() == 0)) {
			dgfFglPreDtlsCacheModel.fglApplicationNo = null;
		}

		dgfFglPreDtlsCacheModel.applicantName = getApplicantName();

		String applicantName = dgfFglPreDtlsCacheModel.applicantName;

		if ((applicantName != null) && (applicantName.length() == 0)) {
			dgfFglPreDtlsCacheModel.applicantName = null;
		}

		dgfFglPreDtlsCacheModel.tradeLicenseNo = getTradeLicenseNo();

		String tradeLicenseNo = dgfFglPreDtlsCacheModel.tradeLicenseNo;

		if ((tradeLicenseNo != null) && (tradeLicenseNo.length() == 0)) {
			dgfFglPreDtlsCacheModel.tradeLicenseNo = null;
		}

		Date tradeLicenseExpiryDate = getTradeLicenseExpiryDate();

		if (tradeLicenseExpiryDate != null) {
			dgfFglPreDtlsCacheModel.tradeLicenseExpiryDate =
				tradeLicenseExpiryDate.getTime();
		}
		else {
			dgfFglPreDtlsCacheModel.tradeLicenseExpiryDate = Long.MIN_VALUE;
		}

		dgfFglPreDtlsCacheModel.tradeLicenseIssuerCode =
			getTradeLicenseIssuerCode();

		String tradeLicenseIssuerCode =
			dgfFglPreDtlsCacheModel.tradeLicenseIssuerCode;

		if ((tradeLicenseIssuerCode != null) &&
			(tradeLicenseIssuerCode.length() == 0)) {

			dgfFglPreDtlsCacheModel.tradeLicenseIssuerCode = null;
		}

		dgfFglPreDtlsCacheModel.tradeLicenseIssuerCity =
			getTradeLicenseIssuerCity();

		String tradeLicenseIssuerCity =
			dgfFglPreDtlsCacheModel.tradeLicenseIssuerCity;

		if ((tradeLicenseIssuerCity != null) &&
			(tradeLicenseIssuerCity.length() == 0)) {

			dgfFglPreDtlsCacheModel.tradeLicenseIssuerCity = null;
		}

		dgfFglPreDtlsCacheModel.businessIdentificationNo =
			getBusinessIdentificationNo();

		String businessIdentificationNo =
			dgfFglPreDtlsCacheModel.businessIdentificationNo;

		if ((businessIdentificationNo != null) &&
			(businessIdentificationNo.length() == 0)) {

			dgfFglPreDtlsCacheModel.businessIdentificationNo = null;
		}

		dgfFglPreDtlsCacheModel.taxIdentificationNo = getTaxIdentificationNo();

		String taxIdentificationNo =
			dgfFglPreDtlsCacheModel.taxIdentificationNo;

		if ((taxIdentificationNo != null) &&
			(taxIdentificationNo.length() == 0)) {

			dgfFglPreDtlsCacheModel.taxIdentificationNo = null;
		}

		dgfFglPreDtlsCacheModel.businessName = getBusinessName();

		String businessName = dgfFglPreDtlsCacheModel.businessName;

		if ((businessName != null) && (businessName.length() == 0)) {
			dgfFglPreDtlsCacheModel.businessName = null;
		}

		dgfFglPreDtlsCacheModel.businessType = getBusinessType();

		String businessType = dgfFglPreDtlsCacheModel.businessType;

		if ((businessType != null) && (businessType.length() == 0)) {
			dgfFglPreDtlsCacheModel.businessType = null;
		}

		dgfFglPreDtlsCacheModel.paymentChallanId = getPaymentChallanId();

		dgfFglPreDtlsCacheModel.paymentStatus = getPaymentStatus();

		dgfFglPreDtlsCacheModel.reviewComments = getReviewComments();

		String reviewComments = dgfFglPreDtlsCacheModel.reviewComments;

		if ((reviewComments != null) && (reviewComments.length() == 0)) {
			dgfFglPreDtlsCacheModel.reviewComments = null;
		}

		dgfFglPreDtlsCacheModel.applicationStatus = getApplicationStatus();

		Date applicationStatusDate = getApplicationStatusDate();

		if (applicationStatusDate != null) {
			dgfFglPreDtlsCacheModel.applicationStatusDate =
				applicationStatusDate.getTime();
		}
		else {
			dgfFglPreDtlsCacheModel.applicationStatusDate = Long.MIN_VALUE;
		}

		dgfFglPreDtlsCacheModel.duplicateLicenseReasonId =
			getDuplicateLicenseReasonId();

		dgfFglPreDtlsCacheModel.comments = getComments();

		String comments = dgfFglPreDtlsCacheModel.comments;

		if ((comments != null) && (comments.length() == 0)) {
			dgfFglPreDtlsCacheModel.comments = null;
		}

		dgfFglPreDtlsCacheModel.fglLicenseVersion = getFglLicenseVersion();

		dgfFglPreDtlsCacheModel.foodGrainLicenseType =
			getFoodGrainLicenseType();

		String foodGrainLicenseType =
			dgfFglPreDtlsCacheModel.foodGrainLicenseType;

		if ((foodGrainLicenseType != null) &&
			(foodGrainLicenseType.length() == 0)) {

			dgfFglPreDtlsCacheModel.foodGrainLicenseType = null;
		}

		dgfFglPreDtlsCacheModel.groupId = getGroupId();

		dgfFglPreDtlsCacheModel.companyId = getCompanyId();

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			dgfFglPreDtlsCacheModel.createdDate = createdDate.getTime();
		}
		else {
			dgfFglPreDtlsCacheModel.createdDate = Long.MIN_VALUE;
		}

		dgfFglPreDtlsCacheModel.modifiedBy = getModifiedBy();

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			dgfFglPreDtlsCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			dgfFglPreDtlsCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		dgfFglPreDtlsCacheModel.applicationStatusById =
			getApplicationStatusById();

		dgfFglPreDtlsCacheModel.presentAddrId = getPresentAddrId();

		dgfFglPreDtlsCacheModel.bussinessAddrId = getBussinessAddrId();

		dgfFglPreDtlsCacheModel.tradeLicenseDocId = getTradeLicenseDocId();

		dgfFglPreDtlsCacheModel.bussIdentfctDocId = getBussIdentfctDocId();

		dgfFglPreDtlsCacheModel.taxIdentfctDocId = getTaxIdentfctDocId();

		dgfFglPreDtlsCacheModel.bnkStatmtDocId = getBnkStatmtDocId();

		dgfFglPreDtlsCacheModel.status = getStatus();

		dgfFglPreDtlsCacheModel.statusByUserId = getStatusByUserId();

		dgfFglPreDtlsCacheModel.statusByUserName = getStatusByUserName();

		String statusByUserName = dgfFglPreDtlsCacheModel.statusByUserName;

		if ((statusByUserName != null) && (statusByUserName.length() == 0)) {
			dgfFglPreDtlsCacheModel.statusByUserName = null;
		}

		Date statusDate = getStatusDate();

		if (statusDate != null) {
			dgfFglPreDtlsCacheModel.statusDate = statusDate.getTime();
		}
		else {
			dgfFglPreDtlsCacheModel.statusDate = Long.MIN_VALUE;
		}

		dgfFglPreDtlsCacheModel.userId = getUserId();

		Date birthDate = getBirthDate();

		if (birthDate != null) {
			dgfFglPreDtlsCacheModel.birthDate = birthDate.getTime();
		}
		else {
			dgfFglPreDtlsCacheModel.birthDate = Long.MIN_VALUE;
		}

		dgfFglPreDtlsCacheModel.fglApplicationType = getFglApplicationType();

		String fglApplicationType = dgfFglPreDtlsCacheModel.fglApplicationType;

		if ((fglApplicationType != null) &&
			(fglApplicationType.length() == 0)) {

			dgfFglPreDtlsCacheModel.fglApplicationType = null;
		}

		dgfFglPreDtlsCacheModel.photographDocId = getPhotographDocId();

		dgfFglPreDtlsCacheModel.otherReleventDocId = getOtherReleventDocId();

		dgfFglPreDtlsCacheModel.electricExemptionMemoId =
			getElectricExemptionMemoId();

		dgfFglPreDtlsCacheModel.envClrMemoId = getEnvClrMemoId();

		dgfFglPreDtlsCacheModel.bstiClrMemoId = getBstiClrMemoId();

		dgfFglPreDtlsCacheModel.fireLicNumDocId = getFireLicNumDocId();

		dgfFglPreDtlsCacheModel.productType = getProductType();

		String productType = dgfFglPreDtlsCacheModel.productType;

		if ((productType != null) && (productType.length() == 0)) {
			dgfFglPreDtlsCacheModel.productType = null;
		}

		return dgfFglPreDtlsCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<DgfFglPreDtls, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<DgfFglPreDtls, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<DgfFglPreDtls, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((DgfFglPreDtls)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, DgfFglPreDtls>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					DgfFglPreDtls.class, ModelWrapper.class);

	}

	private long _fglPrePrimaryId;
	private long _nationalId;
	private String _fglApplicationNo;
	private String _applicantName;
	private String _tradeLicenseNo;
	private Date _tradeLicenseExpiryDate;
	private String _tradeLicenseIssuerCode;
	private String _tradeLicenseIssuerCity;
	private String _businessIdentificationNo;
	private String _taxIdentificationNo;
	private String _businessName;
	private String _businessType;
	private long _paymentChallanId;
	private long _paymentStatus;
	private String _reviewComments;
	private long _applicationStatus;
	private Date _applicationStatusDate;
	private long _duplicateLicenseReasonId;
	private String _comments;
	private long _fglLicenseVersion;
	private String _foodGrainLicenseType;
	private long _groupId;
	private long _companyId;
	private Date _createdDate;
	private long _modifiedBy;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _applicationStatusById;
	private long _presentAddrId;
	private long _bussinessAddrId;
	private long _tradeLicenseDocId;
	private long _bussIdentfctDocId;
	private long _taxIdentfctDocId;
	private long _bnkStatmtDocId;
	private int _status;
	private long _statusByUserId;
	private String _statusByUserName;
	private Date _statusDate;
	private long _userId;
	private Date _birthDate;
	private String _fglApplicationType;
	private long _photographDocId;
	private long _otherReleventDocId;
	private long _electricExemptionMemoId;
	private long _envClrMemoId;
	private long _bstiClrMemoId;
	private long _fireLicNumDocId;
	private String _productType;

	public <T> T getColumnValue(String columnName) {
		Function<DgfFglPreDtls, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((DgfFglPreDtls)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("fglPrePrimaryId", _fglPrePrimaryId);
		_columnOriginalValues.put("nationalId", _nationalId);
		_columnOriginalValues.put("fglApplicationNo", _fglApplicationNo);
		_columnOriginalValues.put("applicantName", _applicantName);
		_columnOriginalValues.put("tradeLicenseNo", _tradeLicenseNo);
		_columnOriginalValues.put(
			"tradeLicenseExpiryDate", _tradeLicenseExpiryDate);
		_columnOriginalValues.put(
			"tradeLicenseIssuerCode", _tradeLicenseIssuerCode);
		_columnOriginalValues.put(
			"tradeLicenseIssuerCity", _tradeLicenseIssuerCity);
		_columnOriginalValues.put(
			"businessIdentificationNo", _businessIdentificationNo);
		_columnOriginalValues.put("taxIdentificationNo", _taxIdentificationNo);
		_columnOriginalValues.put("businessName", _businessName);
		_columnOriginalValues.put("businessType", _businessType);
		_columnOriginalValues.put("paymentChallanId", _paymentChallanId);
		_columnOriginalValues.put("paymentStatus", _paymentStatus);
		_columnOriginalValues.put("reviewComments", _reviewComments);
		_columnOriginalValues.put("applicationStatus", _applicationStatus);
		_columnOriginalValues.put(
			"applicationStatusDate", _applicationStatusDate);
		_columnOriginalValues.put(
			"duplicateLicenseReasonId", _duplicateLicenseReasonId);
		_columnOriginalValues.put("comments", _comments);
		_columnOriginalValues.put("fglLicenseVersion", _fglLicenseVersion);
		_columnOriginalValues.put(
			"foodGrainLicenseType", _foodGrainLicenseType);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("createdDate", _createdDate);
		_columnOriginalValues.put("modifiedBy", _modifiedBy);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put(
			"applicationStatusById", _applicationStatusById);
		_columnOriginalValues.put("presentAddrId", _presentAddrId);
		_columnOriginalValues.put("bussinessAddrId", _bussinessAddrId);
		_columnOriginalValues.put("tradeLicenseDocId", _tradeLicenseDocId);
		_columnOriginalValues.put("bussIdentfctDocId", _bussIdentfctDocId);
		_columnOriginalValues.put("taxIdentfctDocId", _taxIdentfctDocId);
		_columnOriginalValues.put("bnkStatmtDocId", _bnkStatmtDocId);
		_columnOriginalValues.put("status", _status);
		_columnOriginalValues.put("statusByUserId", _statusByUserId);
		_columnOriginalValues.put("statusByUserName", _statusByUserName);
		_columnOriginalValues.put("statusDate", _statusDate);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("birthDate", _birthDate);
		_columnOriginalValues.put("fglApplicationType", _fglApplicationType);
		_columnOriginalValues.put("photographDocId", _photographDocId);
		_columnOriginalValues.put("otherReleventDocId", _otherReleventDocId);
		_columnOriginalValues.put(
			"electricExemptionMemoId", _electricExemptionMemoId);
		_columnOriginalValues.put("envClrMemoId", _envClrMemoId);
		_columnOriginalValues.put("bstiClrMemoId", _bstiClrMemoId);
		_columnOriginalValues.put("fireLicNumDocId", _fireLicNumDocId);
		_columnOriginalValues.put("productType", _productType);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("fglPrePrimaryId", 1L);

		columnBitmasks.put("nationalId", 2L);

		columnBitmasks.put("fglApplicationNo", 4L);

		columnBitmasks.put("applicantName", 8L);

		columnBitmasks.put("tradeLicenseNo", 16L);

		columnBitmasks.put("tradeLicenseExpiryDate", 32L);

		columnBitmasks.put("tradeLicenseIssuerCode", 64L);

		columnBitmasks.put("tradeLicenseIssuerCity", 128L);

		columnBitmasks.put("businessIdentificationNo", 256L);

		columnBitmasks.put("taxIdentificationNo", 512L);

		columnBitmasks.put("businessName", 1024L);

		columnBitmasks.put("businessType", 2048L);

		columnBitmasks.put("paymentChallanId", 4096L);

		columnBitmasks.put("paymentStatus", 8192L);

		columnBitmasks.put("reviewComments", 16384L);

		columnBitmasks.put("applicationStatus", 32768L);

		columnBitmasks.put("applicationStatusDate", 65536L);

		columnBitmasks.put("duplicateLicenseReasonId", 131072L);

		columnBitmasks.put("comments", 262144L);

		columnBitmasks.put("fglLicenseVersion", 524288L);

		columnBitmasks.put("foodGrainLicenseType", 1048576L);

		columnBitmasks.put("groupId", 2097152L);

		columnBitmasks.put("companyId", 4194304L);

		columnBitmasks.put("createdDate", 8388608L);

		columnBitmasks.put("modifiedBy", 16777216L);

		columnBitmasks.put("modifiedDate", 33554432L);

		columnBitmasks.put("applicationStatusById", 67108864L);

		columnBitmasks.put("presentAddrId", 134217728L);

		columnBitmasks.put("bussinessAddrId", 268435456L);

		columnBitmasks.put("tradeLicenseDocId", 536870912L);

		columnBitmasks.put("bussIdentfctDocId", 1073741824L);

		columnBitmasks.put("taxIdentfctDocId", 2147483648L);

		columnBitmasks.put("bnkStatmtDocId", 4294967296L);

		columnBitmasks.put("status", 8589934592L);

		columnBitmasks.put("statusByUserId", 17179869184L);

		columnBitmasks.put("statusByUserName", 34359738368L);

		columnBitmasks.put("statusDate", 68719476736L);

		columnBitmasks.put("userId", 137438953472L);

		columnBitmasks.put("birthDate", 274877906944L);

		columnBitmasks.put("fglApplicationType", 549755813888L);

		columnBitmasks.put("photographDocId", 1099511627776L);

		columnBitmasks.put("otherReleventDocId", 2199023255552L);

		columnBitmasks.put("electricExemptionMemoId", 4398046511104L);

		columnBitmasks.put("envClrMemoId", 8796093022208L);

		columnBitmasks.put("bstiClrMemoId", 17592186044416L);

		columnBitmasks.put("fireLicNumDocId", 35184372088832L);

		columnBitmasks.put("productType", 70368744177664L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private DgfFglPreDtls _escapedModel;

}