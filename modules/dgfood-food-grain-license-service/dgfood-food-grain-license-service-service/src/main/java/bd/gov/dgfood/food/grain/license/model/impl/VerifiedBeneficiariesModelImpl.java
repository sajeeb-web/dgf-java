/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package bd.gov.dgfood.food.grain.license.model.impl;

import bd.gov.dgfood.food.grain.license.model.VerifiedBeneficiaries;
import bd.gov.dgfood.food.grain.license.model.VerifiedBeneficiariesModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the VerifiedBeneficiaries service. Represents a row in the &quot;dgf_verified_beneficiaries&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>VerifiedBeneficiariesModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VerifiedBeneficiariesImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see VerifiedBeneficiariesImpl
 * @generated
 */
@JSON(strict = true)
public class VerifiedBeneficiariesModelImpl
	extends BaseModelImpl<VerifiedBeneficiaries>
	implements VerifiedBeneficiariesModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a verified beneficiaries model instance should use the <code>VerifiedBeneficiaries</code> interface instead.
	 */
	public static final String TABLE_NAME = "dgf_verified_beneficiaries";

	public static final Object[][] TABLE_COLUMNS = {
		{"id", Types.BIGINT}, {"bsb_verified", Types.INTEGER},
		{"card_no", Types.BIGINT}, {"created_at", Types.TIMESTAMP},
		{"date_of_birth", Types.VARCHAR}, {"dealer_id", Types.BIGINT},
		{"district_id", Types.BIGINT}, {"division_id", Types.BIGINT},
		{"ec_beneficiary_name", Types.VARCHAR},
		{"ec_beneficiary_name_en", Types.VARCHAR},
		{"ec_blood_group", Types.VARCHAR}, {"ec_father_name", Types.VARCHAR},
		{"ec_gender", Types.VARCHAR}, {"ec_mobile_no", Types.VARCHAR},
		{"ec_mother_name", Types.VARCHAR}, {"ec_occupation", Types.VARCHAR},
		{"ec_pm_additional_mouza_moholla", Types.VARCHAR},
		{"ec_pm_additional_village_road", Types.VARCHAR},
		{"ec_pm_district", Types.VARCHAR}, {"ec_pm_division", Types.VARCHAR},
		{"ec_pm_home_holding_no", Types.VARCHAR},
		{"ec_pm_mouza_moholla", Types.VARCHAR},
		{"ec_pm_postal_code", Types.VARCHAR},
		{"ec_pm_post_office", Types.VARCHAR}, {"ec_pm_region", Types.VARCHAR},
		{"ec_pm_rmo", Types.VARCHAR}, {"ec_pm_union_ward", Types.VARCHAR},
		{"ec_pm_upazila", Types.VARCHAR}, {"ec_pm_village_road", Types.VARCHAR},
		{"ec_pm_ward_union_porishod", Types.VARCHAR},
		{"ec_pr_additional_mouza_moholla", Types.VARCHAR},
		{"ec_pr_additional_village_road", Types.VARCHAR},
		{"ec_pr_city_corp_municipality", Types.VARCHAR},
		{"ec_pr_district", Types.VARCHAR}, {"ec_pr_division", Types.VARCHAR},
		{"ec_pr_home_holding_no", Types.VARCHAR},
		{"ec_pr_mouza_moholla", Types.VARCHAR},
		{"ec_pr_postal_code", Types.VARCHAR},
		{"ec_pr_post_office", Types.VARCHAR}, {"ec_pr_region", Types.VARCHAR},
		{"ec_pr_rmo", Types.VARCHAR}, {"ec_pr_union_ward", Types.VARCHAR},
		{"ec_pr_upazila", Types.VARCHAR}, {"ec_pr_village_road", Types.VARCHAR},
		{"ec_pr_ward_union_porishod", Types.VARCHAR},
		{"ec_spouse_name", Types.VARCHAR}, {"ec_verified", Types.INTEGER},
		{"final_status", Types.BIGINT}, {"given_mobile_no", Types.VARCHAR},
		{"image_path_ec", Types.VARCHAR}, {"image_path_real", Types.VARCHAR},
		{"national_id", Types.VARCHAR}, {"new_card_number", Types.BIGINT},
		{"raw_data_id", Types.BIGINT}, {"remarks", Types.VARCHAR},
		{"second_national_id", Types.VARCHAR}, {"status", Types.BIGINT},
		{"ucf_verified_date", Types.TIMESTAMP}, {"union_id", Types.BIGINT},
		{"upazila_id", Types.BIGINT}, {"updated_at", Types.TIMESTAMP},
		{"verified_by", Types.BIGINT}, {"verified_date", Types.TIMESTAMP},
		{"vgd_status", Types.INTEGER}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("bsb_verified", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("card_no", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("created_at", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("date_of_birth", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dealer_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("district_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("division_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ec_beneficiary_name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_beneficiary_name_en", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_blood_group", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_father_name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_gender", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_mobile_no", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_mother_name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_occupation", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pm_additional_mouza_moholla", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pm_additional_village_road", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pm_district", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pm_division", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pm_home_holding_no", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pm_mouza_moholla", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pm_postal_code", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pm_post_office", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pm_region", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pm_rmo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pm_union_ward", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pm_upazila", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pm_village_road", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pm_ward_union_porishod", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_additional_mouza_moholla", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_additional_village_road", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_city_corp_municipality", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_district", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_division", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_home_holding_no", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_mouza_moholla", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_postal_code", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_post_office", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_region", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_rmo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_union_ward", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_upazila", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_village_road", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_ward_union_porishod", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_spouse_name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_verified", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("final_status", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("given_mobile_no", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("image_path_ec", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("image_path_real", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("national_id", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("new_card_number", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("raw_data_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("remarks", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("second_national_id", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("status", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ucf_verified_date", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("union_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("upazila_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("updated_at", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("verified_by", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("verified_date", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("vgd_status", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE =
		"create table dgf_verified_beneficiaries (id LONG not null primary key,bsb_verified INTEGER,card_no LONG,created_at DATE null,date_of_birth VARCHAR(255) null,dealer_id LONG,district_id LONG,division_id LONG,ec_beneficiary_name VARCHAR(500) null,ec_beneficiary_name_en VARCHAR(500) null,ec_blood_group VARCHAR(500) null,ec_father_name VARCHAR(500) null,ec_gender VARCHAR(500) null,ec_mobile_no VARCHAR(500) null,ec_mother_name VARCHAR(500) null,ec_occupation VARCHAR(200) null,ec_pm_additional_mouza_moholla VARCHAR(290) null,ec_pm_additional_village_road VARCHAR(250) null,ec_pm_district VARCHAR(250) null,ec_pm_division VARCHAR(50) null,ec_pm_home_holding_no VARCHAR(250) null,ec_pm_mouza_moholla VARCHAR(250) null,ec_pm_postal_code VARCHAR(50) null,ec_pm_post_office VARCHAR(250) null,ec_pm_region VARCHAR(250) null,ec_pm_rmo VARCHAR(250) null,ec_pm_union_ward VARCHAR(250) null,ec_pm_upazila VARCHAR(250) null,ec_pm_village_road VARCHAR(250) null,ec_pm_ward_union_porishod VARCHAR(250) null,ec_pr_additional_mouza_moholla VARCHAR(299) null,ec_pr_additional_village_road VARCHAR(250) null,ec_pr_city_corp_municipality VARCHAR(250) null,ec_pr_district VARCHAR(250) null,ec_pr_division VARCHAR(250) null,ec_pr_home_holding_no VARCHAR(250) null,ec_pr_mouza_moholla VARCHAR(250) null,ec_pr_postal_code VARCHAR(50) null,ec_pr_post_office VARCHAR(250) null,ec_pr_region VARCHAR(200) null,ec_pr_rmo VARCHAR(250) null,ec_pr_union_ward VARCHAR(250) null,ec_pr_upazila VARCHAR(250) null,ec_pr_village_road VARCHAR(250) null,ec_pr_ward_union_porishod VARCHAR(250) null,ec_spouse_name VARCHAR(500) null,ec_verified INTEGER,final_status LONG,given_mobile_no VARCHAR(500) null,image_path_ec VARCHAR(500) null,image_path_real VARCHAR(500) null,national_id VARCHAR(100) null,new_card_number LONG,raw_data_id LONG,remarks VARCHAR(500) null,second_national_id VARCHAR(100) null,status LONG,ucf_verified_date DATE null,union_id LONG,upazila_id LONG,updated_at DATE null,verified_by LONG,verified_date DATE null,vgd_status INTEGER)";

	public static final String TABLE_SQL_DROP =
		"drop table dgf_verified_beneficiaries";

	public static final String ORDER_BY_JPQL =
		" ORDER BY verifiedBeneficiaries.id ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY dgf_verified_beneficiaries.id ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public VerifiedBeneficiariesModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return VerifiedBeneficiaries.class;
	}

	@Override
	public String getModelClassName() {
		return VerifiedBeneficiaries.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<VerifiedBeneficiaries, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<VerifiedBeneficiaries, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<VerifiedBeneficiaries, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((VerifiedBeneficiaries)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<VerifiedBeneficiaries, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<VerifiedBeneficiaries, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(VerifiedBeneficiaries)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<VerifiedBeneficiaries, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<VerifiedBeneficiaries, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<VerifiedBeneficiaries, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<VerifiedBeneficiaries, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<VerifiedBeneficiaries, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String, Function<VerifiedBeneficiaries, Object>>();
		Map<String, BiConsumer<VerifiedBeneficiaries, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap
					<String, BiConsumer<VerifiedBeneficiaries, ?>>();

		attributeGetterFunctions.put("id", VerifiedBeneficiaries::getId);
		attributeSetterBiConsumers.put(
			"id",
			(BiConsumer<VerifiedBeneficiaries, Long>)
				VerifiedBeneficiaries::setId);
		attributeGetterFunctions.put(
			"bsbVerified", VerifiedBeneficiaries::getBsbVerified);
		attributeSetterBiConsumers.put(
			"bsbVerified",
			(BiConsumer<VerifiedBeneficiaries, Integer>)
				VerifiedBeneficiaries::setBsbVerified);
		attributeGetterFunctions.put(
			"cardNo", VerifiedBeneficiaries::getCardNo);
		attributeSetterBiConsumers.put(
			"cardNo",
			(BiConsumer<VerifiedBeneficiaries, Long>)
				VerifiedBeneficiaries::setCardNo);
		attributeGetterFunctions.put(
			"createdAt", VerifiedBeneficiaries::getCreatedAt);
		attributeSetterBiConsumers.put(
			"createdAt",
			(BiConsumer<VerifiedBeneficiaries, Date>)
				VerifiedBeneficiaries::setCreatedAt);
		attributeGetterFunctions.put(
			"dateOfBirth", VerifiedBeneficiaries::getDateOfBirth);
		attributeSetterBiConsumers.put(
			"dateOfBirth",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setDateOfBirth);
		attributeGetterFunctions.put(
			"dealerId", VerifiedBeneficiaries::getDealerId);
		attributeSetterBiConsumers.put(
			"dealerId",
			(BiConsumer<VerifiedBeneficiaries, Long>)
				VerifiedBeneficiaries::setDealerId);
		attributeGetterFunctions.put(
			"districtId", VerifiedBeneficiaries::getDistrictId);
		attributeSetterBiConsumers.put(
			"districtId",
			(BiConsumer<VerifiedBeneficiaries, Long>)
				VerifiedBeneficiaries::setDistrictId);
		attributeGetterFunctions.put(
			"divisionId", VerifiedBeneficiaries::getDivisionId);
		attributeSetterBiConsumers.put(
			"divisionId",
			(BiConsumer<VerifiedBeneficiaries, Long>)
				VerifiedBeneficiaries::setDivisionId);
		attributeGetterFunctions.put(
			"ecBeneficiaryName", VerifiedBeneficiaries::getEcBeneficiaryName);
		attributeSetterBiConsumers.put(
			"ecBeneficiaryName",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcBeneficiaryName);
		attributeGetterFunctions.put(
			"ecBeneficiaryNameEn",
			VerifiedBeneficiaries::getEcBeneficiaryNameEn);
		attributeSetterBiConsumers.put(
			"ecBeneficiaryNameEn",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcBeneficiaryNameEn);
		attributeGetterFunctions.put(
			"ecBloodGroup", VerifiedBeneficiaries::getEcBloodGroup);
		attributeSetterBiConsumers.put(
			"ecBloodGroup",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcBloodGroup);
		attributeGetterFunctions.put(
			"ecFatherName", VerifiedBeneficiaries::getEcFatherName);
		attributeSetterBiConsumers.put(
			"ecFatherName",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcFatherName);
		attributeGetterFunctions.put(
			"ecGender", VerifiedBeneficiaries::getEcGender);
		attributeSetterBiConsumers.put(
			"ecGender",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcGender);
		attributeGetterFunctions.put(
			"ecMobileNo", VerifiedBeneficiaries::getEcMobileNo);
		attributeSetterBiConsumers.put(
			"ecMobileNo",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcMobileNo);
		attributeGetterFunctions.put(
			"ecMotherName", VerifiedBeneficiaries::getEcMotherName);
		attributeSetterBiConsumers.put(
			"ecMotherName",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcMotherName);
		attributeGetterFunctions.put(
			"ecOccupation", VerifiedBeneficiaries::getEcOccupation);
		attributeSetterBiConsumers.put(
			"ecOccupation",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcOccupation);
		attributeGetterFunctions.put(
			"ecPmAdditionalMouzaMoholla",
			VerifiedBeneficiaries::getEcPmAdditionalMouzaMoholla);
		attributeSetterBiConsumers.put(
			"ecPmAdditionalMouzaMoholla",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPmAdditionalMouzaMoholla);
		attributeGetterFunctions.put(
			"ecPmAdditionalVillageRoad",
			VerifiedBeneficiaries::getEcPmAdditionalVillageRoad);
		attributeSetterBiConsumers.put(
			"ecPmAdditionalVillageRoad",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPmAdditionalVillageRoad);
		attributeGetterFunctions.put(
			"ecPmDistrict", VerifiedBeneficiaries::getEcPmDistrict);
		attributeSetterBiConsumers.put(
			"ecPmDistrict",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPmDistrict);
		attributeGetterFunctions.put(
			"ecPmDivision", VerifiedBeneficiaries::getEcPmDivision);
		attributeSetterBiConsumers.put(
			"ecPmDivision",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPmDivision);
		attributeGetterFunctions.put(
			"ecPmHomeHoldingNo", VerifiedBeneficiaries::getEcPmHomeHoldingNo);
		attributeSetterBiConsumers.put(
			"ecPmHomeHoldingNo",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPmHomeHoldingNo);
		attributeGetterFunctions.put(
			"ecPmMouzaMoholla", VerifiedBeneficiaries::getEcPmMouzaMoholla);
		attributeSetterBiConsumers.put(
			"ecPmMouzaMoholla",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPmMouzaMoholla);
		attributeGetterFunctions.put(
			"ecPmPostalCode", VerifiedBeneficiaries::getEcPmPostalCode);
		attributeSetterBiConsumers.put(
			"ecPmPostalCode",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPmPostalCode);
		attributeGetterFunctions.put(
			"ecPmPostOffice", VerifiedBeneficiaries::getEcPmPostOffice);
		attributeSetterBiConsumers.put(
			"ecPmPostOffice",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPmPostOffice);
		attributeGetterFunctions.put(
			"ecPmRegion", VerifiedBeneficiaries::getEcPmRegion);
		attributeSetterBiConsumers.put(
			"ecPmRegion",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPmRegion);
		attributeGetterFunctions.put(
			"ecPmRmo", VerifiedBeneficiaries::getEcPmRmo);
		attributeSetterBiConsumers.put(
			"ecPmRmo",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPmRmo);
		attributeGetterFunctions.put(
			"ecPmUnionWard", VerifiedBeneficiaries::getEcPmUnionWard);
		attributeSetterBiConsumers.put(
			"ecPmUnionWard",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPmUnionWard);
		attributeGetterFunctions.put(
			"ecPmUpazila", VerifiedBeneficiaries::getEcPmUpazila);
		attributeSetterBiConsumers.put(
			"ecPmUpazila",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPmUpazila);
		attributeGetterFunctions.put(
			"ecPmVillageRoad", VerifiedBeneficiaries::getEcPmVillageRoad);
		attributeSetterBiConsumers.put(
			"ecPmVillageRoad",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPmVillageRoad);
		attributeGetterFunctions.put(
			"ecPmWardUnionPorishod",
			VerifiedBeneficiaries::getEcPmWardUnionPorishod);
		attributeSetterBiConsumers.put(
			"ecPmWardUnionPorishod",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPmWardUnionPorishod);
		attributeGetterFunctions.put(
			"ecPrAdditionalMouzaMoholla",
			VerifiedBeneficiaries::getEcPrAdditionalMouzaMoholla);
		attributeSetterBiConsumers.put(
			"ecPrAdditionalMouzaMoholla",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPrAdditionalMouzaMoholla);
		attributeGetterFunctions.put(
			"ecPrAdditionalVillageRoad",
			VerifiedBeneficiaries::getEcPrAdditionalVillageRoad);
		attributeSetterBiConsumers.put(
			"ecPrAdditionalVillageRoad",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPrAdditionalVillageRoad);
		attributeGetterFunctions.put(
			"ecPrCityCorpMunicipality",
			VerifiedBeneficiaries::getEcPrCityCorpMunicipality);
		attributeSetterBiConsumers.put(
			"ecPrCityCorpMunicipality",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPrCityCorpMunicipality);
		attributeGetterFunctions.put(
			"ecPrDistrict", VerifiedBeneficiaries::getEcPrDistrict);
		attributeSetterBiConsumers.put(
			"ecPrDistrict",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPrDistrict);
		attributeGetterFunctions.put(
			"ecPrDivision", VerifiedBeneficiaries::getEcPrDivision);
		attributeSetterBiConsumers.put(
			"ecPrDivision",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPrDivision);
		attributeGetterFunctions.put(
			"ecPrHomeHoldingNo", VerifiedBeneficiaries::getEcPrHomeHoldingNo);
		attributeSetterBiConsumers.put(
			"ecPrHomeHoldingNo",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPrHomeHoldingNo);
		attributeGetterFunctions.put(
			"ecPrMouzaMoholla", VerifiedBeneficiaries::getEcPrMouzaMoholla);
		attributeSetterBiConsumers.put(
			"ecPrMouzaMoholla",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPrMouzaMoholla);
		attributeGetterFunctions.put(
			"ecPrPostalCode", VerifiedBeneficiaries::getEcPrPostalCode);
		attributeSetterBiConsumers.put(
			"ecPrPostalCode",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPrPostalCode);
		attributeGetterFunctions.put(
			"ecPrPostOffice", VerifiedBeneficiaries::getEcPrPostOffice);
		attributeSetterBiConsumers.put(
			"ecPrPostOffice",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPrPostOffice);
		attributeGetterFunctions.put(
			"ecPrRegion", VerifiedBeneficiaries::getEcPrRegion);
		attributeSetterBiConsumers.put(
			"ecPrRegion",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPrRegion);
		attributeGetterFunctions.put(
			"ecPrRmo", VerifiedBeneficiaries::getEcPrRmo);
		attributeSetterBiConsumers.put(
			"ecPrRmo",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPrRmo);
		attributeGetterFunctions.put(
			"ecPrUnionWard", VerifiedBeneficiaries::getEcPrUnionWard);
		attributeSetterBiConsumers.put(
			"ecPrUnionWard",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPrUnionWard);
		attributeGetterFunctions.put(
			"ecPrUpazila", VerifiedBeneficiaries::getEcPrUpazila);
		attributeSetterBiConsumers.put(
			"ecPrUpazila",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPrUpazila);
		attributeGetterFunctions.put(
			"ecPrVillageRoad", VerifiedBeneficiaries::getEcPrVillageRoad);
		attributeSetterBiConsumers.put(
			"ecPrVillageRoad",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPrVillageRoad);
		attributeGetterFunctions.put(
			"ecPrWardUnionPorishod",
			VerifiedBeneficiaries::getEcPrWardUnionPorishod);
		attributeSetterBiConsumers.put(
			"ecPrWardUnionPorishod",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcPrWardUnionPorishod);
		attributeGetterFunctions.put(
			"ecSpouseName", VerifiedBeneficiaries::getEcSpouseName);
		attributeSetterBiConsumers.put(
			"ecSpouseName",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setEcSpouseName);
		attributeGetterFunctions.put(
			"ecVerified", VerifiedBeneficiaries::getEcVerified);
		attributeSetterBiConsumers.put(
			"ecVerified",
			(BiConsumer<VerifiedBeneficiaries, Integer>)
				VerifiedBeneficiaries::setEcVerified);
		attributeGetterFunctions.put(
			"finalStatus", VerifiedBeneficiaries::getFinalStatus);
		attributeSetterBiConsumers.put(
			"finalStatus",
			(BiConsumer<VerifiedBeneficiaries, Long>)
				VerifiedBeneficiaries::setFinalStatus);
		attributeGetterFunctions.put(
			"givenMobileNo", VerifiedBeneficiaries::getGivenMobileNo);
		attributeSetterBiConsumers.put(
			"givenMobileNo",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setGivenMobileNo);
		attributeGetterFunctions.put(
			"imagePathEc", VerifiedBeneficiaries::getImagePathEc);
		attributeSetterBiConsumers.put(
			"imagePathEc",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setImagePathEc);
		attributeGetterFunctions.put(
			"imagePathReal", VerifiedBeneficiaries::getImagePathReal);
		attributeSetterBiConsumers.put(
			"imagePathReal",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setImagePathReal);
		attributeGetterFunctions.put(
			"nationalId", VerifiedBeneficiaries::getNationalId);
		attributeSetterBiConsumers.put(
			"nationalId",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setNationalId);
		attributeGetterFunctions.put(
			"newCardNumber", VerifiedBeneficiaries::getNewCardNumber);
		attributeSetterBiConsumers.put(
			"newCardNumber",
			(BiConsumer<VerifiedBeneficiaries, Long>)
				VerifiedBeneficiaries::setNewCardNumber);
		attributeGetterFunctions.put(
			"rawDataId", VerifiedBeneficiaries::getRawDataId);
		attributeSetterBiConsumers.put(
			"rawDataId",
			(BiConsumer<VerifiedBeneficiaries, Long>)
				VerifiedBeneficiaries::setRawDataId);
		attributeGetterFunctions.put(
			"remarks", VerifiedBeneficiaries::getRemarks);
		attributeSetterBiConsumers.put(
			"remarks",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setRemarks);
		attributeGetterFunctions.put(
			"secondNationalId", VerifiedBeneficiaries::getSecondNationalId);
		attributeSetterBiConsumers.put(
			"secondNationalId",
			(BiConsumer<VerifiedBeneficiaries, String>)
				VerifiedBeneficiaries::setSecondNationalId);
		attributeGetterFunctions.put(
			"status", VerifiedBeneficiaries::getStatus);
		attributeSetterBiConsumers.put(
			"status",
			(BiConsumer<VerifiedBeneficiaries, Long>)
				VerifiedBeneficiaries::setStatus);
		attributeGetterFunctions.put(
			"ucfVerifiedDate", VerifiedBeneficiaries::getUcfVerifiedDate);
		attributeSetterBiConsumers.put(
			"ucfVerifiedDate",
			(BiConsumer<VerifiedBeneficiaries, Date>)
				VerifiedBeneficiaries::setUcfVerifiedDate);
		attributeGetterFunctions.put(
			"unionId", VerifiedBeneficiaries::getUnionId);
		attributeSetterBiConsumers.put(
			"unionId",
			(BiConsumer<VerifiedBeneficiaries, Long>)
				VerifiedBeneficiaries::setUnionId);
		attributeGetterFunctions.put(
			"upazilaId", VerifiedBeneficiaries::getUpazilaId);
		attributeSetterBiConsumers.put(
			"upazilaId",
			(BiConsumer<VerifiedBeneficiaries, Long>)
				VerifiedBeneficiaries::setUpazilaId);
		attributeGetterFunctions.put(
			"updatedAt", VerifiedBeneficiaries::getUpdatedAt);
		attributeSetterBiConsumers.put(
			"updatedAt",
			(BiConsumer<VerifiedBeneficiaries, Date>)
				VerifiedBeneficiaries::setUpdatedAt);
		attributeGetterFunctions.put(
			"verifiedBy", VerifiedBeneficiaries::getVerifiedBy);
		attributeSetterBiConsumers.put(
			"verifiedBy",
			(BiConsumer<VerifiedBeneficiaries, Long>)
				VerifiedBeneficiaries::setVerifiedBy);
		attributeGetterFunctions.put(
			"verifiedDate", VerifiedBeneficiaries::getVerifiedDate);
		attributeSetterBiConsumers.put(
			"verifiedDate",
			(BiConsumer<VerifiedBeneficiaries, Date>)
				VerifiedBeneficiaries::setVerifiedDate);
		attributeGetterFunctions.put(
			"vgdStatus", VerifiedBeneficiaries::getVgdStatus);
		attributeSetterBiConsumers.put(
			"vgdStatus",
			(BiConsumer<VerifiedBeneficiaries, Integer>)
				VerifiedBeneficiaries::setVgdStatus);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_id = id;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("id"));
	}

	@JSON
	@Override
	public int getBsbVerified() {
		return _bsbVerified;
	}

	@Override
	public void setBsbVerified(int bsbVerified) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bsbVerified = bsbVerified;
	}

	@JSON
	@Override
	public long getCardNo() {
		return _cardNo;
	}

	@Override
	public void setCardNo(long cardNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_cardNo = cardNo;
	}

	@JSON
	@Override
	public Date getCreatedAt() {
		return _createdAt;
	}

	@Override
	public void setCreatedAt(Date createdAt) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createdAt = createdAt;
	}

	@JSON
	@Override
	public String getDateOfBirth() {
		if (_dateOfBirth == null) {
			return "";
		}
		else {
			return _dateOfBirth;
		}
	}

	@Override
	public void setDateOfBirth(String dateOfBirth) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dateOfBirth = dateOfBirth;
	}

	@JSON
	@Override
	public long getDealerId() {
		return _dealerId;
	}

	@Override
	public void setDealerId(long dealerId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dealerId = dealerId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalDealerId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("dealer_id"));
	}

	@JSON
	@Override
	public long getDistrictId() {
		return _districtId;
	}

	@Override
	public void setDistrictId(long districtId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_districtId = districtId;
	}

	@JSON
	@Override
	public long getDivisionId() {
		return _divisionId;
	}

	@Override
	public void setDivisionId(long divisionId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_divisionId = divisionId;
	}

	@JSON
	@Override
	public String getEcBeneficiaryName() {
		if (_ecBeneficiaryName == null) {
			return "";
		}
		else {
			return _ecBeneficiaryName;
		}
	}

	@Override
	public void setEcBeneficiaryName(String ecBeneficiaryName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecBeneficiaryName = ecBeneficiaryName;
	}

	@JSON
	@Override
	public String getEcBeneficiaryNameEn() {
		if (_ecBeneficiaryNameEn == null) {
			return "";
		}
		else {
			return _ecBeneficiaryNameEn;
		}
	}

	@Override
	public void setEcBeneficiaryNameEn(String ecBeneficiaryNameEn) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecBeneficiaryNameEn = ecBeneficiaryNameEn;
	}

	@JSON
	@Override
	public String getEcBloodGroup() {
		if (_ecBloodGroup == null) {
			return "";
		}
		else {
			return _ecBloodGroup;
		}
	}

	@Override
	public void setEcBloodGroup(String ecBloodGroup) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecBloodGroup = ecBloodGroup;
	}

	@JSON
	@Override
	public String getEcFatherName() {
		if (_ecFatherName == null) {
			return "";
		}
		else {
			return _ecFatherName;
		}
	}

	@Override
	public void setEcFatherName(String ecFatherName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecFatherName = ecFatherName;
	}

	@JSON
	@Override
	public String getEcGender() {
		if (_ecGender == null) {
			return "";
		}
		else {
			return _ecGender;
		}
	}

	@Override
	public void setEcGender(String ecGender) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecGender = ecGender;
	}

	@JSON
	@Override
	public String getEcMobileNo() {
		if (_ecMobileNo == null) {
			return "";
		}
		else {
			return _ecMobileNo;
		}
	}

	@Override
	public void setEcMobileNo(String ecMobileNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecMobileNo = ecMobileNo;
	}

	@JSON
	@Override
	public String getEcMotherName() {
		if (_ecMotherName == null) {
			return "";
		}
		else {
			return _ecMotherName;
		}
	}

	@Override
	public void setEcMotherName(String ecMotherName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecMotherName = ecMotherName;
	}

	@JSON
	@Override
	public String getEcOccupation() {
		if (_ecOccupation == null) {
			return "";
		}
		else {
			return _ecOccupation;
		}
	}

	@Override
	public void setEcOccupation(String ecOccupation) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecOccupation = ecOccupation;
	}

	@JSON
	@Override
	public String getEcPmAdditionalMouzaMoholla() {
		if (_ecPmAdditionalMouzaMoholla == null) {
			return "";
		}
		else {
			return _ecPmAdditionalMouzaMoholla;
		}
	}

	@Override
	public void setEcPmAdditionalMouzaMoholla(
		String ecPmAdditionalMouzaMoholla) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPmAdditionalMouzaMoholla = ecPmAdditionalMouzaMoholla;
	}

	@JSON
	@Override
	public String getEcPmAdditionalVillageRoad() {
		if (_ecPmAdditionalVillageRoad == null) {
			return "";
		}
		else {
			return _ecPmAdditionalVillageRoad;
		}
	}

	@Override
	public void setEcPmAdditionalVillageRoad(String ecPmAdditionalVillageRoad) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPmAdditionalVillageRoad = ecPmAdditionalVillageRoad;
	}

	@JSON
	@Override
	public String getEcPmDistrict() {
		if (_ecPmDistrict == null) {
			return "";
		}
		else {
			return _ecPmDistrict;
		}
	}

	@Override
	public void setEcPmDistrict(String ecPmDistrict) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPmDistrict = ecPmDistrict;
	}

	@JSON
	@Override
	public String getEcPmDivision() {
		if (_ecPmDivision == null) {
			return "";
		}
		else {
			return _ecPmDivision;
		}
	}

	@Override
	public void setEcPmDivision(String ecPmDivision) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPmDivision = ecPmDivision;
	}

	@JSON
	@Override
	public String getEcPmHomeHoldingNo() {
		if (_ecPmHomeHoldingNo == null) {
			return "";
		}
		else {
			return _ecPmHomeHoldingNo;
		}
	}

	@Override
	public void setEcPmHomeHoldingNo(String ecPmHomeHoldingNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPmHomeHoldingNo = ecPmHomeHoldingNo;
	}

	@JSON
	@Override
	public String getEcPmMouzaMoholla() {
		if (_ecPmMouzaMoholla == null) {
			return "";
		}
		else {
			return _ecPmMouzaMoholla;
		}
	}

	@Override
	public void setEcPmMouzaMoholla(String ecPmMouzaMoholla) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPmMouzaMoholla = ecPmMouzaMoholla;
	}

	@JSON
	@Override
	public String getEcPmPostalCode() {
		if (_ecPmPostalCode == null) {
			return "";
		}
		else {
			return _ecPmPostalCode;
		}
	}

	@Override
	public void setEcPmPostalCode(String ecPmPostalCode) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPmPostalCode = ecPmPostalCode;
	}

	@JSON
	@Override
	public String getEcPmPostOffice() {
		if (_ecPmPostOffice == null) {
			return "";
		}
		else {
			return _ecPmPostOffice;
		}
	}

	@Override
	public void setEcPmPostOffice(String ecPmPostOffice) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPmPostOffice = ecPmPostOffice;
	}

	@JSON
	@Override
	public String getEcPmRegion() {
		if (_ecPmRegion == null) {
			return "";
		}
		else {
			return _ecPmRegion;
		}
	}

	@Override
	public void setEcPmRegion(String ecPmRegion) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPmRegion = ecPmRegion;
	}

	@JSON
	@Override
	public String getEcPmRmo() {
		if (_ecPmRmo == null) {
			return "";
		}
		else {
			return _ecPmRmo;
		}
	}

	@Override
	public void setEcPmRmo(String ecPmRmo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPmRmo = ecPmRmo;
	}

	@JSON
	@Override
	public String getEcPmUnionWard() {
		if (_ecPmUnionWard == null) {
			return "";
		}
		else {
			return _ecPmUnionWard;
		}
	}

	@Override
	public void setEcPmUnionWard(String ecPmUnionWard) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPmUnionWard = ecPmUnionWard;
	}

	@JSON
	@Override
	public String getEcPmUpazila() {
		if (_ecPmUpazila == null) {
			return "";
		}
		else {
			return _ecPmUpazila;
		}
	}

	@Override
	public void setEcPmUpazila(String ecPmUpazila) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPmUpazila = ecPmUpazila;
	}

	@JSON
	@Override
	public String getEcPmVillageRoad() {
		if (_ecPmVillageRoad == null) {
			return "";
		}
		else {
			return _ecPmVillageRoad;
		}
	}

	@Override
	public void setEcPmVillageRoad(String ecPmVillageRoad) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPmVillageRoad = ecPmVillageRoad;
	}

	@JSON
	@Override
	public String getEcPmWardUnionPorishod() {
		if (_ecPmWardUnionPorishod == null) {
			return "";
		}
		else {
			return _ecPmWardUnionPorishod;
		}
	}

	@Override
	public void setEcPmWardUnionPorishod(String ecPmWardUnionPorishod) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPmWardUnionPorishod = ecPmWardUnionPorishod;
	}

	@JSON
	@Override
	public String getEcPrAdditionalMouzaMoholla() {
		if (_ecPrAdditionalMouzaMoholla == null) {
			return "";
		}
		else {
			return _ecPrAdditionalMouzaMoholla;
		}
	}

	@Override
	public void setEcPrAdditionalMouzaMoholla(
		String ecPrAdditionalMouzaMoholla) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrAdditionalMouzaMoholla = ecPrAdditionalMouzaMoholla;
	}

	@JSON
	@Override
	public String getEcPrAdditionalVillageRoad() {
		if (_ecPrAdditionalVillageRoad == null) {
			return "";
		}
		else {
			return _ecPrAdditionalVillageRoad;
		}
	}

	@Override
	public void setEcPrAdditionalVillageRoad(String ecPrAdditionalVillageRoad) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrAdditionalVillageRoad = ecPrAdditionalVillageRoad;
	}

	@JSON
	@Override
	public String getEcPrCityCorpMunicipality() {
		if (_ecPrCityCorpMunicipality == null) {
			return "";
		}
		else {
			return _ecPrCityCorpMunicipality;
		}
	}

	@Override
	public void setEcPrCityCorpMunicipality(String ecPrCityCorpMunicipality) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrCityCorpMunicipality = ecPrCityCorpMunicipality;
	}

	@JSON
	@Override
	public String getEcPrDistrict() {
		if (_ecPrDistrict == null) {
			return "";
		}
		else {
			return _ecPrDistrict;
		}
	}

	@Override
	public void setEcPrDistrict(String ecPrDistrict) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrDistrict = ecPrDistrict;
	}

	@JSON
	@Override
	public String getEcPrDivision() {
		if (_ecPrDivision == null) {
			return "";
		}
		else {
			return _ecPrDivision;
		}
	}

	@Override
	public void setEcPrDivision(String ecPrDivision) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrDivision = ecPrDivision;
	}

	@JSON
	@Override
	public String getEcPrHomeHoldingNo() {
		if (_ecPrHomeHoldingNo == null) {
			return "";
		}
		else {
			return _ecPrHomeHoldingNo;
		}
	}

	@Override
	public void setEcPrHomeHoldingNo(String ecPrHomeHoldingNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrHomeHoldingNo = ecPrHomeHoldingNo;
	}

	@JSON
	@Override
	public String getEcPrMouzaMoholla() {
		if (_ecPrMouzaMoholla == null) {
			return "";
		}
		else {
			return _ecPrMouzaMoholla;
		}
	}

	@Override
	public void setEcPrMouzaMoholla(String ecPrMouzaMoholla) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrMouzaMoholla = ecPrMouzaMoholla;
	}

	@JSON
	@Override
	public String getEcPrPostalCode() {
		if (_ecPrPostalCode == null) {
			return "";
		}
		else {
			return _ecPrPostalCode;
		}
	}

	@Override
	public void setEcPrPostalCode(String ecPrPostalCode) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrPostalCode = ecPrPostalCode;
	}

	@JSON
	@Override
	public String getEcPrPostOffice() {
		if (_ecPrPostOffice == null) {
			return "";
		}
		else {
			return _ecPrPostOffice;
		}
	}

	@Override
	public void setEcPrPostOffice(String ecPrPostOffice) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrPostOffice = ecPrPostOffice;
	}

	@JSON
	@Override
	public String getEcPrRegion() {
		if (_ecPrRegion == null) {
			return "";
		}
		else {
			return _ecPrRegion;
		}
	}

	@Override
	public void setEcPrRegion(String ecPrRegion) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrRegion = ecPrRegion;
	}

	@JSON
	@Override
	public String getEcPrRmo() {
		if (_ecPrRmo == null) {
			return "";
		}
		else {
			return _ecPrRmo;
		}
	}

	@Override
	public void setEcPrRmo(String ecPrRmo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrRmo = ecPrRmo;
	}

	@JSON
	@Override
	public String getEcPrUnionWard() {
		if (_ecPrUnionWard == null) {
			return "";
		}
		else {
			return _ecPrUnionWard;
		}
	}

	@Override
	public void setEcPrUnionWard(String ecPrUnionWard) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrUnionWard = ecPrUnionWard;
	}

	@JSON
	@Override
	public String getEcPrUpazila() {
		if (_ecPrUpazila == null) {
			return "";
		}
		else {
			return _ecPrUpazila;
		}
	}

	@Override
	public void setEcPrUpazila(String ecPrUpazila) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrUpazila = ecPrUpazila;
	}

	@JSON
	@Override
	public String getEcPrVillageRoad() {
		if (_ecPrVillageRoad == null) {
			return "";
		}
		else {
			return _ecPrVillageRoad;
		}
	}

	@Override
	public void setEcPrVillageRoad(String ecPrVillageRoad) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrVillageRoad = ecPrVillageRoad;
	}

	@JSON
	@Override
	public String getEcPrWardUnionPorishod() {
		if (_ecPrWardUnionPorishod == null) {
			return "";
		}
		else {
			return _ecPrWardUnionPorishod;
		}
	}

	@Override
	public void setEcPrWardUnionPorishod(String ecPrWardUnionPorishod) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrWardUnionPorishod = ecPrWardUnionPorishod;
	}

	@JSON
	@Override
	public String getEcSpouseName() {
		if (_ecSpouseName == null) {
			return "";
		}
		else {
			return _ecSpouseName;
		}
	}

	@Override
	public void setEcSpouseName(String ecSpouseName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecSpouseName = ecSpouseName;
	}

	@JSON
	@Override
	public int getEcVerified() {
		return _ecVerified;
	}

	@Override
	public void setEcVerified(int ecVerified) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecVerified = ecVerified;
	}

	@JSON
	@Override
	public long getFinalStatus() {
		return _finalStatus;
	}

	@Override
	public void setFinalStatus(long finalStatus) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_finalStatus = finalStatus;
	}

	@JSON
	@Override
	public String getGivenMobileNo() {
		if (_givenMobileNo == null) {
			return "";
		}
		else {
			return _givenMobileNo;
		}
	}

	@Override
	public void setGivenMobileNo(String givenMobileNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_givenMobileNo = givenMobileNo;
	}

	@JSON
	@Override
	public String getImagePathEc() {
		if (_imagePathEc == null) {
			return "";
		}
		else {
			return _imagePathEc;
		}
	}

	@Override
	public void setImagePathEc(String imagePathEc) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_imagePathEc = imagePathEc;
	}

	@JSON
	@Override
	public String getImagePathReal() {
		if (_imagePathReal == null) {
			return "";
		}
		else {
			return _imagePathReal;
		}
	}

	@Override
	public void setImagePathReal(String imagePathReal) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_imagePathReal = imagePathReal;
	}

	@JSON
	@Override
	public String getNationalId() {
		if (_nationalId == null) {
			return "";
		}
		else {
			return _nationalId;
		}
	}

	@Override
	public void setNationalId(String nationalId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nationalId = nationalId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalNationalId() {
		return getColumnOriginalValue("national_id");
	}

	@JSON
	@Override
	public long getNewCardNumber() {
		return _newCardNumber;
	}

	@Override
	public void setNewCardNumber(long newCardNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_newCardNumber = newCardNumber;
	}

	@JSON
	@Override
	public long getRawDataId() {
		return _rawDataId;
	}

	@Override
	public void setRawDataId(long rawDataId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_rawDataId = rawDataId;
	}

	@JSON
	@Override
	public String getRemarks() {
		if (_remarks == null) {
			return "";
		}
		else {
			return _remarks;
		}
	}

	@Override
	public void setRemarks(String remarks) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_remarks = remarks;
	}

	@JSON
	@Override
	public String getSecondNationalId() {
		if (_secondNationalId == null) {
			return "";
		}
		else {
			return _secondNationalId;
		}
	}

	@Override
	public void setSecondNationalId(String secondNationalId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_secondNationalId = secondNationalId;
	}

	@JSON
	@Override
	public long getStatus() {
		return _status;
	}

	@Override
	public void setStatus(long status) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_status = status;
	}

	@JSON
	@Override
	public Date getUcfVerifiedDate() {
		return _ucfVerifiedDate;
	}

	@Override
	public void setUcfVerifiedDate(Date ucfVerifiedDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ucfVerifiedDate = ucfVerifiedDate;
	}

	@JSON
	@Override
	public long getUnionId() {
		return _unionId;
	}

	@Override
	public void setUnionId(long unionId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_unionId = unionId;
	}

	@JSON
	@Override
	public long getUpazilaId() {
		return _upazilaId;
	}

	@Override
	public void setUpazilaId(long upazilaId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_upazilaId = upazilaId;
	}

	@JSON
	@Override
	public Date getUpdatedAt() {
		return _updatedAt;
	}

	@Override
	public void setUpdatedAt(Date updatedAt) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_updatedAt = updatedAt;
	}

	@JSON
	@Override
	public long getVerifiedBy() {
		return _verifiedBy;
	}

	@Override
	public void setVerifiedBy(long verifiedBy) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_verifiedBy = verifiedBy;
	}

	@JSON
	@Override
	public Date getVerifiedDate() {
		return _verifiedDate;
	}

	@Override
	public void setVerifiedDate(Date verifiedDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_verifiedDate = verifiedDate;
	}

	@JSON
	@Override
	public int getVgdStatus() {
		return _vgdStatus;
	}

	@Override
	public void setVgdStatus(int vgdStatus) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_vgdStatus = vgdStatus;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, VerifiedBeneficiaries.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public VerifiedBeneficiaries toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, VerifiedBeneficiaries>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		VerifiedBeneficiariesImpl verifiedBeneficiariesImpl =
			new VerifiedBeneficiariesImpl();

		verifiedBeneficiariesImpl.setId(getId());
		verifiedBeneficiariesImpl.setBsbVerified(getBsbVerified());
		verifiedBeneficiariesImpl.setCardNo(getCardNo());
		verifiedBeneficiariesImpl.setCreatedAt(getCreatedAt());
		verifiedBeneficiariesImpl.setDateOfBirth(getDateOfBirth());
		verifiedBeneficiariesImpl.setDealerId(getDealerId());
		verifiedBeneficiariesImpl.setDistrictId(getDistrictId());
		verifiedBeneficiariesImpl.setDivisionId(getDivisionId());
		verifiedBeneficiariesImpl.setEcBeneficiaryName(getEcBeneficiaryName());
		verifiedBeneficiariesImpl.setEcBeneficiaryNameEn(
			getEcBeneficiaryNameEn());
		verifiedBeneficiariesImpl.setEcBloodGroup(getEcBloodGroup());
		verifiedBeneficiariesImpl.setEcFatherName(getEcFatherName());
		verifiedBeneficiariesImpl.setEcGender(getEcGender());
		verifiedBeneficiariesImpl.setEcMobileNo(getEcMobileNo());
		verifiedBeneficiariesImpl.setEcMotherName(getEcMotherName());
		verifiedBeneficiariesImpl.setEcOccupation(getEcOccupation());
		verifiedBeneficiariesImpl.setEcPmAdditionalMouzaMoholla(
			getEcPmAdditionalMouzaMoholla());
		verifiedBeneficiariesImpl.setEcPmAdditionalVillageRoad(
			getEcPmAdditionalVillageRoad());
		verifiedBeneficiariesImpl.setEcPmDistrict(getEcPmDistrict());
		verifiedBeneficiariesImpl.setEcPmDivision(getEcPmDivision());
		verifiedBeneficiariesImpl.setEcPmHomeHoldingNo(getEcPmHomeHoldingNo());
		verifiedBeneficiariesImpl.setEcPmMouzaMoholla(getEcPmMouzaMoholla());
		verifiedBeneficiariesImpl.setEcPmPostalCode(getEcPmPostalCode());
		verifiedBeneficiariesImpl.setEcPmPostOffice(getEcPmPostOffice());
		verifiedBeneficiariesImpl.setEcPmRegion(getEcPmRegion());
		verifiedBeneficiariesImpl.setEcPmRmo(getEcPmRmo());
		verifiedBeneficiariesImpl.setEcPmUnionWard(getEcPmUnionWard());
		verifiedBeneficiariesImpl.setEcPmUpazila(getEcPmUpazila());
		verifiedBeneficiariesImpl.setEcPmVillageRoad(getEcPmVillageRoad());
		verifiedBeneficiariesImpl.setEcPmWardUnionPorishod(
			getEcPmWardUnionPorishod());
		verifiedBeneficiariesImpl.setEcPrAdditionalMouzaMoholla(
			getEcPrAdditionalMouzaMoholla());
		verifiedBeneficiariesImpl.setEcPrAdditionalVillageRoad(
			getEcPrAdditionalVillageRoad());
		verifiedBeneficiariesImpl.setEcPrCityCorpMunicipality(
			getEcPrCityCorpMunicipality());
		verifiedBeneficiariesImpl.setEcPrDistrict(getEcPrDistrict());
		verifiedBeneficiariesImpl.setEcPrDivision(getEcPrDivision());
		verifiedBeneficiariesImpl.setEcPrHomeHoldingNo(getEcPrHomeHoldingNo());
		verifiedBeneficiariesImpl.setEcPrMouzaMoholla(getEcPrMouzaMoholla());
		verifiedBeneficiariesImpl.setEcPrPostalCode(getEcPrPostalCode());
		verifiedBeneficiariesImpl.setEcPrPostOffice(getEcPrPostOffice());
		verifiedBeneficiariesImpl.setEcPrRegion(getEcPrRegion());
		verifiedBeneficiariesImpl.setEcPrRmo(getEcPrRmo());
		verifiedBeneficiariesImpl.setEcPrUnionWard(getEcPrUnionWard());
		verifiedBeneficiariesImpl.setEcPrUpazila(getEcPrUpazila());
		verifiedBeneficiariesImpl.setEcPrVillageRoad(getEcPrVillageRoad());
		verifiedBeneficiariesImpl.setEcPrWardUnionPorishod(
			getEcPrWardUnionPorishod());
		verifiedBeneficiariesImpl.setEcSpouseName(getEcSpouseName());
		verifiedBeneficiariesImpl.setEcVerified(getEcVerified());
		verifiedBeneficiariesImpl.setFinalStatus(getFinalStatus());
		verifiedBeneficiariesImpl.setGivenMobileNo(getGivenMobileNo());
		verifiedBeneficiariesImpl.setImagePathEc(getImagePathEc());
		verifiedBeneficiariesImpl.setImagePathReal(getImagePathReal());
		verifiedBeneficiariesImpl.setNationalId(getNationalId());
		verifiedBeneficiariesImpl.setNewCardNumber(getNewCardNumber());
		verifiedBeneficiariesImpl.setRawDataId(getRawDataId());
		verifiedBeneficiariesImpl.setRemarks(getRemarks());
		verifiedBeneficiariesImpl.setSecondNationalId(getSecondNationalId());
		verifiedBeneficiariesImpl.setStatus(getStatus());
		verifiedBeneficiariesImpl.setUcfVerifiedDate(getUcfVerifiedDate());
		verifiedBeneficiariesImpl.setUnionId(getUnionId());
		verifiedBeneficiariesImpl.setUpazilaId(getUpazilaId());
		verifiedBeneficiariesImpl.setUpdatedAt(getUpdatedAt());
		verifiedBeneficiariesImpl.setVerifiedBy(getVerifiedBy());
		verifiedBeneficiariesImpl.setVerifiedDate(getVerifiedDate());
		verifiedBeneficiariesImpl.setVgdStatus(getVgdStatus());

		verifiedBeneficiariesImpl.resetOriginalValues();

		return verifiedBeneficiariesImpl;
	}

	@Override
	public VerifiedBeneficiaries cloneWithOriginalValues() {
		VerifiedBeneficiariesImpl verifiedBeneficiariesImpl =
			new VerifiedBeneficiariesImpl();

		verifiedBeneficiariesImpl.setId(
			this.<Long>getColumnOriginalValue("id"));
		verifiedBeneficiariesImpl.setBsbVerified(
			this.<Integer>getColumnOriginalValue("bsb_verified"));
		verifiedBeneficiariesImpl.setCardNo(
			this.<Long>getColumnOriginalValue("card_no"));
		verifiedBeneficiariesImpl.setCreatedAt(
			this.<Date>getColumnOriginalValue("created_at"));
		verifiedBeneficiariesImpl.setDateOfBirth(
			this.<String>getColumnOriginalValue("date_of_birth"));
		verifiedBeneficiariesImpl.setDealerId(
			this.<Long>getColumnOriginalValue("dealer_id"));
		verifiedBeneficiariesImpl.setDistrictId(
			this.<Long>getColumnOriginalValue("district_id"));
		verifiedBeneficiariesImpl.setDivisionId(
			this.<Long>getColumnOriginalValue("division_id"));
		verifiedBeneficiariesImpl.setEcBeneficiaryName(
			this.<String>getColumnOriginalValue("ec_beneficiary_name"));
		verifiedBeneficiariesImpl.setEcBeneficiaryNameEn(
			this.<String>getColumnOriginalValue("ec_beneficiary_name_en"));
		verifiedBeneficiariesImpl.setEcBloodGroup(
			this.<String>getColumnOriginalValue("ec_blood_group"));
		verifiedBeneficiariesImpl.setEcFatherName(
			this.<String>getColumnOriginalValue("ec_father_name"));
		verifiedBeneficiariesImpl.setEcGender(
			this.<String>getColumnOriginalValue("ec_gender"));
		verifiedBeneficiariesImpl.setEcMobileNo(
			this.<String>getColumnOriginalValue("ec_mobile_no"));
		verifiedBeneficiariesImpl.setEcMotherName(
			this.<String>getColumnOriginalValue("ec_mother_name"));
		verifiedBeneficiariesImpl.setEcOccupation(
			this.<String>getColumnOriginalValue("ec_occupation"));
		verifiedBeneficiariesImpl.setEcPmAdditionalMouzaMoholla(
			this.<String>getColumnOriginalValue(
				"ec_pm_additional_mouza_moholla"));
		verifiedBeneficiariesImpl.setEcPmAdditionalVillageRoad(
			this.<String>getColumnOriginalValue(
				"ec_pm_additional_village_road"));
		verifiedBeneficiariesImpl.setEcPmDistrict(
			this.<String>getColumnOriginalValue("ec_pm_district"));
		verifiedBeneficiariesImpl.setEcPmDivision(
			this.<String>getColumnOriginalValue("ec_pm_division"));
		verifiedBeneficiariesImpl.setEcPmHomeHoldingNo(
			this.<String>getColumnOriginalValue("ec_pm_home_holding_no"));
		verifiedBeneficiariesImpl.setEcPmMouzaMoholla(
			this.<String>getColumnOriginalValue("ec_pm_mouza_moholla"));
		verifiedBeneficiariesImpl.setEcPmPostalCode(
			this.<String>getColumnOriginalValue("ec_pm_postal_code"));
		verifiedBeneficiariesImpl.setEcPmPostOffice(
			this.<String>getColumnOriginalValue("ec_pm_post_office"));
		verifiedBeneficiariesImpl.setEcPmRegion(
			this.<String>getColumnOriginalValue("ec_pm_region"));
		verifiedBeneficiariesImpl.setEcPmRmo(
			this.<String>getColumnOriginalValue("ec_pm_rmo"));
		verifiedBeneficiariesImpl.setEcPmUnionWard(
			this.<String>getColumnOriginalValue("ec_pm_union_ward"));
		verifiedBeneficiariesImpl.setEcPmUpazila(
			this.<String>getColumnOriginalValue("ec_pm_upazila"));
		verifiedBeneficiariesImpl.setEcPmVillageRoad(
			this.<String>getColumnOriginalValue("ec_pm_village_road"));
		verifiedBeneficiariesImpl.setEcPmWardUnionPorishod(
			this.<String>getColumnOriginalValue("ec_pm_ward_union_porishod"));
		verifiedBeneficiariesImpl.setEcPrAdditionalMouzaMoholla(
			this.<String>getColumnOriginalValue(
				"ec_pr_additional_mouza_moholla"));
		verifiedBeneficiariesImpl.setEcPrAdditionalVillageRoad(
			this.<String>getColumnOriginalValue(
				"ec_pr_additional_village_road"));
		verifiedBeneficiariesImpl.setEcPrCityCorpMunicipality(
			this.<String>getColumnOriginalValue(
				"ec_pr_city_corp_municipality"));
		verifiedBeneficiariesImpl.setEcPrDistrict(
			this.<String>getColumnOriginalValue("ec_pr_district"));
		verifiedBeneficiariesImpl.setEcPrDivision(
			this.<String>getColumnOriginalValue("ec_pr_division"));
		verifiedBeneficiariesImpl.setEcPrHomeHoldingNo(
			this.<String>getColumnOriginalValue("ec_pr_home_holding_no"));
		verifiedBeneficiariesImpl.setEcPrMouzaMoholla(
			this.<String>getColumnOriginalValue("ec_pr_mouza_moholla"));
		verifiedBeneficiariesImpl.setEcPrPostalCode(
			this.<String>getColumnOriginalValue("ec_pr_postal_code"));
		verifiedBeneficiariesImpl.setEcPrPostOffice(
			this.<String>getColumnOriginalValue("ec_pr_post_office"));
		verifiedBeneficiariesImpl.setEcPrRegion(
			this.<String>getColumnOriginalValue("ec_pr_region"));
		verifiedBeneficiariesImpl.setEcPrRmo(
			this.<String>getColumnOriginalValue("ec_pr_rmo"));
		verifiedBeneficiariesImpl.setEcPrUnionWard(
			this.<String>getColumnOriginalValue("ec_pr_union_ward"));
		verifiedBeneficiariesImpl.setEcPrUpazila(
			this.<String>getColumnOriginalValue("ec_pr_upazila"));
		verifiedBeneficiariesImpl.setEcPrVillageRoad(
			this.<String>getColumnOriginalValue("ec_pr_village_road"));
		verifiedBeneficiariesImpl.setEcPrWardUnionPorishod(
			this.<String>getColumnOriginalValue("ec_pr_ward_union_porishod"));
		verifiedBeneficiariesImpl.setEcSpouseName(
			this.<String>getColumnOriginalValue("ec_spouse_name"));
		verifiedBeneficiariesImpl.setEcVerified(
			this.<Integer>getColumnOriginalValue("ec_verified"));
		verifiedBeneficiariesImpl.setFinalStatus(
			this.<Long>getColumnOriginalValue("final_status"));
		verifiedBeneficiariesImpl.setGivenMobileNo(
			this.<String>getColumnOriginalValue("given_mobile_no"));
		verifiedBeneficiariesImpl.setImagePathEc(
			this.<String>getColumnOriginalValue("image_path_ec"));
		verifiedBeneficiariesImpl.setImagePathReal(
			this.<String>getColumnOriginalValue("image_path_real"));
		verifiedBeneficiariesImpl.setNationalId(
			this.<String>getColumnOriginalValue("national_id"));
		verifiedBeneficiariesImpl.setNewCardNumber(
			this.<Long>getColumnOriginalValue("new_card_number"));
		verifiedBeneficiariesImpl.setRawDataId(
			this.<Long>getColumnOriginalValue("raw_data_id"));
		verifiedBeneficiariesImpl.setRemarks(
			this.<String>getColumnOriginalValue("remarks"));
		verifiedBeneficiariesImpl.setSecondNationalId(
			this.<String>getColumnOriginalValue("second_national_id"));
		verifiedBeneficiariesImpl.setStatus(
			this.<Long>getColumnOriginalValue("status"));
		verifiedBeneficiariesImpl.setUcfVerifiedDate(
			this.<Date>getColumnOriginalValue("ucf_verified_date"));
		verifiedBeneficiariesImpl.setUnionId(
			this.<Long>getColumnOriginalValue("union_id"));
		verifiedBeneficiariesImpl.setUpazilaId(
			this.<Long>getColumnOriginalValue("upazila_id"));
		verifiedBeneficiariesImpl.setUpdatedAt(
			this.<Date>getColumnOriginalValue("updated_at"));
		verifiedBeneficiariesImpl.setVerifiedBy(
			this.<Long>getColumnOriginalValue("verified_by"));
		verifiedBeneficiariesImpl.setVerifiedDate(
			this.<Date>getColumnOriginalValue("verified_date"));
		verifiedBeneficiariesImpl.setVgdStatus(
			this.<Integer>getColumnOriginalValue("vgd_status"));

		return verifiedBeneficiariesImpl;
	}

	@Override
	public int compareTo(VerifiedBeneficiaries verifiedBeneficiaries) {
		long primaryKey = verifiedBeneficiaries.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof VerifiedBeneficiaries)) {
			return false;
		}

		VerifiedBeneficiaries verifiedBeneficiaries =
			(VerifiedBeneficiaries)object;

		long primaryKey = verifiedBeneficiaries.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();
	}

	@Override
	public CacheModel<VerifiedBeneficiaries> toCacheModel() {
		VerifiedBeneficiariesCacheModel verifiedBeneficiariesCacheModel =
			new VerifiedBeneficiariesCacheModel();

		verifiedBeneficiariesCacheModel.id = getId();

		verifiedBeneficiariesCacheModel.bsbVerified = getBsbVerified();

		verifiedBeneficiariesCacheModel.cardNo = getCardNo();

		Date createdAt = getCreatedAt();

		if (createdAt != null) {
			verifiedBeneficiariesCacheModel.createdAt = createdAt.getTime();
		}
		else {
			verifiedBeneficiariesCacheModel.createdAt = Long.MIN_VALUE;
		}

		verifiedBeneficiariesCacheModel.dateOfBirth = getDateOfBirth();

		String dateOfBirth = verifiedBeneficiariesCacheModel.dateOfBirth;

		if ((dateOfBirth != null) && (dateOfBirth.length() == 0)) {
			verifiedBeneficiariesCacheModel.dateOfBirth = null;
		}

		verifiedBeneficiariesCacheModel.dealerId = getDealerId();

		verifiedBeneficiariesCacheModel.districtId = getDistrictId();

		verifiedBeneficiariesCacheModel.divisionId = getDivisionId();

		verifiedBeneficiariesCacheModel.ecBeneficiaryName =
			getEcBeneficiaryName();

		String ecBeneficiaryName =
			verifiedBeneficiariesCacheModel.ecBeneficiaryName;

		if ((ecBeneficiaryName != null) && (ecBeneficiaryName.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecBeneficiaryName = null;
		}

		verifiedBeneficiariesCacheModel.ecBeneficiaryNameEn =
			getEcBeneficiaryNameEn();

		String ecBeneficiaryNameEn =
			verifiedBeneficiariesCacheModel.ecBeneficiaryNameEn;

		if ((ecBeneficiaryNameEn != null) &&
			(ecBeneficiaryNameEn.length() == 0)) {

			verifiedBeneficiariesCacheModel.ecBeneficiaryNameEn = null;
		}

		verifiedBeneficiariesCacheModel.ecBloodGroup = getEcBloodGroup();

		String ecBloodGroup = verifiedBeneficiariesCacheModel.ecBloodGroup;

		if ((ecBloodGroup != null) && (ecBloodGroup.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecBloodGroup = null;
		}

		verifiedBeneficiariesCacheModel.ecFatherName = getEcFatherName();

		String ecFatherName = verifiedBeneficiariesCacheModel.ecFatherName;

		if ((ecFatherName != null) && (ecFatherName.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecFatherName = null;
		}

		verifiedBeneficiariesCacheModel.ecGender = getEcGender();

		String ecGender = verifiedBeneficiariesCacheModel.ecGender;

		if ((ecGender != null) && (ecGender.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecGender = null;
		}

		verifiedBeneficiariesCacheModel.ecMobileNo = getEcMobileNo();

		String ecMobileNo = verifiedBeneficiariesCacheModel.ecMobileNo;

		if ((ecMobileNo != null) && (ecMobileNo.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecMobileNo = null;
		}

		verifiedBeneficiariesCacheModel.ecMotherName = getEcMotherName();

		String ecMotherName = verifiedBeneficiariesCacheModel.ecMotherName;

		if ((ecMotherName != null) && (ecMotherName.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecMotherName = null;
		}

		verifiedBeneficiariesCacheModel.ecOccupation = getEcOccupation();

		String ecOccupation = verifiedBeneficiariesCacheModel.ecOccupation;

		if ((ecOccupation != null) && (ecOccupation.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecOccupation = null;
		}

		verifiedBeneficiariesCacheModel.ecPmAdditionalMouzaMoholla =
			getEcPmAdditionalMouzaMoholla();

		String ecPmAdditionalMouzaMoholla =
			verifiedBeneficiariesCacheModel.ecPmAdditionalMouzaMoholla;

		if ((ecPmAdditionalMouzaMoholla != null) &&
			(ecPmAdditionalMouzaMoholla.length() == 0)) {

			verifiedBeneficiariesCacheModel.ecPmAdditionalMouzaMoholla = null;
		}

		verifiedBeneficiariesCacheModel.ecPmAdditionalVillageRoad =
			getEcPmAdditionalVillageRoad();

		String ecPmAdditionalVillageRoad =
			verifiedBeneficiariesCacheModel.ecPmAdditionalVillageRoad;

		if ((ecPmAdditionalVillageRoad != null) &&
			(ecPmAdditionalVillageRoad.length() == 0)) {

			verifiedBeneficiariesCacheModel.ecPmAdditionalVillageRoad = null;
		}

		verifiedBeneficiariesCacheModel.ecPmDistrict = getEcPmDistrict();

		String ecPmDistrict = verifiedBeneficiariesCacheModel.ecPmDistrict;

		if ((ecPmDistrict != null) && (ecPmDistrict.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecPmDistrict = null;
		}

		verifiedBeneficiariesCacheModel.ecPmDivision = getEcPmDivision();

		String ecPmDivision = verifiedBeneficiariesCacheModel.ecPmDivision;

		if ((ecPmDivision != null) && (ecPmDivision.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecPmDivision = null;
		}

		verifiedBeneficiariesCacheModel.ecPmHomeHoldingNo =
			getEcPmHomeHoldingNo();

		String ecPmHomeHoldingNo =
			verifiedBeneficiariesCacheModel.ecPmHomeHoldingNo;

		if ((ecPmHomeHoldingNo != null) && (ecPmHomeHoldingNo.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecPmHomeHoldingNo = null;
		}

		verifiedBeneficiariesCacheModel.ecPmMouzaMoholla =
			getEcPmMouzaMoholla();

		String ecPmMouzaMoholla =
			verifiedBeneficiariesCacheModel.ecPmMouzaMoholla;

		if ((ecPmMouzaMoholla != null) && (ecPmMouzaMoholla.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecPmMouzaMoholla = null;
		}

		verifiedBeneficiariesCacheModel.ecPmPostalCode = getEcPmPostalCode();

		String ecPmPostalCode = verifiedBeneficiariesCacheModel.ecPmPostalCode;

		if ((ecPmPostalCode != null) && (ecPmPostalCode.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecPmPostalCode = null;
		}

		verifiedBeneficiariesCacheModel.ecPmPostOffice = getEcPmPostOffice();

		String ecPmPostOffice = verifiedBeneficiariesCacheModel.ecPmPostOffice;

		if ((ecPmPostOffice != null) && (ecPmPostOffice.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecPmPostOffice = null;
		}

		verifiedBeneficiariesCacheModel.ecPmRegion = getEcPmRegion();

		String ecPmRegion = verifiedBeneficiariesCacheModel.ecPmRegion;

		if ((ecPmRegion != null) && (ecPmRegion.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecPmRegion = null;
		}

		verifiedBeneficiariesCacheModel.ecPmRmo = getEcPmRmo();

		String ecPmRmo = verifiedBeneficiariesCacheModel.ecPmRmo;

		if ((ecPmRmo != null) && (ecPmRmo.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecPmRmo = null;
		}

		verifiedBeneficiariesCacheModel.ecPmUnionWard = getEcPmUnionWard();

		String ecPmUnionWard = verifiedBeneficiariesCacheModel.ecPmUnionWard;

		if ((ecPmUnionWard != null) && (ecPmUnionWard.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecPmUnionWard = null;
		}

		verifiedBeneficiariesCacheModel.ecPmUpazila = getEcPmUpazila();

		String ecPmUpazila = verifiedBeneficiariesCacheModel.ecPmUpazila;

		if ((ecPmUpazila != null) && (ecPmUpazila.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecPmUpazila = null;
		}

		verifiedBeneficiariesCacheModel.ecPmVillageRoad = getEcPmVillageRoad();

		String ecPmVillageRoad =
			verifiedBeneficiariesCacheModel.ecPmVillageRoad;

		if ((ecPmVillageRoad != null) && (ecPmVillageRoad.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecPmVillageRoad = null;
		}

		verifiedBeneficiariesCacheModel.ecPmWardUnionPorishod =
			getEcPmWardUnionPorishod();

		String ecPmWardUnionPorishod =
			verifiedBeneficiariesCacheModel.ecPmWardUnionPorishod;

		if ((ecPmWardUnionPorishod != null) &&
			(ecPmWardUnionPorishod.length() == 0)) {

			verifiedBeneficiariesCacheModel.ecPmWardUnionPorishod = null;
		}

		verifiedBeneficiariesCacheModel.ecPrAdditionalMouzaMoholla =
			getEcPrAdditionalMouzaMoholla();

		String ecPrAdditionalMouzaMoholla =
			verifiedBeneficiariesCacheModel.ecPrAdditionalMouzaMoholla;

		if ((ecPrAdditionalMouzaMoholla != null) &&
			(ecPrAdditionalMouzaMoholla.length() == 0)) {

			verifiedBeneficiariesCacheModel.ecPrAdditionalMouzaMoholla = null;
		}

		verifiedBeneficiariesCacheModel.ecPrAdditionalVillageRoad =
			getEcPrAdditionalVillageRoad();

		String ecPrAdditionalVillageRoad =
			verifiedBeneficiariesCacheModel.ecPrAdditionalVillageRoad;

		if ((ecPrAdditionalVillageRoad != null) &&
			(ecPrAdditionalVillageRoad.length() == 0)) {

			verifiedBeneficiariesCacheModel.ecPrAdditionalVillageRoad = null;
		}

		verifiedBeneficiariesCacheModel.ecPrCityCorpMunicipality =
			getEcPrCityCorpMunicipality();

		String ecPrCityCorpMunicipality =
			verifiedBeneficiariesCacheModel.ecPrCityCorpMunicipality;

		if ((ecPrCityCorpMunicipality != null) &&
			(ecPrCityCorpMunicipality.length() == 0)) {

			verifiedBeneficiariesCacheModel.ecPrCityCorpMunicipality = null;
		}

		verifiedBeneficiariesCacheModel.ecPrDistrict = getEcPrDistrict();

		String ecPrDistrict = verifiedBeneficiariesCacheModel.ecPrDistrict;

		if ((ecPrDistrict != null) && (ecPrDistrict.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecPrDistrict = null;
		}

		verifiedBeneficiariesCacheModel.ecPrDivision = getEcPrDivision();

		String ecPrDivision = verifiedBeneficiariesCacheModel.ecPrDivision;

		if ((ecPrDivision != null) && (ecPrDivision.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecPrDivision = null;
		}

		verifiedBeneficiariesCacheModel.ecPrHomeHoldingNo =
			getEcPrHomeHoldingNo();

		String ecPrHomeHoldingNo =
			verifiedBeneficiariesCacheModel.ecPrHomeHoldingNo;

		if ((ecPrHomeHoldingNo != null) && (ecPrHomeHoldingNo.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecPrHomeHoldingNo = null;
		}

		verifiedBeneficiariesCacheModel.ecPrMouzaMoholla =
			getEcPrMouzaMoholla();

		String ecPrMouzaMoholla =
			verifiedBeneficiariesCacheModel.ecPrMouzaMoholla;

		if ((ecPrMouzaMoholla != null) && (ecPrMouzaMoholla.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecPrMouzaMoholla = null;
		}

		verifiedBeneficiariesCacheModel.ecPrPostalCode = getEcPrPostalCode();

		String ecPrPostalCode = verifiedBeneficiariesCacheModel.ecPrPostalCode;

		if ((ecPrPostalCode != null) && (ecPrPostalCode.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecPrPostalCode = null;
		}

		verifiedBeneficiariesCacheModel.ecPrPostOffice = getEcPrPostOffice();

		String ecPrPostOffice = verifiedBeneficiariesCacheModel.ecPrPostOffice;

		if ((ecPrPostOffice != null) && (ecPrPostOffice.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecPrPostOffice = null;
		}

		verifiedBeneficiariesCacheModel.ecPrRegion = getEcPrRegion();

		String ecPrRegion = verifiedBeneficiariesCacheModel.ecPrRegion;

		if ((ecPrRegion != null) && (ecPrRegion.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecPrRegion = null;
		}

		verifiedBeneficiariesCacheModel.ecPrRmo = getEcPrRmo();

		String ecPrRmo = verifiedBeneficiariesCacheModel.ecPrRmo;

		if ((ecPrRmo != null) && (ecPrRmo.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecPrRmo = null;
		}

		verifiedBeneficiariesCacheModel.ecPrUnionWard = getEcPrUnionWard();

		String ecPrUnionWard = verifiedBeneficiariesCacheModel.ecPrUnionWard;

		if ((ecPrUnionWard != null) && (ecPrUnionWard.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecPrUnionWard = null;
		}

		verifiedBeneficiariesCacheModel.ecPrUpazila = getEcPrUpazila();

		String ecPrUpazila = verifiedBeneficiariesCacheModel.ecPrUpazila;

		if ((ecPrUpazila != null) && (ecPrUpazila.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecPrUpazila = null;
		}

		verifiedBeneficiariesCacheModel.ecPrVillageRoad = getEcPrVillageRoad();

		String ecPrVillageRoad =
			verifiedBeneficiariesCacheModel.ecPrVillageRoad;

		if ((ecPrVillageRoad != null) && (ecPrVillageRoad.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecPrVillageRoad = null;
		}

		verifiedBeneficiariesCacheModel.ecPrWardUnionPorishod =
			getEcPrWardUnionPorishod();

		String ecPrWardUnionPorishod =
			verifiedBeneficiariesCacheModel.ecPrWardUnionPorishod;

		if ((ecPrWardUnionPorishod != null) &&
			(ecPrWardUnionPorishod.length() == 0)) {

			verifiedBeneficiariesCacheModel.ecPrWardUnionPorishod = null;
		}

		verifiedBeneficiariesCacheModel.ecSpouseName = getEcSpouseName();

		String ecSpouseName = verifiedBeneficiariesCacheModel.ecSpouseName;

		if ((ecSpouseName != null) && (ecSpouseName.length() == 0)) {
			verifiedBeneficiariesCacheModel.ecSpouseName = null;
		}

		verifiedBeneficiariesCacheModel.ecVerified = getEcVerified();

		verifiedBeneficiariesCacheModel.finalStatus = getFinalStatus();

		verifiedBeneficiariesCacheModel.givenMobileNo = getGivenMobileNo();

		String givenMobileNo = verifiedBeneficiariesCacheModel.givenMobileNo;

		if ((givenMobileNo != null) && (givenMobileNo.length() == 0)) {
			verifiedBeneficiariesCacheModel.givenMobileNo = null;
		}

		verifiedBeneficiariesCacheModel.imagePathEc = getImagePathEc();

		String imagePathEc = verifiedBeneficiariesCacheModel.imagePathEc;

		if ((imagePathEc != null) && (imagePathEc.length() == 0)) {
			verifiedBeneficiariesCacheModel.imagePathEc = null;
		}

		verifiedBeneficiariesCacheModel.imagePathReal = getImagePathReal();

		String imagePathReal = verifiedBeneficiariesCacheModel.imagePathReal;

		if ((imagePathReal != null) && (imagePathReal.length() == 0)) {
			verifiedBeneficiariesCacheModel.imagePathReal = null;
		}

		verifiedBeneficiariesCacheModel.nationalId = getNationalId();

		String nationalId = verifiedBeneficiariesCacheModel.nationalId;

		if ((nationalId != null) && (nationalId.length() == 0)) {
			verifiedBeneficiariesCacheModel.nationalId = null;
		}

		verifiedBeneficiariesCacheModel.newCardNumber = getNewCardNumber();

		verifiedBeneficiariesCacheModel.rawDataId = getRawDataId();

		verifiedBeneficiariesCacheModel.remarks = getRemarks();

		String remarks = verifiedBeneficiariesCacheModel.remarks;

		if ((remarks != null) && (remarks.length() == 0)) {
			verifiedBeneficiariesCacheModel.remarks = null;
		}

		verifiedBeneficiariesCacheModel.secondNationalId =
			getSecondNationalId();

		String secondNationalId =
			verifiedBeneficiariesCacheModel.secondNationalId;

		if ((secondNationalId != null) && (secondNationalId.length() == 0)) {
			verifiedBeneficiariesCacheModel.secondNationalId = null;
		}

		verifiedBeneficiariesCacheModel.status = getStatus();

		Date ucfVerifiedDate = getUcfVerifiedDate();

		if (ucfVerifiedDate != null) {
			verifiedBeneficiariesCacheModel.ucfVerifiedDate =
				ucfVerifiedDate.getTime();
		}
		else {
			verifiedBeneficiariesCacheModel.ucfVerifiedDate = Long.MIN_VALUE;
		}

		verifiedBeneficiariesCacheModel.unionId = getUnionId();

		verifiedBeneficiariesCacheModel.upazilaId = getUpazilaId();

		Date updatedAt = getUpdatedAt();

		if (updatedAt != null) {
			verifiedBeneficiariesCacheModel.updatedAt = updatedAt.getTime();
		}
		else {
			verifiedBeneficiariesCacheModel.updatedAt = Long.MIN_VALUE;
		}

		verifiedBeneficiariesCacheModel.verifiedBy = getVerifiedBy();

		Date verifiedDate = getVerifiedDate();

		if (verifiedDate != null) {
			verifiedBeneficiariesCacheModel.verifiedDate =
				verifiedDate.getTime();
		}
		else {
			verifiedBeneficiariesCacheModel.verifiedDate = Long.MIN_VALUE;
		}

		verifiedBeneficiariesCacheModel.vgdStatus = getVgdStatus();

		return verifiedBeneficiariesCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<VerifiedBeneficiaries, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<VerifiedBeneficiaries, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<VerifiedBeneficiaries, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(VerifiedBeneficiaries)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, VerifiedBeneficiaries>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					VerifiedBeneficiaries.class, ModelWrapper.class);

	}

	private long _id;
	private int _bsbVerified;
	private long _cardNo;
	private Date _createdAt;
	private String _dateOfBirth;
	private long _dealerId;
	private long _districtId;
	private long _divisionId;
	private String _ecBeneficiaryName;
	private String _ecBeneficiaryNameEn;
	private String _ecBloodGroup;
	private String _ecFatherName;
	private String _ecGender;
	private String _ecMobileNo;
	private String _ecMotherName;
	private String _ecOccupation;
	private String _ecPmAdditionalMouzaMoholla;
	private String _ecPmAdditionalVillageRoad;
	private String _ecPmDistrict;
	private String _ecPmDivision;
	private String _ecPmHomeHoldingNo;
	private String _ecPmMouzaMoholla;
	private String _ecPmPostalCode;
	private String _ecPmPostOffice;
	private String _ecPmRegion;
	private String _ecPmRmo;
	private String _ecPmUnionWard;
	private String _ecPmUpazila;
	private String _ecPmVillageRoad;
	private String _ecPmWardUnionPorishod;
	private String _ecPrAdditionalMouzaMoholla;
	private String _ecPrAdditionalVillageRoad;
	private String _ecPrCityCorpMunicipality;
	private String _ecPrDistrict;
	private String _ecPrDivision;
	private String _ecPrHomeHoldingNo;
	private String _ecPrMouzaMoholla;
	private String _ecPrPostalCode;
	private String _ecPrPostOffice;
	private String _ecPrRegion;
	private String _ecPrRmo;
	private String _ecPrUnionWard;
	private String _ecPrUpazila;
	private String _ecPrVillageRoad;
	private String _ecPrWardUnionPorishod;
	private String _ecSpouseName;
	private int _ecVerified;
	private long _finalStatus;
	private String _givenMobileNo;
	private String _imagePathEc;
	private String _imagePathReal;
	private String _nationalId;
	private long _newCardNumber;
	private long _rawDataId;
	private String _remarks;
	private String _secondNationalId;
	private long _status;
	private Date _ucfVerifiedDate;
	private long _unionId;
	private long _upazilaId;
	private Date _updatedAt;
	private long _verifiedBy;
	private Date _verifiedDate;
	private int _vgdStatus;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<VerifiedBeneficiaries, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((VerifiedBeneficiaries)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("id", _id);
		_columnOriginalValues.put("bsb_verified", _bsbVerified);
		_columnOriginalValues.put("card_no", _cardNo);
		_columnOriginalValues.put("created_at", _createdAt);
		_columnOriginalValues.put("date_of_birth", _dateOfBirth);
		_columnOriginalValues.put("dealer_id", _dealerId);
		_columnOriginalValues.put("district_id", _districtId);
		_columnOriginalValues.put("division_id", _divisionId);
		_columnOriginalValues.put("ec_beneficiary_name", _ecBeneficiaryName);
		_columnOriginalValues.put(
			"ec_beneficiary_name_en", _ecBeneficiaryNameEn);
		_columnOriginalValues.put("ec_blood_group", _ecBloodGroup);
		_columnOriginalValues.put("ec_father_name", _ecFatherName);
		_columnOriginalValues.put("ec_gender", _ecGender);
		_columnOriginalValues.put("ec_mobile_no", _ecMobileNo);
		_columnOriginalValues.put("ec_mother_name", _ecMotherName);
		_columnOriginalValues.put("ec_occupation", _ecOccupation);
		_columnOriginalValues.put(
			"ec_pm_additional_mouza_moholla", _ecPmAdditionalMouzaMoholla);
		_columnOriginalValues.put(
			"ec_pm_additional_village_road", _ecPmAdditionalVillageRoad);
		_columnOriginalValues.put("ec_pm_district", _ecPmDistrict);
		_columnOriginalValues.put("ec_pm_division", _ecPmDivision);
		_columnOriginalValues.put("ec_pm_home_holding_no", _ecPmHomeHoldingNo);
		_columnOriginalValues.put("ec_pm_mouza_moholla", _ecPmMouzaMoholla);
		_columnOriginalValues.put("ec_pm_postal_code", _ecPmPostalCode);
		_columnOriginalValues.put("ec_pm_post_office", _ecPmPostOffice);
		_columnOriginalValues.put("ec_pm_region", _ecPmRegion);
		_columnOriginalValues.put("ec_pm_rmo", _ecPmRmo);
		_columnOriginalValues.put("ec_pm_union_ward", _ecPmUnionWard);
		_columnOriginalValues.put("ec_pm_upazila", _ecPmUpazila);
		_columnOriginalValues.put("ec_pm_village_road", _ecPmVillageRoad);
		_columnOriginalValues.put(
			"ec_pm_ward_union_porishod", _ecPmWardUnionPorishod);
		_columnOriginalValues.put(
			"ec_pr_additional_mouza_moholla", _ecPrAdditionalMouzaMoholla);
		_columnOriginalValues.put(
			"ec_pr_additional_village_road", _ecPrAdditionalVillageRoad);
		_columnOriginalValues.put(
			"ec_pr_city_corp_municipality", _ecPrCityCorpMunicipality);
		_columnOriginalValues.put("ec_pr_district", _ecPrDistrict);
		_columnOriginalValues.put("ec_pr_division", _ecPrDivision);
		_columnOriginalValues.put("ec_pr_home_holding_no", _ecPrHomeHoldingNo);
		_columnOriginalValues.put("ec_pr_mouza_moholla", _ecPrMouzaMoholla);
		_columnOriginalValues.put("ec_pr_postal_code", _ecPrPostalCode);
		_columnOriginalValues.put("ec_pr_post_office", _ecPrPostOffice);
		_columnOriginalValues.put("ec_pr_region", _ecPrRegion);
		_columnOriginalValues.put("ec_pr_rmo", _ecPrRmo);
		_columnOriginalValues.put("ec_pr_union_ward", _ecPrUnionWard);
		_columnOriginalValues.put("ec_pr_upazila", _ecPrUpazila);
		_columnOriginalValues.put("ec_pr_village_road", _ecPrVillageRoad);
		_columnOriginalValues.put(
			"ec_pr_ward_union_porishod", _ecPrWardUnionPorishod);
		_columnOriginalValues.put("ec_spouse_name", _ecSpouseName);
		_columnOriginalValues.put("ec_verified", _ecVerified);
		_columnOriginalValues.put("final_status", _finalStatus);
		_columnOriginalValues.put("given_mobile_no", _givenMobileNo);
		_columnOriginalValues.put("image_path_ec", _imagePathEc);
		_columnOriginalValues.put("image_path_real", _imagePathReal);
		_columnOriginalValues.put("national_id", _nationalId);
		_columnOriginalValues.put("new_card_number", _newCardNumber);
		_columnOriginalValues.put("raw_data_id", _rawDataId);
		_columnOriginalValues.put("remarks", _remarks);
		_columnOriginalValues.put("second_national_id", _secondNationalId);
		_columnOriginalValues.put("status", _status);
		_columnOriginalValues.put("ucf_verified_date", _ucfVerifiedDate);
		_columnOriginalValues.put("union_id", _unionId);
		_columnOriginalValues.put("upazila_id", _upazilaId);
		_columnOriginalValues.put("updated_at", _updatedAt);
		_columnOriginalValues.put("verified_by", _verifiedBy);
		_columnOriginalValues.put("verified_date", _verifiedDate);
		_columnOriginalValues.put("vgd_status", _vgdStatus);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("bsb_verified", "bsbVerified");
		attributeNames.put("card_no", "cardNo");
		attributeNames.put("created_at", "createdAt");
		attributeNames.put("date_of_birth", "dateOfBirth");
		attributeNames.put("dealer_id", "dealerId");
		attributeNames.put("district_id", "districtId");
		attributeNames.put("division_id", "divisionId");
		attributeNames.put("ec_beneficiary_name", "ecBeneficiaryName");
		attributeNames.put("ec_beneficiary_name_en", "ecBeneficiaryNameEn");
		attributeNames.put("ec_blood_group", "ecBloodGroup");
		attributeNames.put("ec_father_name", "ecFatherName");
		attributeNames.put("ec_gender", "ecGender");
		attributeNames.put("ec_mobile_no", "ecMobileNo");
		attributeNames.put("ec_mother_name", "ecMotherName");
		attributeNames.put("ec_occupation", "ecOccupation");
		attributeNames.put(
			"ec_pm_additional_mouza_moholla", "ecPmAdditionalMouzaMoholla");
		attributeNames.put(
			"ec_pm_additional_village_road", "ecPmAdditionalVillageRoad");
		attributeNames.put("ec_pm_district", "ecPmDistrict");
		attributeNames.put("ec_pm_division", "ecPmDivision");
		attributeNames.put("ec_pm_home_holding_no", "ecPmHomeHoldingNo");
		attributeNames.put("ec_pm_mouza_moholla", "ecPmMouzaMoholla");
		attributeNames.put("ec_pm_postal_code", "ecPmPostalCode");
		attributeNames.put("ec_pm_post_office", "ecPmPostOffice");
		attributeNames.put("ec_pm_region", "ecPmRegion");
		attributeNames.put("ec_pm_rmo", "ecPmRmo");
		attributeNames.put("ec_pm_union_ward", "ecPmUnionWard");
		attributeNames.put("ec_pm_upazila", "ecPmUpazila");
		attributeNames.put("ec_pm_village_road", "ecPmVillageRoad");
		attributeNames.put(
			"ec_pm_ward_union_porishod", "ecPmWardUnionPorishod");
		attributeNames.put(
			"ec_pr_additional_mouza_moholla", "ecPrAdditionalMouzaMoholla");
		attributeNames.put(
			"ec_pr_additional_village_road", "ecPrAdditionalVillageRoad");
		attributeNames.put(
			"ec_pr_city_corp_municipality", "ecPrCityCorpMunicipality");
		attributeNames.put("ec_pr_district", "ecPrDistrict");
		attributeNames.put("ec_pr_division", "ecPrDivision");
		attributeNames.put("ec_pr_home_holding_no", "ecPrHomeHoldingNo");
		attributeNames.put("ec_pr_mouza_moholla", "ecPrMouzaMoholla");
		attributeNames.put("ec_pr_postal_code", "ecPrPostalCode");
		attributeNames.put("ec_pr_post_office", "ecPrPostOffice");
		attributeNames.put("ec_pr_region", "ecPrRegion");
		attributeNames.put("ec_pr_rmo", "ecPrRmo");
		attributeNames.put("ec_pr_union_ward", "ecPrUnionWard");
		attributeNames.put("ec_pr_upazila", "ecPrUpazila");
		attributeNames.put("ec_pr_village_road", "ecPrVillageRoad");
		attributeNames.put(
			"ec_pr_ward_union_porishod", "ecPrWardUnionPorishod");
		attributeNames.put("ec_spouse_name", "ecSpouseName");
		attributeNames.put("ec_verified", "ecVerified");
		attributeNames.put("final_status", "finalStatus");
		attributeNames.put("given_mobile_no", "givenMobileNo");
		attributeNames.put("image_path_ec", "imagePathEc");
		attributeNames.put("image_path_real", "imagePathReal");
		attributeNames.put("national_id", "nationalId");
		attributeNames.put("new_card_number", "newCardNumber");
		attributeNames.put("raw_data_id", "rawDataId");
		attributeNames.put("second_national_id", "secondNationalId");
		attributeNames.put("ucf_verified_date", "ucfVerifiedDate");
		attributeNames.put("union_id", "unionId");
		attributeNames.put("upazila_id", "upazilaId");
		attributeNames.put("updated_at", "updatedAt");
		attributeNames.put("verified_by", "verifiedBy");
		attributeNames.put("verified_date", "verifiedDate");
		attributeNames.put("vgd_status", "vgdStatus");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;
	private VerifiedBeneficiaries _escapedModel;

}