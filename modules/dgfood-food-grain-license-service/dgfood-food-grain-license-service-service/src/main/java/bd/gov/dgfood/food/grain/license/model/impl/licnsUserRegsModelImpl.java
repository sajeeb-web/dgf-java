/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package bd.gov.dgfood.food.grain.license.model.impl;

import bd.gov.dgfood.food.grain.license.model.licnsUserRegs;
import bd.gov.dgfood.food.grain.license.model.licnsUserRegsModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the licnsUserRegs service. Represents a row in the &quot;dgf_licns_user_regs&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>licnsUserRegsModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link licnsUserRegsImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see licnsUserRegsImpl
 * @generated
 */
@JSON(strict = true)
public class licnsUserRegsModelImpl
	extends BaseModelImpl<licnsUserRegs> implements licnsUserRegsModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a licns user regs model instance should use the <code>licnsUserRegs</code> interface instead.
	 */
	public static final String TABLE_NAME = "dgf_licns_user_regs";

	public static final Object[][] TABLE_COLUMNS = {
		{"licUserId", Types.BIGINT}, {"nationalId", Types.VARCHAR},
		{"applicantName", Types.VARCHAR}, {"tradeLicenseNo", Types.VARCHAR},
		{"tradeLicenseExpiryDate", Types.TIMESTAMP},
		{"tradeLicenseIssuerCode", Types.VARCHAR},
		{"tradeLicenseIssuerCity", Types.VARCHAR},
		{"businessIdentificationNo", Types.VARCHAR},
		{"taxIdentificationNo", Types.VARCHAR}, {"businessName", Types.VARCHAR},
		{"businessType", Types.VARCHAR}, {"businessDivision", Types.BIGINT},
		{"businessDistrict", Types.BIGINT}, {"businessUpzilla", Types.BIGINT},
		{"businessUnionName", Types.BIGINT}, {"businessVillage", Types.VARCHAR},
		{"businessWard", Types.VARCHAR}, {"businessZipCode", Types.VARCHAR},
		{"businessPostOffice", Types.VARCHAR},
		{"businessHouseAddress", Types.VARCHAR},
		{"photographFile", Types.VARCHAR}, {"tradeLicDoc", Types.VARCHAR},
		{"binDoc", Types.VARCHAR}, {"tinDoc", Types.VARCHAR},
		{"bankStat", Types.VARCHAR}, {"otherReleventDoc", Types.VARCHAR},
		{"comments", Types.VARCHAR}, {"foodGrainLicenseType", Types.VARCHAR},
		{"division", Types.BIGINT}, {"district", Types.BIGINT},
		{"upzilla", Types.BIGINT}, {"unionName", Types.BIGINT},
		{"village", Types.VARCHAR}, {"ward", Types.VARCHAR},
		{"zipCode", Types.VARCHAR}, {"postOffice", Types.VARCHAR},
		{"houseAddress", Types.VARCHAR}, {"password_", Types.VARCHAR},
		{"fatherName", Types.VARCHAR}, {"lastName", Types.VARCHAR},
		{"motherName", Types.VARCHAR}, {"gender", Types.VARCHAR},
		{"maritalStatus", Types.VARCHAR}, {"birthDate", Types.TIMESTAMP},
		{"mobileNo", Types.VARCHAR}, {"userId", Types.BIGINT},
		{"email", Types.VARCHAR}, {"nidDivision", Types.VARCHAR},
		{"nidDistrict", Types.VARCHAR}, {"nidUpzilla", Types.VARCHAR},
		{"nidUnion", Types.VARCHAR}, {"nidVillage", Types.VARCHAR},
		{"nidWard", Types.VARCHAR}, {"nidZipCode", Types.VARCHAR},
		{"nidPostOffice", Types.VARCHAR}, {"nidHouseAddress", Types.VARCHAR},
		{"isSubmit", Types.BOOLEAN}, {"electricExemptionMemo", Types.VARCHAR},
		{"envClrMemo", Types.VARCHAR}, {"bstiClrMemo", Types.VARCHAR},
		{"fireLicNumDoc", Types.VARCHAR}, {"productType", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("licUserId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("nationalId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("applicantName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tradeLicenseNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tradeLicenseExpiryDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("tradeLicenseIssuerCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tradeLicenseIssuerCity", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("businessIdentificationNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("taxIdentificationNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("businessName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("businessType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("businessDivision", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("businessDistrict", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("businessUpzilla", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("businessUnionName", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("businessVillage", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("businessWard", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("businessZipCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("businessPostOffice", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("businessHouseAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("photographFile", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tradeLicDoc", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("binDoc", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tinDoc", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bankStat", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("otherReleventDoc", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("comments", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("foodGrainLicenseType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("division", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("district", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("upzilla", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("unionName", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("village", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ward", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("zipCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("postOffice", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("houseAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("password_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fatherName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("lastName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("motherName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("gender", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("maritalStatus", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("birthDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("mobileNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("email", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("nidDivision", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("nidDistrict", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("nidUpzilla", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("nidUnion", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("nidVillage", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("nidWard", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("nidZipCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("nidPostOffice", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("nidHouseAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("isSubmit", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("electricExemptionMemo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("envClrMemo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bstiClrMemo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fireLicNumDoc", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productType", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table dgf_licns_user_regs (licUserId LONG not null primary key,nationalId VARCHAR(75) null,applicantName VARCHAR(75) null,tradeLicenseNo VARCHAR(75) null,tradeLicenseExpiryDate DATE null,tradeLicenseIssuerCode VARCHAR(75) null,tradeLicenseIssuerCity VARCHAR(75) null,businessIdentificationNo VARCHAR(75) null,taxIdentificationNo VARCHAR(75) null,businessName VARCHAR(75) null,businessType VARCHAR(75) null,businessDivision LONG,businessDistrict LONG,businessUpzilla LONG,businessUnionName LONG,businessVillage VARCHAR(75) null,businessWard VARCHAR(75) null,businessZipCode VARCHAR(75) null,businessPostOffice VARCHAR(75) null,businessHouseAddress VARCHAR(75) null,photographFile VARCHAR(1000) null,tradeLicDoc VARCHAR(1000) null,binDoc VARCHAR(1000) null,tinDoc VARCHAR(1000) null,bankStat VARCHAR(1000) null,otherReleventDoc VARCHAR(1000) null,comments VARCHAR(75) null,foodGrainLicenseType VARCHAR(75) null,division LONG,district LONG,upzilla LONG,unionName LONG,village VARCHAR(75) null,ward VARCHAR(75) null,zipCode VARCHAR(75) null,postOffice VARCHAR(75) null,houseAddress VARCHAR(75) null,password_ VARCHAR(75) null,fatherName VARCHAR(75) null,lastName VARCHAR(75) null,motherName VARCHAR(75) null,gender VARCHAR(75) null,maritalStatus VARCHAR(75) null,birthDate DATE null,mobileNo VARCHAR(75) null,userId LONG,email VARCHAR(75) null,nidDivision VARCHAR(75) null,nidDistrict VARCHAR(75) null,nidUpzilla VARCHAR(75) null,nidUnion VARCHAR(75) null,nidVillage VARCHAR(75) null,nidWard VARCHAR(75) null,nidZipCode VARCHAR(75) null,nidPostOffice VARCHAR(75) null,nidHouseAddress VARCHAR(75) null,isSubmit BOOLEAN,electricExemptionMemo VARCHAR(1000) null,envClrMemo VARCHAR(1000) null,bstiClrMemo VARCHAR(1000) null,fireLicNumDoc VARCHAR(1000) null,productType VARCHAR(75) null)";

	public static final String TABLE_SQL_DROP =
		"drop table dgf_licns_user_regs";

	public static final String ORDER_BY_JPQL =
		" ORDER BY licnsUserRegs.licUserId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY dgf_licns_user_regs.licUserId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long NATIONALID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long LICUSERID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public licnsUserRegsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _licUserId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setLicUserId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _licUserId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return licnsUserRegs.class;
	}

	@Override
	public String getModelClassName() {
		return licnsUserRegs.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<licnsUserRegs, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<licnsUserRegs, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<licnsUserRegs, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((licnsUserRegs)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<licnsUserRegs, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<licnsUserRegs, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(licnsUserRegs)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<licnsUserRegs, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<licnsUserRegs, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<licnsUserRegs, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<licnsUserRegs, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<licnsUserRegs, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<licnsUserRegs, Object>>();
		Map<String, BiConsumer<licnsUserRegs, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<licnsUserRegs, ?>>();

		attributeGetterFunctions.put("licUserId", licnsUserRegs::getLicUserId);
		attributeSetterBiConsumers.put(
			"licUserId",
			(BiConsumer<licnsUserRegs, Long>)licnsUserRegs::setLicUserId);
		attributeGetterFunctions.put(
			"nationalId", licnsUserRegs::getNationalId);
		attributeSetterBiConsumers.put(
			"nationalId",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setNationalId);
		attributeGetterFunctions.put(
			"applicantName", licnsUserRegs::getApplicantName);
		attributeSetterBiConsumers.put(
			"applicantName",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setApplicantName);
		attributeGetterFunctions.put(
			"tradeLicenseNo", licnsUserRegs::getTradeLicenseNo);
		attributeSetterBiConsumers.put(
			"tradeLicenseNo",
			(BiConsumer<licnsUserRegs, String>)
				licnsUserRegs::setTradeLicenseNo);
		attributeGetterFunctions.put(
			"tradeLicenseExpiryDate", licnsUserRegs::getTradeLicenseExpiryDate);
		attributeSetterBiConsumers.put(
			"tradeLicenseExpiryDate",
			(BiConsumer<licnsUserRegs, Date>)
				licnsUserRegs::setTradeLicenseExpiryDate);
		attributeGetterFunctions.put(
			"tradeLicenseIssuerCode", licnsUserRegs::getTradeLicenseIssuerCode);
		attributeSetterBiConsumers.put(
			"tradeLicenseIssuerCode",
			(BiConsumer<licnsUserRegs, String>)
				licnsUserRegs::setTradeLicenseIssuerCode);
		attributeGetterFunctions.put(
			"tradeLicenseIssuerCity", licnsUserRegs::getTradeLicenseIssuerCity);
		attributeSetterBiConsumers.put(
			"tradeLicenseIssuerCity",
			(BiConsumer<licnsUserRegs, String>)
				licnsUserRegs::setTradeLicenseIssuerCity);
		attributeGetterFunctions.put(
			"businessIdentificationNo",
			licnsUserRegs::getBusinessIdentificationNo);
		attributeSetterBiConsumers.put(
			"businessIdentificationNo",
			(BiConsumer<licnsUserRegs, String>)
				licnsUserRegs::setBusinessIdentificationNo);
		attributeGetterFunctions.put(
			"taxIdentificationNo", licnsUserRegs::getTaxIdentificationNo);
		attributeSetterBiConsumers.put(
			"taxIdentificationNo",
			(BiConsumer<licnsUserRegs, String>)
				licnsUserRegs::setTaxIdentificationNo);
		attributeGetterFunctions.put(
			"businessName", licnsUserRegs::getBusinessName);
		attributeSetterBiConsumers.put(
			"businessName",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setBusinessName);
		attributeGetterFunctions.put(
			"businessType", licnsUserRegs::getBusinessType);
		attributeSetterBiConsumers.put(
			"businessType",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setBusinessType);
		attributeGetterFunctions.put(
			"businessDivision", licnsUserRegs::getBusinessDivision);
		attributeSetterBiConsumers.put(
			"businessDivision",
			(BiConsumer<licnsUserRegs, Long>)
				licnsUserRegs::setBusinessDivision);
		attributeGetterFunctions.put(
			"businessDistrict", licnsUserRegs::getBusinessDistrict);
		attributeSetterBiConsumers.put(
			"businessDistrict",
			(BiConsumer<licnsUserRegs, Long>)
				licnsUserRegs::setBusinessDistrict);
		attributeGetterFunctions.put(
			"businessUpzilla", licnsUserRegs::getBusinessUpzilla);
		attributeSetterBiConsumers.put(
			"businessUpzilla",
			(BiConsumer<licnsUserRegs, Long>)licnsUserRegs::setBusinessUpzilla);
		attributeGetterFunctions.put(
			"businessUnionName", licnsUserRegs::getBusinessUnionName);
		attributeSetterBiConsumers.put(
			"businessUnionName",
			(BiConsumer<licnsUserRegs, Long>)
				licnsUserRegs::setBusinessUnionName);
		attributeGetterFunctions.put(
			"businessVillage", licnsUserRegs::getBusinessVillage);
		attributeSetterBiConsumers.put(
			"businessVillage",
			(BiConsumer<licnsUserRegs, String>)
				licnsUserRegs::setBusinessVillage);
		attributeGetterFunctions.put(
			"businessWard", licnsUserRegs::getBusinessWard);
		attributeSetterBiConsumers.put(
			"businessWard",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setBusinessWard);
		attributeGetterFunctions.put(
			"businessZipCode", licnsUserRegs::getBusinessZipCode);
		attributeSetterBiConsumers.put(
			"businessZipCode",
			(BiConsumer<licnsUserRegs, String>)
				licnsUserRegs::setBusinessZipCode);
		attributeGetterFunctions.put(
			"businessPostOffice", licnsUserRegs::getBusinessPostOffice);
		attributeSetterBiConsumers.put(
			"businessPostOffice",
			(BiConsumer<licnsUserRegs, String>)
				licnsUserRegs::setBusinessPostOffice);
		attributeGetterFunctions.put(
			"businessHouseAddress", licnsUserRegs::getBusinessHouseAddress);
		attributeSetterBiConsumers.put(
			"businessHouseAddress",
			(BiConsumer<licnsUserRegs, String>)
				licnsUserRegs::setBusinessHouseAddress);
		attributeGetterFunctions.put(
			"photographFile", licnsUserRegs::getPhotographFile);
		attributeSetterBiConsumers.put(
			"photographFile",
			(BiConsumer<licnsUserRegs, String>)
				licnsUserRegs::setPhotographFile);
		attributeGetterFunctions.put(
			"tradeLicDoc", licnsUserRegs::getTradeLicDoc);
		attributeSetterBiConsumers.put(
			"tradeLicDoc",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setTradeLicDoc);
		attributeGetterFunctions.put("binDoc", licnsUserRegs::getBinDoc);
		attributeSetterBiConsumers.put(
			"binDoc",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setBinDoc);
		attributeGetterFunctions.put("tinDoc", licnsUserRegs::getTinDoc);
		attributeSetterBiConsumers.put(
			"tinDoc",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setTinDoc);
		attributeGetterFunctions.put("bankStat", licnsUserRegs::getBankStat);
		attributeSetterBiConsumers.put(
			"bankStat",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setBankStat);
		attributeGetterFunctions.put(
			"otherReleventDoc", licnsUserRegs::getOtherReleventDoc);
		attributeSetterBiConsumers.put(
			"otherReleventDoc",
			(BiConsumer<licnsUserRegs, String>)
				licnsUserRegs::setOtherReleventDoc);
		attributeGetterFunctions.put("comments", licnsUserRegs::getComments);
		attributeSetterBiConsumers.put(
			"comments",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setComments);
		attributeGetterFunctions.put(
			"foodGrainLicenseType", licnsUserRegs::getFoodGrainLicenseType);
		attributeSetterBiConsumers.put(
			"foodGrainLicenseType",
			(BiConsumer<licnsUserRegs, String>)
				licnsUserRegs::setFoodGrainLicenseType);
		attributeGetterFunctions.put("division", licnsUserRegs::getDivision);
		attributeSetterBiConsumers.put(
			"division",
			(BiConsumer<licnsUserRegs, Long>)licnsUserRegs::setDivision);
		attributeGetterFunctions.put("district", licnsUserRegs::getDistrict);
		attributeSetterBiConsumers.put(
			"district",
			(BiConsumer<licnsUserRegs, Long>)licnsUserRegs::setDistrict);
		attributeGetterFunctions.put("upzilla", licnsUserRegs::getUpzilla);
		attributeSetterBiConsumers.put(
			"upzilla",
			(BiConsumer<licnsUserRegs, Long>)licnsUserRegs::setUpzilla);
		attributeGetterFunctions.put("unionName", licnsUserRegs::getUnionName);
		attributeSetterBiConsumers.put(
			"unionName",
			(BiConsumer<licnsUserRegs, Long>)licnsUserRegs::setUnionName);
		attributeGetterFunctions.put("village", licnsUserRegs::getVillage);
		attributeSetterBiConsumers.put(
			"village",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setVillage);
		attributeGetterFunctions.put("ward", licnsUserRegs::getWard);
		attributeSetterBiConsumers.put(
			"ward", (BiConsumer<licnsUserRegs, String>)licnsUserRegs::setWard);
		attributeGetterFunctions.put("zipCode", licnsUserRegs::getZipCode);
		attributeSetterBiConsumers.put(
			"zipCode",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setZipCode);
		attributeGetterFunctions.put(
			"postOffice", licnsUserRegs::getPostOffice);
		attributeSetterBiConsumers.put(
			"postOffice",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setPostOffice);
		attributeGetterFunctions.put(
			"houseAddress", licnsUserRegs::getHouseAddress);
		attributeSetterBiConsumers.put(
			"houseAddress",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setHouseAddress);
		attributeGetterFunctions.put("password", licnsUserRegs::getPassword);
		attributeSetterBiConsumers.put(
			"password",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setPassword);
		attributeGetterFunctions.put(
			"fatherName", licnsUserRegs::getFatherName);
		attributeSetterBiConsumers.put(
			"fatherName",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setFatherName);
		attributeGetterFunctions.put("lastName", licnsUserRegs::getLastName);
		attributeSetterBiConsumers.put(
			"lastName",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setLastName);
		attributeGetterFunctions.put(
			"motherName", licnsUserRegs::getMotherName);
		attributeSetterBiConsumers.put(
			"motherName",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setMotherName);
		attributeGetterFunctions.put("gender", licnsUserRegs::getGender);
		attributeSetterBiConsumers.put(
			"gender",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setGender);
		attributeGetterFunctions.put(
			"maritalStatus", licnsUserRegs::getMaritalStatus);
		attributeSetterBiConsumers.put(
			"maritalStatus",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setMaritalStatus);
		attributeGetterFunctions.put("birthDate", licnsUserRegs::getBirthDate);
		attributeSetterBiConsumers.put(
			"birthDate",
			(BiConsumer<licnsUserRegs, Date>)licnsUserRegs::setBirthDate);
		attributeGetterFunctions.put("mobileNo", licnsUserRegs::getMobileNo);
		attributeSetterBiConsumers.put(
			"mobileNo",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setMobileNo);
		attributeGetterFunctions.put("userId", licnsUserRegs::getUserId);
		attributeSetterBiConsumers.put(
			"userId",
			(BiConsumer<licnsUserRegs, Long>)licnsUserRegs::setUserId);
		attributeGetterFunctions.put("email", licnsUserRegs::getEmail);
		attributeSetterBiConsumers.put(
			"email",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setEmail);
		attributeGetterFunctions.put(
			"nidDivision", licnsUserRegs::getNidDivision);
		attributeSetterBiConsumers.put(
			"nidDivision",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setNidDivision);
		attributeGetterFunctions.put(
			"nidDistrict", licnsUserRegs::getNidDistrict);
		attributeSetterBiConsumers.put(
			"nidDistrict",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setNidDistrict);
		attributeGetterFunctions.put(
			"nidUpzilla", licnsUserRegs::getNidUpzilla);
		attributeSetterBiConsumers.put(
			"nidUpzilla",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setNidUpzilla);
		attributeGetterFunctions.put("nidUnion", licnsUserRegs::getNidUnion);
		attributeSetterBiConsumers.put(
			"nidUnion",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setNidUnion);
		attributeGetterFunctions.put(
			"nidVillage", licnsUserRegs::getNidVillage);
		attributeSetterBiConsumers.put(
			"nidVillage",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setNidVillage);
		attributeGetterFunctions.put("nidWard", licnsUserRegs::getNidWard);
		attributeSetterBiConsumers.put(
			"nidWard",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setNidWard);
		attributeGetterFunctions.put(
			"nidZipCode", licnsUserRegs::getNidZipCode);
		attributeSetterBiConsumers.put(
			"nidZipCode",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setNidZipCode);
		attributeGetterFunctions.put(
			"nidPostOffice", licnsUserRegs::getNidPostOffice);
		attributeSetterBiConsumers.put(
			"nidPostOffice",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setNidPostOffice);
		attributeGetterFunctions.put(
			"nidHouseAddress", licnsUserRegs::getNidHouseAddress);
		attributeSetterBiConsumers.put(
			"nidHouseAddress",
			(BiConsumer<licnsUserRegs, String>)
				licnsUserRegs::setNidHouseAddress);
		attributeGetterFunctions.put("isSubmit", licnsUserRegs::getIsSubmit);
		attributeSetterBiConsumers.put(
			"isSubmit",
			(BiConsumer<licnsUserRegs, Boolean>)licnsUserRegs::setIsSubmit);
		attributeGetterFunctions.put(
			"electricExemptionMemo", licnsUserRegs::getElectricExemptionMemo);
		attributeSetterBiConsumers.put(
			"electricExemptionMemo",
			(BiConsumer<licnsUserRegs, String>)
				licnsUserRegs::setElectricExemptionMemo);
		attributeGetterFunctions.put(
			"envClrMemo", licnsUserRegs::getEnvClrMemo);
		attributeSetterBiConsumers.put(
			"envClrMemo",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setEnvClrMemo);
		attributeGetterFunctions.put(
			"bstiClrMemo", licnsUserRegs::getBstiClrMemo);
		attributeSetterBiConsumers.put(
			"bstiClrMemo",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setBstiClrMemo);
		attributeGetterFunctions.put(
			"fireLicNumDoc", licnsUserRegs::getFireLicNumDoc);
		attributeSetterBiConsumers.put(
			"fireLicNumDoc",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setFireLicNumDoc);
		attributeGetterFunctions.put(
			"productType", licnsUserRegs::getProductType);
		attributeSetterBiConsumers.put(
			"productType",
			(BiConsumer<licnsUserRegs, String>)licnsUserRegs::setProductType);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getLicUserId() {
		return _licUserId;
	}

	@Override
	public void setLicUserId(long licUserId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_licUserId = licUserId;
	}

	@Override
	public String getLicUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getLicUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setLicUserUuid(String licUserUuid) {
	}

	@JSON
	@Override
	public String getNationalId() {
		if (_nationalId == null) {
			return "";
		}
		else {
			return _nationalId;
		}
	}

	@Override
	public void setNationalId(String nationalId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nationalId = nationalId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalNationalId() {
		return getColumnOriginalValue("nationalId");
	}

	@JSON
	@Override
	public String getApplicantName() {
		if (_applicantName == null) {
			return "";
		}
		else {
			return _applicantName;
		}
	}

	@Override
	public void setApplicantName(String applicantName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_applicantName = applicantName;
	}

	@JSON
	@Override
	public String getTradeLicenseNo() {
		if (_tradeLicenseNo == null) {
			return "";
		}
		else {
			return _tradeLicenseNo;
		}
	}

	@Override
	public void setTradeLicenseNo(String tradeLicenseNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tradeLicenseNo = tradeLicenseNo;
	}

	@JSON
	@Override
	public Date getTradeLicenseExpiryDate() {
		return _tradeLicenseExpiryDate;
	}

	@Override
	public void setTradeLicenseExpiryDate(Date tradeLicenseExpiryDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tradeLicenseExpiryDate = tradeLicenseExpiryDate;
	}

	@JSON
	@Override
	public String getTradeLicenseIssuerCode() {
		if (_tradeLicenseIssuerCode == null) {
			return "";
		}
		else {
			return _tradeLicenseIssuerCode;
		}
	}

	@Override
	public void setTradeLicenseIssuerCode(String tradeLicenseIssuerCode) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tradeLicenseIssuerCode = tradeLicenseIssuerCode;
	}

	@JSON
	@Override
	public String getTradeLicenseIssuerCity() {
		if (_tradeLicenseIssuerCity == null) {
			return "";
		}
		else {
			return _tradeLicenseIssuerCity;
		}
	}

	@Override
	public void setTradeLicenseIssuerCity(String tradeLicenseIssuerCity) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tradeLicenseIssuerCity = tradeLicenseIssuerCity;
	}

	@JSON
	@Override
	public String getBusinessIdentificationNo() {
		if (_businessIdentificationNo == null) {
			return "";
		}
		else {
			return _businessIdentificationNo;
		}
	}

	@Override
	public void setBusinessIdentificationNo(String businessIdentificationNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessIdentificationNo = businessIdentificationNo;
	}

	@JSON
	@Override
	public String getTaxIdentificationNo() {
		if (_taxIdentificationNo == null) {
			return "";
		}
		else {
			return _taxIdentificationNo;
		}
	}

	@Override
	public void setTaxIdentificationNo(String taxIdentificationNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_taxIdentificationNo = taxIdentificationNo;
	}

	@JSON
	@Override
	public String getBusinessName() {
		if (_businessName == null) {
			return "";
		}
		else {
			return _businessName;
		}
	}

	@Override
	public void setBusinessName(String businessName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessName = businessName;
	}

	@JSON
	@Override
	public String getBusinessType() {
		if (_businessType == null) {
			return "";
		}
		else {
			return _businessType;
		}
	}

	@Override
	public void setBusinessType(String businessType) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessType = businessType;
	}

	@JSON
	@Override
	public long getBusinessDivision() {
		return _businessDivision;
	}

	@Override
	public void setBusinessDivision(long businessDivision) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessDivision = businessDivision;
	}

	@JSON
	@Override
	public long getBusinessDistrict() {
		return _businessDistrict;
	}

	@Override
	public void setBusinessDistrict(long businessDistrict) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessDistrict = businessDistrict;
	}

	@JSON
	@Override
	public long getBusinessUpzilla() {
		return _businessUpzilla;
	}

	@Override
	public void setBusinessUpzilla(long businessUpzilla) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessUpzilla = businessUpzilla;
	}

	@JSON
	@Override
	public long getBusinessUnionName() {
		return _businessUnionName;
	}

	@Override
	public void setBusinessUnionName(long businessUnionName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessUnionName = businessUnionName;
	}

	@JSON
	@Override
	public String getBusinessVillage() {
		if (_businessVillage == null) {
			return "";
		}
		else {
			return _businessVillage;
		}
	}

	@Override
	public void setBusinessVillage(String businessVillage) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessVillage = businessVillage;
	}

	@JSON
	@Override
	public String getBusinessWard() {
		if (_businessWard == null) {
			return "";
		}
		else {
			return _businessWard;
		}
	}

	@Override
	public void setBusinessWard(String businessWard) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessWard = businessWard;
	}

	@JSON
	@Override
	public String getBusinessZipCode() {
		if (_businessZipCode == null) {
			return "";
		}
		else {
			return _businessZipCode;
		}
	}

	@Override
	public void setBusinessZipCode(String businessZipCode) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessZipCode = businessZipCode;
	}

	@JSON
	@Override
	public String getBusinessPostOffice() {
		if (_businessPostOffice == null) {
			return "";
		}
		else {
			return _businessPostOffice;
		}
	}

	@Override
	public void setBusinessPostOffice(String businessPostOffice) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessPostOffice = businessPostOffice;
	}

	@JSON
	@Override
	public String getBusinessHouseAddress() {
		if (_businessHouseAddress == null) {
			return "";
		}
		else {
			return _businessHouseAddress;
		}
	}

	@Override
	public void setBusinessHouseAddress(String businessHouseAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessHouseAddress = businessHouseAddress;
	}

	@JSON
	@Override
	public String getPhotographFile() {
		if (_photographFile == null) {
			return "";
		}
		else {
			return _photographFile;
		}
	}

	@Override
	public void setPhotographFile(String photographFile) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_photographFile = photographFile;
	}

	@JSON
	@Override
	public String getTradeLicDoc() {
		if (_tradeLicDoc == null) {
			return "";
		}
		else {
			return _tradeLicDoc;
		}
	}

	@Override
	public void setTradeLicDoc(String tradeLicDoc) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tradeLicDoc = tradeLicDoc;
	}

	@JSON
	@Override
	public String getBinDoc() {
		if (_binDoc == null) {
			return "";
		}
		else {
			return _binDoc;
		}
	}

	@Override
	public void setBinDoc(String binDoc) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_binDoc = binDoc;
	}

	@JSON
	@Override
	public String getTinDoc() {
		if (_tinDoc == null) {
			return "";
		}
		else {
			return _tinDoc;
		}
	}

	@Override
	public void setTinDoc(String tinDoc) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tinDoc = tinDoc;
	}

	@JSON
	@Override
	public String getBankStat() {
		if (_bankStat == null) {
			return "";
		}
		else {
			return _bankStat;
		}
	}

	@Override
	public void setBankStat(String bankStat) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bankStat = bankStat;
	}

	@JSON
	@Override
	public String getOtherReleventDoc() {
		if (_otherReleventDoc == null) {
			return "";
		}
		else {
			return _otherReleventDoc;
		}
	}

	@Override
	public void setOtherReleventDoc(String otherReleventDoc) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_otherReleventDoc = otherReleventDoc;
	}

	@JSON
	@Override
	public String getComments() {
		if (_comments == null) {
			return "";
		}
		else {
			return _comments;
		}
	}

	@Override
	public void setComments(String comments) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_comments = comments;
	}

	@JSON
	@Override
	public String getFoodGrainLicenseType() {
		if (_foodGrainLicenseType == null) {
			return "";
		}
		else {
			return _foodGrainLicenseType;
		}
	}

	@Override
	public void setFoodGrainLicenseType(String foodGrainLicenseType) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_foodGrainLicenseType = foodGrainLicenseType;
	}

	@JSON
	@Override
	public long getDivision() {
		return _division;
	}

	@Override
	public void setDivision(long division) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_division = division;
	}

	@JSON
	@Override
	public long getDistrict() {
		return _district;
	}

	@Override
	public void setDistrict(long district) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_district = district;
	}

	@JSON
	@Override
	public long getUpzilla() {
		return _upzilla;
	}

	@Override
	public void setUpzilla(long upzilla) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_upzilla = upzilla;
	}

	@JSON
	@Override
	public long getUnionName() {
		return _unionName;
	}

	@Override
	public void setUnionName(long unionName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_unionName = unionName;
	}

	@JSON
	@Override
	public String getVillage() {
		if (_village == null) {
			return "";
		}
		else {
			return _village;
		}
	}

	@Override
	public void setVillage(String village) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_village = village;
	}

	@JSON
	@Override
	public String getWard() {
		if (_ward == null) {
			return "";
		}
		else {
			return _ward;
		}
	}

	@Override
	public void setWard(String ward) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ward = ward;
	}

	@JSON
	@Override
	public String getZipCode() {
		if (_zipCode == null) {
			return "";
		}
		else {
			return _zipCode;
		}
	}

	@Override
	public void setZipCode(String zipCode) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_zipCode = zipCode;
	}

	@JSON
	@Override
	public String getPostOffice() {
		if (_postOffice == null) {
			return "";
		}
		else {
			return _postOffice;
		}
	}

	@Override
	public void setPostOffice(String postOffice) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_postOffice = postOffice;
	}

	@JSON
	@Override
	public String getHouseAddress() {
		if (_houseAddress == null) {
			return "";
		}
		else {
			return _houseAddress;
		}
	}

	@Override
	public void setHouseAddress(String houseAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_houseAddress = houseAddress;
	}

	@JSON
	@Override
	public String getPassword() {
		if (_password == null) {
			return "";
		}
		else {
			return _password;
		}
	}

	@Override
	public void setPassword(String password) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_password = password;
	}

	@JSON
	@Override
	public String getFatherName() {
		if (_fatherName == null) {
			return "";
		}
		else {
			return _fatherName;
		}
	}

	@Override
	public void setFatherName(String fatherName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_fatherName = fatherName;
	}

	@JSON
	@Override
	public String getLastName() {
		if (_lastName == null) {
			return "";
		}
		else {
			return _lastName;
		}
	}

	@Override
	public void setLastName(String lastName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_lastName = lastName;
	}

	@JSON
	@Override
	public String getMotherName() {
		if (_motherName == null) {
			return "";
		}
		else {
			return _motherName;
		}
	}

	@Override
	public void setMotherName(String motherName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_motherName = motherName;
	}

	@JSON
	@Override
	public String getGender() {
		if (_gender == null) {
			return "";
		}
		else {
			return _gender;
		}
	}

	@Override
	public void setGender(String gender) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_gender = gender;
	}

	@JSON
	@Override
	public String getMaritalStatus() {
		if (_maritalStatus == null) {
			return "";
		}
		else {
			return _maritalStatus;
		}
	}

	@Override
	public void setMaritalStatus(String maritalStatus) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_maritalStatus = maritalStatus;
	}

	@JSON
	@Override
	public Date getBirthDate() {
		return _birthDate;
	}

	@Override
	public void setBirthDate(Date birthDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_birthDate = birthDate;
	}

	@JSON
	@Override
	public String getMobileNo() {
		if (_mobileNo == null) {
			return "";
		}
		else {
			return _mobileNo;
		}
	}

	@Override
	public void setMobileNo(String mobileNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_mobileNo = mobileNo;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getEmail() {
		if (_email == null) {
			return "";
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_email = email;
	}

	@JSON
	@Override
	public String getNidDivision() {
		if (_nidDivision == null) {
			return "";
		}
		else {
			return _nidDivision;
		}
	}

	@Override
	public void setNidDivision(String nidDivision) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nidDivision = nidDivision;
	}

	@JSON
	@Override
	public String getNidDistrict() {
		if (_nidDistrict == null) {
			return "";
		}
		else {
			return _nidDistrict;
		}
	}

	@Override
	public void setNidDistrict(String nidDistrict) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nidDistrict = nidDistrict;
	}

	@JSON
	@Override
	public String getNidUpzilla() {
		if (_nidUpzilla == null) {
			return "";
		}
		else {
			return _nidUpzilla;
		}
	}

	@Override
	public void setNidUpzilla(String nidUpzilla) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nidUpzilla = nidUpzilla;
	}

	@JSON
	@Override
	public String getNidUnion() {
		if (_nidUnion == null) {
			return "";
		}
		else {
			return _nidUnion;
		}
	}

	@Override
	public void setNidUnion(String nidUnion) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nidUnion = nidUnion;
	}

	@JSON
	@Override
	public String getNidVillage() {
		if (_nidVillage == null) {
			return "";
		}
		else {
			return _nidVillage;
		}
	}

	@Override
	public void setNidVillage(String nidVillage) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nidVillage = nidVillage;
	}

	@JSON
	@Override
	public String getNidWard() {
		if (_nidWard == null) {
			return "";
		}
		else {
			return _nidWard;
		}
	}

	@Override
	public void setNidWard(String nidWard) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nidWard = nidWard;
	}

	@JSON
	@Override
	public String getNidZipCode() {
		if (_nidZipCode == null) {
			return "";
		}
		else {
			return _nidZipCode;
		}
	}

	@Override
	public void setNidZipCode(String nidZipCode) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nidZipCode = nidZipCode;
	}

	@JSON
	@Override
	public String getNidPostOffice() {
		if (_nidPostOffice == null) {
			return "";
		}
		else {
			return _nidPostOffice;
		}
	}

	@Override
	public void setNidPostOffice(String nidPostOffice) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nidPostOffice = nidPostOffice;
	}

	@JSON
	@Override
	public String getNidHouseAddress() {
		if (_nidHouseAddress == null) {
			return "";
		}
		else {
			return _nidHouseAddress;
		}
	}

	@Override
	public void setNidHouseAddress(String nidHouseAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nidHouseAddress = nidHouseAddress;
	}

	@JSON
	@Override
	public boolean getIsSubmit() {
		return _isSubmit;
	}

	@JSON
	@Override
	public boolean isIsSubmit() {
		return _isSubmit;
	}

	@Override
	public void setIsSubmit(boolean isSubmit) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_isSubmit = isSubmit;
	}

	@JSON
	@Override
	public String getElectricExemptionMemo() {
		if (_electricExemptionMemo == null) {
			return "";
		}
		else {
			return _electricExemptionMemo;
		}
	}

	@Override
	public void setElectricExemptionMemo(String electricExemptionMemo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_electricExemptionMemo = electricExemptionMemo;
	}

	@JSON
	@Override
	public String getEnvClrMemo() {
		if (_envClrMemo == null) {
			return "";
		}
		else {
			return _envClrMemo;
		}
	}

	@Override
	public void setEnvClrMemo(String envClrMemo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_envClrMemo = envClrMemo;
	}

	@JSON
	@Override
	public String getBstiClrMemo() {
		if (_bstiClrMemo == null) {
			return "";
		}
		else {
			return _bstiClrMemo;
		}
	}

	@Override
	public void setBstiClrMemo(String bstiClrMemo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_bstiClrMemo = bstiClrMemo;
	}

	@JSON
	@Override
	public String getFireLicNumDoc() {
		if (_fireLicNumDoc == null) {
			return "";
		}
		else {
			return _fireLicNumDoc;
		}
	}

	@Override
	public void setFireLicNumDoc(String fireLicNumDoc) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_fireLicNumDoc = fireLicNumDoc;
	}

	@JSON
	@Override
	public String getProductType() {
		if (_productType == null) {
			return "";
		}
		else {
			return _productType;
		}
	}

	@Override
	public void setProductType(String productType) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_productType = productType;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, licnsUserRegs.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public licnsUserRegs toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, licnsUserRegs>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		licnsUserRegsImpl licnsUserRegsImpl = new licnsUserRegsImpl();

		licnsUserRegsImpl.setLicUserId(getLicUserId());
		licnsUserRegsImpl.setNationalId(getNationalId());
		licnsUserRegsImpl.setApplicantName(getApplicantName());
		licnsUserRegsImpl.setTradeLicenseNo(getTradeLicenseNo());
		licnsUserRegsImpl.setTradeLicenseExpiryDate(
			getTradeLicenseExpiryDate());
		licnsUserRegsImpl.setTradeLicenseIssuerCode(
			getTradeLicenseIssuerCode());
		licnsUserRegsImpl.setTradeLicenseIssuerCity(
			getTradeLicenseIssuerCity());
		licnsUserRegsImpl.setBusinessIdentificationNo(
			getBusinessIdentificationNo());
		licnsUserRegsImpl.setTaxIdentificationNo(getTaxIdentificationNo());
		licnsUserRegsImpl.setBusinessName(getBusinessName());
		licnsUserRegsImpl.setBusinessType(getBusinessType());
		licnsUserRegsImpl.setBusinessDivision(getBusinessDivision());
		licnsUserRegsImpl.setBusinessDistrict(getBusinessDistrict());
		licnsUserRegsImpl.setBusinessUpzilla(getBusinessUpzilla());
		licnsUserRegsImpl.setBusinessUnionName(getBusinessUnionName());
		licnsUserRegsImpl.setBusinessVillage(getBusinessVillage());
		licnsUserRegsImpl.setBusinessWard(getBusinessWard());
		licnsUserRegsImpl.setBusinessZipCode(getBusinessZipCode());
		licnsUserRegsImpl.setBusinessPostOffice(getBusinessPostOffice());
		licnsUserRegsImpl.setBusinessHouseAddress(getBusinessHouseAddress());
		licnsUserRegsImpl.setPhotographFile(getPhotographFile());
		licnsUserRegsImpl.setTradeLicDoc(getTradeLicDoc());
		licnsUserRegsImpl.setBinDoc(getBinDoc());
		licnsUserRegsImpl.setTinDoc(getTinDoc());
		licnsUserRegsImpl.setBankStat(getBankStat());
		licnsUserRegsImpl.setOtherReleventDoc(getOtherReleventDoc());
		licnsUserRegsImpl.setComments(getComments());
		licnsUserRegsImpl.setFoodGrainLicenseType(getFoodGrainLicenseType());
		licnsUserRegsImpl.setDivision(getDivision());
		licnsUserRegsImpl.setDistrict(getDistrict());
		licnsUserRegsImpl.setUpzilla(getUpzilla());
		licnsUserRegsImpl.setUnionName(getUnionName());
		licnsUserRegsImpl.setVillage(getVillage());
		licnsUserRegsImpl.setWard(getWard());
		licnsUserRegsImpl.setZipCode(getZipCode());
		licnsUserRegsImpl.setPostOffice(getPostOffice());
		licnsUserRegsImpl.setHouseAddress(getHouseAddress());
		licnsUserRegsImpl.setPassword(getPassword());
		licnsUserRegsImpl.setFatherName(getFatherName());
		licnsUserRegsImpl.setLastName(getLastName());
		licnsUserRegsImpl.setMotherName(getMotherName());
		licnsUserRegsImpl.setGender(getGender());
		licnsUserRegsImpl.setMaritalStatus(getMaritalStatus());
		licnsUserRegsImpl.setBirthDate(getBirthDate());
		licnsUserRegsImpl.setMobileNo(getMobileNo());
		licnsUserRegsImpl.setUserId(getUserId());
		licnsUserRegsImpl.setEmail(getEmail());
		licnsUserRegsImpl.setNidDivision(getNidDivision());
		licnsUserRegsImpl.setNidDistrict(getNidDistrict());
		licnsUserRegsImpl.setNidUpzilla(getNidUpzilla());
		licnsUserRegsImpl.setNidUnion(getNidUnion());
		licnsUserRegsImpl.setNidVillage(getNidVillage());
		licnsUserRegsImpl.setNidWard(getNidWard());
		licnsUserRegsImpl.setNidZipCode(getNidZipCode());
		licnsUserRegsImpl.setNidPostOffice(getNidPostOffice());
		licnsUserRegsImpl.setNidHouseAddress(getNidHouseAddress());
		licnsUserRegsImpl.setIsSubmit(isIsSubmit());
		licnsUserRegsImpl.setElectricExemptionMemo(getElectricExemptionMemo());
		licnsUserRegsImpl.setEnvClrMemo(getEnvClrMemo());
		licnsUserRegsImpl.setBstiClrMemo(getBstiClrMemo());
		licnsUserRegsImpl.setFireLicNumDoc(getFireLicNumDoc());
		licnsUserRegsImpl.setProductType(getProductType());

		licnsUserRegsImpl.resetOriginalValues();

		return licnsUserRegsImpl;
	}

	@Override
	public licnsUserRegs cloneWithOriginalValues() {
		licnsUserRegsImpl licnsUserRegsImpl = new licnsUserRegsImpl();

		licnsUserRegsImpl.setLicUserId(
			this.<Long>getColumnOriginalValue("licUserId"));
		licnsUserRegsImpl.setNationalId(
			this.<String>getColumnOriginalValue("nationalId"));
		licnsUserRegsImpl.setApplicantName(
			this.<String>getColumnOriginalValue("applicantName"));
		licnsUserRegsImpl.setTradeLicenseNo(
			this.<String>getColumnOriginalValue("tradeLicenseNo"));
		licnsUserRegsImpl.setTradeLicenseExpiryDate(
			this.<Date>getColumnOriginalValue("tradeLicenseExpiryDate"));
		licnsUserRegsImpl.setTradeLicenseIssuerCode(
			this.<String>getColumnOriginalValue("tradeLicenseIssuerCode"));
		licnsUserRegsImpl.setTradeLicenseIssuerCity(
			this.<String>getColumnOriginalValue("tradeLicenseIssuerCity"));
		licnsUserRegsImpl.setBusinessIdentificationNo(
			this.<String>getColumnOriginalValue("businessIdentificationNo"));
		licnsUserRegsImpl.setTaxIdentificationNo(
			this.<String>getColumnOriginalValue("taxIdentificationNo"));
		licnsUserRegsImpl.setBusinessName(
			this.<String>getColumnOriginalValue("businessName"));
		licnsUserRegsImpl.setBusinessType(
			this.<String>getColumnOriginalValue("businessType"));
		licnsUserRegsImpl.setBusinessDivision(
			this.<Long>getColumnOriginalValue("businessDivision"));
		licnsUserRegsImpl.setBusinessDistrict(
			this.<Long>getColumnOriginalValue("businessDistrict"));
		licnsUserRegsImpl.setBusinessUpzilla(
			this.<Long>getColumnOriginalValue("businessUpzilla"));
		licnsUserRegsImpl.setBusinessUnionName(
			this.<Long>getColumnOriginalValue("businessUnionName"));
		licnsUserRegsImpl.setBusinessVillage(
			this.<String>getColumnOriginalValue("businessVillage"));
		licnsUserRegsImpl.setBusinessWard(
			this.<String>getColumnOriginalValue("businessWard"));
		licnsUserRegsImpl.setBusinessZipCode(
			this.<String>getColumnOriginalValue("businessZipCode"));
		licnsUserRegsImpl.setBusinessPostOffice(
			this.<String>getColumnOriginalValue("businessPostOffice"));
		licnsUserRegsImpl.setBusinessHouseAddress(
			this.<String>getColumnOriginalValue("businessHouseAddress"));
		licnsUserRegsImpl.setPhotographFile(
			this.<String>getColumnOriginalValue("photographFile"));
		licnsUserRegsImpl.setTradeLicDoc(
			this.<String>getColumnOriginalValue("tradeLicDoc"));
		licnsUserRegsImpl.setBinDoc(
			this.<String>getColumnOriginalValue("binDoc"));
		licnsUserRegsImpl.setTinDoc(
			this.<String>getColumnOriginalValue("tinDoc"));
		licnsUserRegsImpl.setBankStat(
			this.<String>getColumnOriginalValue("bankStat"));
		licnsUserRegsImpl.setOtherReleventDoc(
			this.<String>getColumnOriginalValue("otherReleventDoc"));
		licnsUserRegsImpl.setComments(
			this.<String>getColumnOriginalValue("comments"));
		licnsUserRegsImpl.setFoodGrainLicenseType(
			this.<String>getColumnOriginalValue("foodGrainLicenseType"));
		licnsUserRegsImpl.setDivision(
			this.<Long>getColumnOriginalValue("division"));
		licnsUserRegsImpl.setDistrict(
			this.<Long>getColumnOriginalValue("district"));
		licnsUserRegsImpl.setUpzilla(
			this.<Long>getColumnOriginalValue("upzilla"));
		licnsUserRegsImpl.setUnionName(
			this.<Long>getColumnOriginalValue("unionName"));
		licnsUserRegsImpl.setVillage(
			this.<String>getColumnOriginalValue("village"));
		licnsUserRegsImpl.setWard(this.<String>getColumnOriginalValue("ward"));
		licnsUserRegsImpl.setZipCode(
			this.<String>getColumnOriginalValue("zipCode"));
		licnsUserRegsImpl.setPostOffice(
			this.<String>getColumnOriginalValue("postOffice"));
		licnsUserRegsImpl.setHouseAddress(
			this.<String>getColumnOriginalValue("houseAddress"));
		licnsUserRegsImpl.setPassword(
			this.<String>getColumnOriginalValue("password_"));
		licnsUserRegsImpl.setFatherName(
			this.<String>getColumnOriginalValue("fatherName"));
		licnsUserRegsImpl.setLastName(
			this.<String>getColumnOriginalValue("lastName"));
		licnsUserRegsImpl.setMotherName(
			this.<String>getColumnOriginalValue("motherName"));
		licnsUserRegsImpl.setGender(
			this.<String>getColumnOriginalValue("gender"));
		licnsUserRegsImpl.setMaritalStatus(
			this.<String>getColumnOriginalValue("maritalStatus"));
		licnsUserRegsImpl.setBirthDate(
			this.<Date>getColumnOriginalValue("birthDate"));
		licnsUserRegsImpl.setMobileNo(
			this.<String>getColumnOriginalValue("mobileNo"));
		licnsUserRegsImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		licnsUserRegsImpl.setEmail(
			this.<String>getColumnOriginalValue("email"));
		licnsUserRegsImpl.setNidDivision(
			this.<String>getColumnOriginalValue("nidDivision"));
		licnsUserRegsImpl.setNidDistrict(
			this.<String>getColumnOriginalValue("nidDistrict"));
		licnsUserRegsImpl.setNidUpzilla(
			this.<String>getColumnOriginalValue("nidUpzilla"));
		licnsUserRegsImpl.setNidUnion(
			this.<String>getColumnOriginalValue("nidUnion"));
		licnsUserRegsImpl.setNidVillage(
			this.<String>getColumnOriginalValue("nidVillage"));
		licnsUserRegsImpl.setNidWard(
			this.<String>getColumnOriginalValue("nidWard"));
		licnsUserRegsImpl.setNidZipCode(
			this.<String>getColumnOriginalValue("nidZipCode"));
		licnsUserRegsImpl.setNidPostOffice(
			this.<String>getColumnOriginalValue("nidPostOffice"));
		licnsUserRegsImpl.setNidHouseAddress(
			this.<String>getColumnOriginalValue("nidHouseAddress"));
		licnsUserRegsImpl.setIsSubmit(
			this.<Boolean>getColumnOriginalValue("isSubmit"));
		licnsUserRegsImpl.setElectricExemptionMemo(
			this.<String>getColumnOriginalValue("electricExemptionMemo"));
		licnsUserRegsImpl.setEnvClrMemo(
			this.<String>getColumnOriginalValue("envClrMemo"));
		licnsUserRegsImpl.setBstiClrMemo(
			this.<String>getColumnOriginalValue("bstiClrMemo"));
		licnsUserRegsImpl.setFireLicNumDoc(
			this.<String>getColumnOriginalValue("fireLicNumDoc"));
		licnsUserRegsImpl.setProductType(
			this.<String>getColumnOriginalValue("productType"));

		return licnsUserRegsImpl;
	}

	@Override
	public int compareTo(licnsUserRegs licnsUserRegs) {
		long primaryKey = licnsUserRegs.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof licnsUserRegs)) {
			return false;
		}

		licnsUserRegs licnsUserRegs = (licnsUserRegs)object;

		long primaryKey = licnsUserRegs.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<licnsUserRegs> toCacheModel() {
		licnsUserRegsCacheModel licnsUserRegsCacheModel =
			new licnsUserRegsCacheModel();

		licnsUserRegsCacheModel.licUserId = getLicUserId();

		licnsUserRegsCacheModel.nationalId = getNationalId();

		String nationalId = licnsUserRegsCacheModel.nationalId;

		if ((nationalId != null) && (nationalId.length() == 0)) {
			licnsUserRegsCacheModel.nationalId = null;
		}

		licnsUserRegsCacheModel.applicantName = getApplicantName();

		String applicantName = licnsUserRegsCacheModel.applicantName;

		if ((applicantName != null) && (applicantName.length() == 0)) {
			licnsUserRegsCacheModel.applicantName = null;
		}

		licnsUserRegsCacheModel.tradeLicenseNo = getTradeLicenseNo();

		String tradeLicenseNo = licnsUserRegsCacheModel.tradeLicenseNo;

		if ((tradeLicenseNo != null) && (tradeLicenseNo.length() == 0)) {
			licnsUserRegsCacheModel.tradeLicenseNo = null;
		}

		Date tradeLicenseExpiryDate = getTradeLicenseExpiryDate();

		if (tradeLicenseExpiryDate != null) {
			licnsUserRegsCacheModel.tradeLicenseExpiryDate =
				tradeLicenseExpiryDate.getTime();
		}
		else {
			licnsUserRegsCacheModel.tradeLicenseExpiryDate = Long.MIN_VALUE;
		}

		licnsUserRegsCacheModel.tradeLicenseIssuerCode =
			getTradeLicenseIssuerCode();

		String tradeLicenseIssuerCode =
			licnsUserRegsCacheModel.tradeLicenseIssuerCode;

		if ((tradeLicenseIssuerCode != null) &&
			(tradeLicenseIssuerCode.length() == 0)) {

			licnsUserRegsCacheModel.tradeLicenseIssuerCode = null;
		}

		licnsUserRegsCacheModel.tradeLicenseIssuerCity =
			getTradeLicenseIssuerCity();

		String tradeLicenseIssuerCity =
			licnsUserRegsCacheModel.tradeLicenseIssuerCity;

		if ((tradeLicenseIssuerCity != null) &&
			(tradeLicenseIssuerCity.length() == 0)) {

			licnsUserRegsCacheModel.tradeLicenseIssuerCity = null;
		}

		licnsUserRegsCacheModel.businessIdentificationNo =
			getBusinessIdentificationNo();

		String businessIdentificationNo =
			licnsUserRegsCacheModel.businessIdentificationNo;

		if ((businessIdentificationNo != null) &&
			(businessIdentificationNo.length() == 0)) {

			licnsUserRegsCacheModel.businessIdentificationNo = null;
		}

		licnsUserRegsCacheModel.taxIdentificationNo = getTaxIdentificationNo();

		String taxIdentificationNo =
			licnsUserRegsCacheModel.taxIdentificationNo;

		if ((taxIdentificationNo != null) &&
			(taxIdentificationNo.length() == 0)) {

			licnsUserRegsCacheModel.taxIdentificationNo = null;
		}

		licnsUserRegsCacheModel.businessName = getBusinessName();

		String businessName = licnsUserRegsCacheModel.businessName;

		if ((businessName != null) && (businessName.length() == 0)) {
			licnsUserRegsCacheModel.businessName = null;
		}

		licnsUserRegsCacheModel.businessType = getBusinessType();

		String businessType = licnsUserRegsCacheModel.businessType;

		if ((businessType != null) && (businessType.length() == 0)) {
			licnsUserRegsCacheModel.businessType = null;
		}

		licnsUserRegsCacheModel.businessDivision = getBusinessDivision();

		licnsUserRegsCacheModel.businessDistrict = getBusinessDistrict();

		licnsUserRegsCacheModel.businessUpzilla = getBusinessUpzilla();

		licnsUserRegsCacheModel.businessUnionName = getBusinessUnionName();

		licnsUserRegsCacheModel.businessVillage = getBusinessVillage();

		String businessVillage = licnsUserRegsCacheModel.businessVillage;

		if ((businessVillage != null) && (businessVillage.length() == 0)) {
			licnsUserRegsCacheModel.businessVillage = null;
		}

		licnsUserRegsCacheModel.businessWard = getBusinessWard();

		String businessWard = licnsUserRegsCacheModel.businessWard;

		if ((businessWard != null) && (businessWard.length() == 0)) {
			licnsUserRegsCacheModel.businessWard = null;
		}

		licnsUserRegsCacheModel.businessZipCode = getBusinessZipCode();

		String businessZipCode = licnsUserRegsCacheModel.businessZipCode;

		if ((businessZipCode != null) && (businessZipCode.length() == 0)) {
			licnsUserRegsCacheModel.businessZipCode = null;
		}

		licnsUserRegsCacheModel.businessPostOffice = getBusinessPostOffice();

		String businessPostOffice = licnsUserRegsCacheModel.businessPostOffice;

		if ((businessPostOffice != null) &&
			(businessPostOffice.length() == 0)) {

			licnsUserRegsCacheModel.businessPostOffice = null;
		}

		licnsUserRegsCacheModel.businessHouseAddress =
			getBusinessHouseAddress();

		String businessHouseAddress =
			licnsUserRegsCacheModel.businessHouseAddress;

		if ((businessHouseAddress != null) &&
			(businessHouseAddress.length() == 0)) {

			licnsUserRegsCacheModel.businessHouseAddress = null;
		}

		licnsUserRegsCacheModel.photographFile = getPhotographFile();

		String photographFile = licnsUserRegsCacheModel.photographFile;

		if ((photographFile != null) && (photographFile.length() == 0)) {
			licnsUserRegsCacheModel.photographFile = null;
		}

		licnsUserRegsCacheModel.tradeLicDoc = getTradeLicDoc();

		String tradeLicDoc = licnsUserRegsCacheModel.tradeLicDoc;

		if ((tradeLicDoc != null) && (tradeLicDoc.length() == 0)) {
			licnsUserRegsCacheModel.tradeLicDoc = null;
		}

		licnsUserRegsCacheModel.binDoc = getBinDoc();

		String binDoc = licnsUserRegsCacheModel.binDoc;

		if ((binDoc != null) && (binDoc.length() == 0)) {
			licnsUserRegsCacheModel.binDoc = null;
		}

		licnsUserRegsCacheModel.tinDoc = getTinDoc();

		String tinDoc = licnsUserRegsCacheModel.tinDoc;

		if ((tinDoc != null) && (tinDoc.length() == 0)) {
			licnsUserRegsCacheModel.tinDoc = null;
		}

		licnsUserRegsCacheModel.bankStat = getBankStat();

		String bankStat = licnsUserRegsCacheModel.bankStat;

		if ((bankStat != null) && (bankStat.length() == 0)) {
			licnsUserRegsCacheModel.bankStat = null;
		}

		licnsUserRegsCacheModel.otherReleventDoc = getOtherReleventDoc();

		String otherReleventDoc = licnsUserRegsCacheModel.otherReleventDoc;

		if ((otherReleventDoc != null) && (otherReleventDoc.length() == 0)) {
			licnsUserRegsCacheModel.otherReleventDoc = null;
		}

		licnsUserRegsCacheModel.comments = getComments();

		String comments = licnsUserRegsCacheModel.comments;

		if ((comments != null) && (comments.length() == 0)) {
			licnsUserRegsCacheModel.comments = null;
		}

		licnsUserRegsCacheModel.foodGrainLicenseType =
			getFoodGrainLicenseType();

		String foodGrainLicenseType =
			licnsUserRegsCacheModel.foodGrainLicenseType;

		if ((foodGrainLicenseType != null) &&
			(foodGrainLicenseType.length() == 0)) {

			licnsUserRegsCacheModel.foodGrainLicenseType = null;
		}

		licnsUserRegsCacheModel.division = getDivision();

		licnsUserRegsCacheModel.district = getDistrict();

		licnsUserRegsCacheModel.upzilla = getUpzilla();

		licnsUserRegsCacheModel.unionName = getUnionName();

		licnsUserRegsCacheModel.village = getVillage();

		String village = licnsUserRegsCacheModel.village;

		if ((village != null) && (village.length() == 0)) {
			licnsUserRegsCacheModel.village = null;
		}

		licnsUserRegsCacheModel.ward = getWard();

		String ward = licnsUserRegsCacheModel.ward;

		if ((ward != null) && (ward.length() == 0)) {
			licnsUserRegsCacheModel.ward = null;
		}

		licnsUserRegsCacheModel.zipCode = getZipCode();

		String zipCode = licnsUserRegsCacheModel.zipCode;

		if ((zipCode != null) && (zipCode.length() == 0)) {
			licnsUserRegsCacheModel.zipCode = null;
		}

		licnsUserRegsCacheModel.postOffice = getPostOffice();

		String postOffice = licnsUserRegsCacheModel.postOffice;

		if ((postOffice != null) && (postOffice.length() == 0)) {
			licnsUserRegsCacheModel.postOffice = null;
		}

		licnsUserRegsCacheModel.houseAddress = getHouseAddress();

		String houseAddress = licnsUserRegsCacheModel.houseAddress;

		if ((houseAddress != null) && (houseAddress.length() == 0)) {
			licnsUserRegsCacheModel.houseAddress = null;
		}

		licnsUserRegsCacheModel.password = getPassword();

		String password = licnsUserRegsCacheModel.password;

		if ((password != null) && (password.length() == 0)) {
			licnsUserRegsCacheModel.password = null;
		}

		licnsUserRegsCacheModel.fatherName = getFatherName();

		String fatherName = licnsUserRegsCacheModel.fatherName;

		if ((fatherName != null) && (fatherName.length() == 0)) {
			licnsUserRegsCacheModel.fatherName = null;
		}

		licnsUserRegsCacheModel.lastName = getLastName();

		String lastName = licnsUserRegsCacheModel.lastName;

		if ((lastName != null) && (lastName.length() == 0)) {
			licnsUserRegsCacheModel.lastName = null;
		}

		licnsUserRegsCacheModel.motherName = getMotherName();

		String motherName = licnsUserRegsCacheModel.motherName;

		if ((motherName != null) && (motherName.length() == 0)) {
			licnsUserRegsCacheModel.motherName = null;
		}

		licnsUserRegsCacheModel.gender = getGender();

		String gender = licnsUserRegsCacheModel.gender;

		if ((gender != null) && (gender.length() == 0)) {
			licnsUserRegsCacheModel.gender = null;
		}

		licnsUserRegsCacheModel.maritalStatus = getMaritalStatus();

		String maritalStatus = licnsUserRegsCacheModel.maritalStatus;

		if ((maritalStatus != null) && (maritalStatus.length() == 0)) {
			licnsUserRegsCacheModel.maritalStatus = null;
		}

		Date birthDate = getBirthDate();

		if (birthDate != null) {
			licnsUserRegsCacheModel.birthDate = birthDate.getTime();
		}
		else {
			licnsUserRegsCacheModel.birthDate = Long.MIN_VALUE;
		}

		licnsUserRegsCacheModel.mobileNo = getMobileNo();

		String mobileNo = licnsUserRegsCacheModel.mobileNo;

		if ((mobileNo != null) && (mobileNo.length() == 0)) {
			licnsUserRegsCacheModel.mobileNo = null;
		}

		licnsUserRegsCacheModel.userId = getUserId();

		licnsUserRegsCacheModel.email = getEmail();

		String email = licnsUserRegsCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			licnsUserRegsCacheModel.email = null;
		}

		licnsUserRegsCacheModel.nidDivision = getNidDivision();

		String nidDivision = licnsUserRegsCacheModel.nidDivision;

		if ((nidDivision != null) && (nidDivision.length() == 0)) {
			licnsUserRegsCacheModel.nidDivision = null;
		}

		licnsUserRegsCacheModel.nidDistrict = getNidDistrict();

		String nidDistrict = licnsUserRegsCacheModel.nidDistrict;

		if ((nidDistrict != null) && (nidDistrict.length() == 0)) {
			licnsUserRegsCacheModel.nidDistrict = null;
		}

		licnsUserRegsCacheModel.nidUpzilla = getNidUpzilla();

		String nidUpzilla = licnsUserRegsCacheModel.nidUpzilla;

		if ((nidUpzilla != null) && (nidUpzilla.length() == 0)) {
			licnsUserRegsCacheModel.nidUpzilla = null;
		}

		licnsUserRegsCacheModel.nidUnion = getNidUnion();

		String nidUnion = licnsUserRegsCacheModel.nidUnion;

		if ((nidUnion != null) && (nidUnion.length() == 0)) {
			licnsUserRegsCacheModel.nidUnion = null;
		}

		licnsUserRegsCacheModel.nidVillage = getNidVillage();

		String nidVillage = licnsUserRegsCacheModel.nidVillage;

		if ((nidVillage != null) && (nidVillage.length() == 0)) {
			licnsUserRegsCacheModel.nidVillage = null;
		}

		licnsUserRegsCacheModel.nidWard = getNidWard();

		String nidWard = licnsUserRegsCacheModel.nidWard;

		if ((nidWard != null) && (nidWard.length() == 0)) {
			licnsUserRegsCacheModel.nidWard = null;
		}

		licnsUserRegsCacheModel.nidZipCode = getNidZipCode();

		String nidZipCode = licnsUserRegsCacheModel.nidZipCode;

		if ((nidZipCode != null) && (nidZipCode.length() == 0)) {
			licnsUserRegsCacheModel.nidZipCode = null;
		}

		licnsUserRegsCacheModel.nidPostOffice = getNidPostOffice();

		String nidPostOffice = licnsUserRegsCacheModel.nidPostOffice;

		if ((nidPostOffice != null) && (nidPostOffice.length() == 0)) {
			licnsUserRegsCacheModel.nidPostOffice = null;
		}

		licnsUserRegsCacheModel.nidHouseAddress = getNidHouseAddress();

		String nidHouseAddress = licnsUserRegsCacheModel.nidHouseAddress;

		if ((nidHouseAddress != null) && (nidHouseAddress.length() == 0)) {
			licnsUserRegsCacheModel.nidHouseAddress = null;
		}

		licnsUserRegsCacheModel.isSubmit = isIsSubmit();

		licnsUserRegsCacheModel.electricExemptionMemo =
			getElectricExemptionMemo();

		String electricExemptionMemo =
			licnsUserRegsCacheModel.electricExemptionMemo;

		if ((electricExemptionMemo != null) &&
			(electricExemptionMemo.length() == 0)) {

			licnsUserRegsCacheModel.electricExemptionMemo = null;
		}

		licnsUserRegsCacheModel.envClrMemo = getEnvClrMemo();

		String envClrMemo = licnsUserRegsCacheModel.envClrMemo;

		if ((envClrMemo != null) && (envClrMemo.length() == 0)) {
			licnsUserRegsCacheModel.envClrMemo = null;
		}

		licnsUserRegsCacheModel.bstiClrMemo = getBstiClrMemo();

		String bstiClrMemo = licnsUserRegsCacheModel.bstiClrMemo;

		if ((bstiClrMemo != null) && (bstiClrMemo.length() == 0)) {
			licnsUserRegsCacheModel.bstiClrMemo = null;
		}

		licnsUserRegsCacheModel.fireLicNumDoc = getFireLicNumDoc();

		String fireLicNumDoc = licnsUserRegsCacheModel.fireLicNumDoc;

		if ((fireLicNumDoc != null) && (fireLicNumDoc.length() == 0)) {
			licnsUserRegsCacheModel.fireLicNumDoc = null;
		}

		licnsUserRegsCacheModel.productType = getProductType();

		String productType = licnsUserRegsCacheModel.productType;

		if ((productType != null) && (productType.length() == 0)) {
			licnsUserRegsCacheModel.productType = null;
		}

		return licnsUserRegsCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<licnsUserRegs, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<licnsUserRegs, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<licnsUserRegs, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((licnsUserRegs)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, licnsUserRegs>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					licnsUserRegs.class, ModelWrapper.class);

	}

	private long _licUserId;
	private String _nationalId;
	private String _applicantName;
	private String _tradeLicenseNo;
	private Date _tradeLicenseExpiryDate;
	private String _tradeLicenseIssuerCode;
	private String _tradeLicenseIssuerCity;
	private String _businessIdentificationNo;
	private String _taxIdentificationNo;
	private String _businessName;
	private String _businessType;
	private long _businessDivision;
	private long _businessDistrict;
	private long _businessUpzilla;
	private long _businessUnionName;
	private String _businessVillage;
	private String _businessWard;
	private String _businessZipCode;
	private String _businessPostOffice;
	private String _businessHouseAddress;
	private String _photographFile;
	private String _tradeLicDoc;
	private String _binDoc;
	private String _tinDoc;
	private String _bankStat;
	private String _otherReleventDoc;
	private String _comments;
	private String _foodGrainLicenseType;
	private long _division;
	private long _district;
	private long _upzilla;
	private long _unionName;
	private String _village;
	private String _ward;
	private String _zipCode;
	private String _postOffice;
	private String _houseAddress;
	private String _password;
	private String _fatherName;
	private String _lastName;
	private String _motherName;
	private String _gender;
	private String _maritalStatus;
	private Date _birthDate;
	private String _mobileNo;
	private long _userId;
	private String _email;
	private String _nidDivision;
	private String _nidDistrict;
	private String _nidUpzilla;
	private String _nidUnion;
	private String _nidVillage;
	private String _nidWard;
	private String _nidZipCode;
	private String _nidPostOffice;
	private String _nidHouseAddress;
	private boolean _isSubmit;
	private String _electricExemptionMemo;
	private String _envClrMemo;
	private String _bstiClrMemo;
	private String _fireLicNumDoc;
	private String _productType;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<licnsUserRegs, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((licnsUserRegs)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("licUserId", _licUserId);
		_columnOriginalValues.put("nationalId", _nationalId);
		_columnOriginalValues.put("applicantName", _applicantName);
		_columnOriginalValues.put("tradeLicenseNo", _tradeLicenseNo);
		_columnOriginalValues.put(
			"tradeLicenseExpiryDate", _tradeLicenseExpiryDate);
		_columnOriginalValues.put(
			"tradeLicenseIssuerCode", _tradeLicenseIssuerCode);
		_columnOriginalValues.put(
			"tradeLicenseIssuerCity", _tradeLicenseIssuerCity);
		_columnOriginalValues.put(
			"businessIdentificationNo", _businessIdentificationNo);
		_columnOriginalValues.put("taxIdentificationNo", _taxIdentificationNo);
		_columnOriginalValues.put("businessName", _businessName);
		_columnOriginalValues.put("businessType", _businessType);
		_columnOriginalValues.put("businessDivision", _businessDivision);
		_columnOriginalValues.put("businessDistrict", _businessDistrict);
		_columnOriginalValues.put("businessUpzilla", _businessUpzilla);
		_columnOriginalValues.put("businessUnionName", _businessUnionName);
		_columnOriginalValues.put("businessVillage", _businessVillage);
		_columnOriginalValues.put("businessWard", _businessWard);
		_columnOriginalValues.put("businessZipCode", _businessZipCode);
		_columnOriginalValues.put("businessPostOffice", _businessPostOffice);
		_columnOriginalValues.put(
			"businessHouseAddress", _businessHouseAddress);
		_columnOriginalValues.put("photographFile", _photographFile);
		_columnOriginalValues.put("tradeLicDoc", _tradeLicDoc);
		_columnOriginalValues.put("binDoc", _binDoc);
		_columnOriginalValues.put("tinDoc", _tinDoc);
		_columnOriginalValues.put("bankStat", _bankStat);
		_columnOriginalValues.put("otherReleventDoc", _otherReleventDoc);
		_columnOriginalValues.put("comments", _comments);
		_columnOriginalValues.put(
			"foodGrainLicenseType", _foodGrainLicenseType);
		_columnOriginalValues.put("division", _division);
		_columnOriginalValues.put("district", _district);
		_columnOriginalValues.put("upzilla", _upzilla);
		_columnOriginalValues.put("unionName", _unionName);
		_columnOriginalValues.put("village", _village);
		_columnOriginalValues.put("ward", _ward);
		_columnOriginalValues.put("zipCode", _zipCode);
		_columnOriginalValues.put("postOffice", _postOffice);
		_columnOriginalValues.put("houseAddress", _houseAddress);
		_columnOriginalValues.put("password_", _password);
		_columnOriginalValues.put("fatherName", _fatherName);
		_columnOriginalValues.put("lastName", _lastName);
		_columnOriginalValues.put("motherName", _motherName);
		_columnOriginalValues.put("gender", _gender);
		_columnOriginalValues.put("maritalStatus", _maritalStatus);
		_columnOriginalValues.put("birthDate", _birthDate);
		_columnOriginalValues.put("mobileNo", _mobileNo);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("email", _email);
		_columnOriginalValues.put("nidDivision", _nidDivision);
		_columnOriginalValues.put("nidDistrict", _nidDistrict);
		_columnOriginalValues.put("nidUpzilla", _nidUpzilla);
		_columnOriginalValues.put("nidUnion", _nidUnion);
		_columnOriginalValues.put("nidVillage", _nidVillage);
		_columnOriginalValues.put("nidWard", _nidWard);
		_columnOriginalValues.put("nidZipCode", _nidZipCode);
		_columnOriginalValues.put("nidPostOffice", _nidPostOffice);
		_columnOriginalValues.put("nidHouseAddress", _nidHouseAddress);
		_columnOriginalValues.put("isSubmit", _isSubmit);
		_columnOriginalValues.put(
			"electricExemptionMemo", _electricExemptionMemo);
		_columnOriginalValues.put("envClrMemo", _envClrMemo);
		_columnOriginalValues.put("bstiClrMemo", _bstiClrMemo);
		_columnOriginalValues.put("fireLicNumDoc", _fireLicNumDoc);
		_columnOriginalValues.put("productType", _productType);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("password_", "password");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("licUserId", 1L);

		columnBitmasks.put("nationalId", 2L);

		columnBitmasks.put("applicantName", 4L);

		columnBitmasks.put("tradeLicenseNo", 8L);

		columnBitmasks.put("tradeLicenseExpiryDate", 16L);

		columnBitmasks.put("tradeLicenseIssuerCode", 32L);

		columnBitmasks.put("tradeLicenseIssuerCity", 64L);

		columnBitmasks.put("businessIdentificationNo", 128L);

		columnBitmasks.put("taxIdentificationNo", 256L);

		columnBitmasks.put("businessName", 512L);

		columnBitmasks.put("businessType", 1024L);

		columnBitmasks.put("businessDivision", 2048L);

		columnBitmasks.put("businessDistrict", 4096L);

		columnBitmasks.put("businessUpzilla", 8192L);

		columnBitmasks.put("businessUnionName", 16384L);

		columnBitmasks.put("businessVillage", 32768L);

		columnBitmasks.put("businessWard", 65536L);

		columnBitmasks.put("businessZipCode", 131072L);

		columnBitmasks.put("businessPostOffice", 262144L);

		columnBitmasks.put("businessHouseAddress", 524288L);

		columnBitmasks.put("photographFile", 1048576L);

		columnBitmasks.put("tradeLicDoc", 2097152L);

		columnBitmasks.put("binDoc", 4194304L);

		columnBitmasks.put("tinDoc", 8388608L);

		columnBitmasks.put("bankStat", 16777216L);

		columnBitmasks.put("otherReleventDoc", 33554432L);

		columnBitmasks.put("comments", 67108864L);

		columnBitmasks.put("foodGrainLicenseType", 134217728L);

		columnBitmasks.put("division", 268435456L);

		columnBitmasks.put("district", 536870912L);

		columnBitmasks.put("upzilla", 1073741824L);

		columnBitmasks.put("unionName", 2147483648L);

		columnBitmasks.put("village", 4294967296L);

		columnBitmasks.put("ward", 8589934592L);

		columnBitmasks.put("zipCode", 17179869184L);

		columnBitmasks.put("postOffice", 34359738368L);

		columnBitmasks.put("houseAddress", 68719476736L);

		columnBitmasks.put("password_", 137438953472L);

		columnBitmasks.put("fatherName", 274877906944L);

		columnBitmasks.put("lastName", 549755813888L);

		columnBitmasks.put("motherName", 1099511627776L);

		columnBitmasks.put("gender", 2199023255552L);

		columnBitmasks.put("maritalStatus", 4398046511104L);

		columnBitmasks.put("birthDate", 8796093022208L);

		columnBitmasks.put("mobileNo", 17592186044416L);

		columnBitmasks.put("userId", 35184372088832L);

		columnBitmasks.put("email", 70368744177664L);

		columnBitmasks.put("nidDivision", 140737488355328L);

		columnBitmasks.put("nidDistrict", 281474976710656L);

		columnBitmasks.put("nidUpzilla", 562949953421312L);

		columnBitmasks.put("nidUnion", 1125899906842624L);

		columnBitmasks.put("nidVillage", 2251799813685248L);

		columnBitmasks.put("nidWard", 4503599627370496L);

		columnBitmasks.put("nidZipCode", 9007199254740992L);

		columnBitmasks.put("nidPostOffice", 18014398509481984L);

		columnBitmasks.put("nidHouseAddress", 36028797018963968L);

		columnBitmasks.put("isSubmit", 72057594037927936L);

		columnBitmasks.put("electricExemptionMemo", 144115188075855872L);

		columnBitmasks.put("envClrMemo", 288230376151711744L);

		columnBitmasks.put("bstiClrMemo", 576460752303423488L);

		columnBitmasks.put("fireLicNumDoc", 1152921504606846976L);

		columnBitmasks.put("productType", 2305843009213693952L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private licnsUserRegs _escapedModel;

}