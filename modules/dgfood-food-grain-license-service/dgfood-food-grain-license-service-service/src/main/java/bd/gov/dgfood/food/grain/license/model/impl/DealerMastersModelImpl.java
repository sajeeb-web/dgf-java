/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package bd.gov.dgfood.food.grain.license.model.impl;

import bd.gov.dgfood.food.grain.license.model.DealerMasters;
import bd.gov.dgfood.food.grain.license.model.DealerMastersModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the DealerMasters service. Represents a row in the &quot;dgf_dealer_masters&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>DealerMastersModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DealerMastersImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see DealerMastersImpl
 * @generated
 */
@JSON(strict = true)
public class DealerMastersModelImpl
	extends BaseModelImpl<DealerMasters> implements DealerMastersModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a dealer masters model instance should use the <code>DealerMasters</code> interface instead.
	 */
	public static final String TABLE_NAME = "dgf_dealer_masters";

	public static final Object[][] TABLE_COLUMNS = {
		{"id", Types.BIGINT}, {"union_id", Types.BIGINT},
		{"dealer_name", Types.VARCHAR}, {"dealer_name_en", Types.VARCHAR},
		{"dealer_slug", Types.VARCHAR}, {"father_name", Types.VARCHAR},
		{"mother_name", Types.VARCHAR}, {"birth_date", Types.TIMESTAMP},
		{"gender", Types.VARCHAR}, {"image_path_real", Types.VARCHAR},
		{"image_path_ec", Types.VARCHAR}, {"ec_pm_division", Types.VARCHAR},
		{"ec_pm_district", Types.VARCHAR}, {"ec_pm_rmo", Types.VARCHAR},
		{"ec_pm_upazila", Types.VARCHAR}, {"ec_pm_union_ward", Types.VARCHAR},
		{"ec_pm_ward_union_porishod", Types.VARCHAR},
		{"ec_pm_post_office", Types.VARCHAR},
		{"ec_pm_postal_code", Types.VARCHAR},
		{"ec_pm_mouza_moholla", Types.VARCHAR},
		{"ec_pm_additional_mouza_moholla", Types.VARCHAR},
		{"ec_pm_village_road", Types.VARCHAR},
		{"ec_pm_additional_village_road", Types.VARCHAR},
		{"ec_pm_home_holding_no", Types.VARCHAR},
		{"ec_pm_region", Types.VARCHAR}, {"ec_pr_division", Types.VARCHAR},
		{"ec_pr_district", Types.VARCHAR}, {"ec_pr_rmo", Types.VARCHAR},
		{"ec_pr_upazila", Types.VARCHAR},
		{"ec_pr_city_corp_municipality", Types.VARCHAR},
		{"ec_pr_union_ward", Types.VARCHAR},
		{"ec_pr_post_office", Types.VARCHAR},
		{"ec_pr_postal_code", Types.VARCHAR},
		{"ec_pr_ward_union_porishod", Types.VARCHAR},
		{"ec_pr_mouza_moholla", Types.VARCHAR},
		{"ec_pr_additional_mouza_moholla", Types.VARCHAR},
		{"ec_pr_village_road", Types.VARCHAR},
		{"ec_pr_additional_village_road", Types.VARCHAR},
		{"ec_pr_home_holding_no", Types.VARCHAR},
		{"ec_pr_region", Types.VARCHAR}, {"ec_occupation", Types.VARCHAR},
		{"ec_blood_group", Types.VARCHAR}, {"age", Types.BIGINT},
		{"pm_division_id", Types.BIGINT}, {"pm_district_id", Types.BIGINT},
		{"pm_upazila_id", Types.BIGINT}, {"pm_union_id", Types.BIGINT},
		{"pm_post_office", Types.VARCHAR}, {"pm_word_no", Types.VARCHAR},
		{"pm_village", Types.VARCHAR}, {"pm_holding_info", Types.VARCHAR},
		{"pr_division_id", Types.BIGINT}, {"pr_district_id", Types.BIGINT},
		{"pr_upazila_id", Types.BIGINT}, {"pr_union_id", Types.BIGINT},
		{"pr_post_office", Types.VARCHAR}, {"pr_word_no", Types.VARCHAR},
		{"pr_village", Types.VARCHAR}, {"pr_holding_info", Types.VARCHAR},
		{"dealer_mobile_no", Types.VARCHAR},
		{"dealer_national_id", Types.VARCHAR},
		{"second_national_id", Types.VARCHAR}, {"spouse_name", Types.VARCHAR},
		{"spouse_father_name", Types.VARCHAR},
		{"spouse_birth_date", Types.TIMESTAMP}, {"spouse_nid", Types.VARCHAR},
		{"spouse_second_nid", Types.VARCHAR}, {"govt_employee", Types.VARCHAR},
		{"handicap", Types.VARCHAR}, {"public_representative", Types.VARCHAR},
		{"vgd_status", Types.VARCHAR}, {"card_no_from_one", Types.BIGINT},
		{"card_no_to_one", Types.BIGINT}, {"card_no_from_two", Types.BIGINT},
		{"card_no_to_two", Types.BIGINT}, {"card_no_from_three", Types.BIGINT},
		{"card_no_to_three", Types.BIGINT}, {"status", Types.VARCHAR},
		{"created_at", Types.TIMESTAMP}, {"updated_at", Types.TIMESTAMP},
		{"card_no_from_four", Types.BIGINT}, {"card_no_to_four", Types.BIGINT},
		{"card_no_from_five", Types.BIGINT}, {"card_no_to_five", Types.BIGINT},
		{"single_cards", Types.VARCHAR}, {"user_id", Types.BIGINT},
		{"additional_union_id", Types.BIGINT}, {"upazila_id", Types.BIGINT},
		{"remarks", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("union_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("dealer_name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dealer_name_en", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dealer_slug", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("father_name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("mother_name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("birth_date", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("gender", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("image_path_real", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("image_path_ec", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pm_division", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pm_district", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pm_rmo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pm_upazila", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pm_union_ward", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pm_ward_union_porishod", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pm_post_office", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pm_postal_code", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pm_mouza_moholla", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pm_additional_mouza_moholla", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pm_village_road", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pm_additional_village_road", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pm_home_holding_no", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pm_region", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_division", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_district", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_rmo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_upazila", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_city_corp_municipality", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_union_ward", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_post_office", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_postal_code", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_ward_union_porishod", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_mouza_moholla", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_additional_mouza_moholla", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_village_road", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_additional_village_road", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_home_holding_no", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_pr_region", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_occupation", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ec_blood_group", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("age", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("pm_division_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("pm_district_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("pm_upazila_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("pm_union_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("pm_post_office", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("pm_word_no", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("pm_village", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("pm_holding_info", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("pr_division_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("pr_district_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("pr_upazila_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("pr_union_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("pr_post_office", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("pr_word_no", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("pr_village", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("pr_holding_info", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dealer_mobile_no", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dealer_national_id", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("second_national_id", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("spouse_name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("spouse_father_name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("spouse_birth_date", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("spouse_nid", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("spouse_second_nid", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("govt_employee", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("handicap", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("public_representative", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("vgd_status", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("card_no_from_one", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("card_no_to_one", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("card_no_from_two", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("card_no_to_two", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("card_no_from_three", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("card_no_to_three", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("status", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("created_at", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("updated_at", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("card_no_from_four", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("card_no_to_four", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("card_no_from_five", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("card_no_to_five", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("single_cards", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("user_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("additional_union_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("upazila_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("remarks", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table dgf_dealer_masters (id LONG not null primary key,union_id LONG,dealer_name VARCHAR(250) null,dealer_name_en VARCHAR(250) null,dealer_slug VARCHAR(250) null,father_name VARCHAR(250) null,mother_name VARCHAR(250) null,birth_date DATE null,gender VARCHAR(10) null,image_path_real VARCHAR(500) null,image_path_ec VARCHAR(500) null,ec_pm_division VARCHAR(50) null,ec_pm_district VARCHAR(50) null,ec_pm_rmo VARCHAR(50) null,ec_pm_upazila VARCHAR(250) null,ec_pm_union_ward VARCHAR(250) null,ec_pm_ward_union_porishod VARCHAR(250) null,ec_pm_post_office VARCHAR(250) null,ec_pm_postal_code VARCHAR(50) null,ec_pm_mouza_moholla VARCHAR(250) null,ec_pm_additional_mouza_moholla VARCHAR(250) null,ec_pm_village_road VARCHAR(250) null,ec_pm_additional_village_road VARCHAR(250) null,ec_pm_home_holding_no VARCHAR(250) null,ec_pm_region VARCHAR(100) null,ec_pr_division VARCHAR(150) null,ec_pr_district VARCHAR(150) null,ec_pr_rmo VARCHAR(150) null,ec_pr_upazila VARCHAR(250) null,ec_pr_city_corp_municipality VARCHAR(250) null,ec_pr_union_ward VARCHAR(250) null,ec_pr_post_office VARCHAR(250) null,ec_pr_postal_code VARCHAR(50) null,ec_pr_ward_union_porishod VARCHAR(250) null,ec_pr_mouza_moholla VARCHAR(250) null,ec_pr_additional_mouza_moholla VARCHAR(250) null,ec_pr_village_road VARCHAR(250) null,ec_pr_additional_village_road VARCHAR(250) null,ec_pr_home_holding_no VARCHAR(250) null,ec_pr_region VARCHAR(100) null,ec_occupation VARCHAR(100) null,ec_blood_group VARCHAR(500) null,age LONG,pm_division_id LONG,pm_district_id LONG,pm_upazila_id LONG,pm_union_id LONG,pm_post_office VARCHAR(10) null,pm_word_no VARCHAR(10) null,pm_village VARCHAR(150) null,pm_holding_info VARCHAR(250) null,pr_division_id LONG,pr_district_id LONG,pr_upazila_id LONG,pr_union_id LONG,pr_post_office VARCHAR(10) null,pr_word_no VARCHAR(10) null,pr_village VARCHAR(150) null,pr_holding_info VARCHAR(250) null,dealer_mobile_no VARCHAR(11) null,dealer_national_id VARCHAR(75) null,second_national_id VARCHAR(75) null,spouse_name VARCHAR(250) null,spouse_father_name VARCHAR(250) null,spouse_birth_date DATE null,spouse_nid VARCHAR(10) null,spouse_second_nid VARCHAR(17) null,govt_employee VARCHAR(1) null,handicap VARCHAR(1) null,public_representative VARCHAR(1) null,vgd_status VARCHAR(1) null,card_no_from_one LONG,card_no_to_one LONG,card_no_from_two LONG,card_no_to_two LONG,card_no_from_three LONG,card_no_to_three LONG,status VARCHAR(1) null,created_at DATE null,updated_at DATE null,card_no_from_four LONG,card_no_to_four LONG,card_no_from_five LONG,card_no_to_five LONG,single_cards VARCHAR(1000) null,user_id LONG,additional_union_id LONG,upazila_id LONG,remarks VARCHAR(254) null)";

	public static final String TABLE_SQL_DROP = "drop table dgf_dealer_masters";

	public static final String ORDER_BY_JPQL = " ORDER BY dealerMasters.id ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY dgf_dealer_masters.id ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public DealerMastersModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return DealerMasters.class;
	}

	@Override
	public String getModelClassName() {
		return DealerMasters.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<DealerMasters, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<DealerMasters, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<DealerMasters, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((DealerMasters)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<DealerMasters, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<DealerMasters, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(DealerMasters)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<DealerMasters, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<DealerMasters, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<DealerMasters, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<DealerMasters, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<DealerMasters, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<DealerMasters, Object>>();
		Map<String, BiConsumer<DealerMasters, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<DealerMasters, ?>>();

		attributeGetterFunctions.put("id", DealerMasters::getId);
		attributeSetterBiConsumers.put(
			"id", (BiConsumer<DealerMasters, Long>)DealerMasters::setId);
		attributeGetterFunctions.put("unionId", DealerMasters::getUnionId);
		attributeSetterBiConsumers.put(
			"unionId",
			(BiConsumer<DealerMasters, Long>)DealerMasters::setUnionId);
		attributeGetterFunctions.put(
			"dealerName", DealerMasters::getDealerName);
		attributeSetterBiConsumers.put(
			"dealerName",
			(BiConsumer<DealerMasters, String>)DealerMasters::setDealerName);
		attributeGetterFunctions.put(
			"dealerNameEn", DealerMasters::getDealerNameEn);
		attributeSetterBiConsumers.put(
			"dealerNameEn",
			(BiConsumer<DealerMasters, String>)DealerMasters::setDealerNameEn);
		attributeGetterFunctions.put(
			"dealerSlug", DealerMasters::getDealerSlug);
		attributeSetterBiConsumers.put(
			"dealerSlug",
			(BiConsumer<DealerMasters, String>)DealerMasters::setDealerSlug);
		attributeGetterFunctions.put(
			"fatherName", DealerMasters::getFatherName);
		attributeSetterBiConsumers.put(
			"fatherName",
			(BiConsumer<DealerMasters, String>)DealerMasters::setFatherName);
		attributeGetterFunctions.put(
			"motherName", DealerMasters::getMotherName);
		attributeSetterBiConsumers.put(
			"motherName",
			(BiConsumer<DealerMasters, String>)DealerMasters::setMotherName);
		attributeGetterFunctions.put("birthDate", DealerMasters::getBirthDate);
		attributeSetterBiConsumers.put(
			"birthDate",
			(BiConsumer<DealerMasters, Date>)DealerMasters::setBirthDate);
		attributeGetterFunctions.put("gender", DealerMasters::getGender);
		attributeSetterBiConsumers.put(
			"gender",
			(BiConsumer<DealerMasters, String>)DealerMasters::setGender);
		attributeGetterFunctions.put(
			"imagePathReal", DealerMasters::getImagePathReal);
		attributeSetterBiConsumers.put(
			"imagePathReal",
			(BiConsumer<DealerMasters, String>)DealerMasters::setImagePathReal);
		attributeGetterFunctions.put(
			"imagePathEc", DealerMasters::getImagePathEc);
		attributeSetterBiConsumers.put(
			"imagePathEc",
			(BiConsumer<DealerMasters, String>)DealerMasters::setImagePathEc);
		attributeGetterFunctions.put(
			"ecPmDivision", DealerMasters::getEcPmDivision);
		attributeSetterBiConsumers.put(
			"ecPmDivision",
			(BiConsumer<DealerMasters, String>)DealerMasters::setEcPmDivision);
		attributeGetterFunctions.put(
			"ecPmDistrict", DealerMasters::getEcPmDistrict);
		attributeSetterBiConsumers.put(
			"ecPmDistrict",
			(BiConsumer<DealerMasters, String>)DealerMasters::setEcPmDistrict);
		attributeGetterFunctions.put("ecPmRmo", DealerMasters::getEcPmRmo);
		attributeSetterBiConsumers.put(
			"ecPmRmo",
			(BiConsumer<DealerMasters, String>)DealerMasters::setEcPmRmo);
		attributeGetterFunctions.put(
			"ecPmUpazila", DealerMasters::getEcPmUpazila);
		attributeSetterBiConsumers.put(
			"ecPmUpazila",
			(BiConsumer<DealerMasters, String>)DealerMasters::setEcPmUpazila);
		attributeGetterFunctions.put(
			"ecPmUnionWard", DealerMasters::getEcPmUnionWard);
		attributeSetterBiConsumers.put(
			"ecPmUnionWard",
			(BiConsumer<DealerMasters, String>)DealerMasters::setEcPmUnionWard);
		attributeGetterFunctions.put(
			"ecPmWardUnionPorishod", DealerMasters::getEcPmWardUnionPorishod);
		attributeSetterBiConsumers.put(
			"ecPmWardUnionPorishod",
			(BiConsumer<DealerMasters, String>)
				DealerMasters::setEcPmWardUnionPorishod);
		attributeGetterFunctions.put(
			"ecPmPostOffice", DealerMasters::getEcPmPostOffice);
		attributeSetterBiConsumers.put(
			"ecPmPostOffice",
			(BiConsumer<DealerMasters, String>)
				DealerMasters::setEcPmPostOffice);
		attributeGetterFunctions.put(
			"ecPmPostalCode", DealerMasters::getEcPmPostalCode);
		attributeSetterBiConsumers.put(
			"ecPmPostalCode",
			(BiConsumer<DealerMasters, String>)
				DealerMasters::setEcPmPostalCode);
		attributeGetterFunctions.put(
			"ecPmMouzaMoholla", DealerMasters::getEcPmMouzaMoholla);
		attributeSetterBiConsumers.put(
			"ecPmMouzaMoholla",
			(BiConsumer<DealerMasters, String>)
				DealerMasters::setEcPmMouzaMoholla);
		attributeGetterFunctions.put(
			"ecPmAdditionalMouzaMoholla",
			DealerMasters::getEcPmAdditionalMouzaMoholla);
		attributeSetterBiConsumers.put(
			"ecPmAdditionalMouzaMoholla",
			(BiConsumer<DealerMasters, String>)
				DealerMasters::setEcPmAdditionalMouzaMoholla);
		attributeGetterFunctions.put(
			"ecPmVillageRoad", DealerMasters::getEcPmVillageRoad);
		attributeSetterBiConsumers.put(
			"ecPmVillageRoad",
			(BiConsumer<DealerMasters, String>)
				DealerMasters::setEcPmVillageRoad);
		attributeGetterFunctions.put(
			"ecPmAdditionalVillageRoad",
			DealerMasters::getEcPmAdditionalVillageRoad);
		attributeSetterBiConsumers.put(
			"ecPmAdditionalVillageRoad",
			(BiConsumer<DealerMasters, String>)
				DealerMasters::setEcPmAdditionalVillageRoad);
		attributeGetterFunctions.put(
			"ecPmHomeHoldingNo", DealerMasters::getEcPmHomeHoldingNo);
		attributeSetterBiConsumers.put(
			"ecPmHomeHoldingNo",
			(BiConsumer<DealerMasters, String>)
				DealerMasters::setEcPmHomeHoldingNo);
		attributeGetterFunctions.put(
			"ecPmRegion", DealerMasters::getEcPmRegion);
		attributeSetterBiConsumers.put(
			"ecPmRegion",
			(BiConsumer<DealerMasters, String>)DealerMasters::setEcPmRegion);
		attributeGetterFunctions.put(
			"ecPrDivision", DealerMasters::getEcPrDivision);
		attributeSetterBiConsumers.put(
			"ecPrDivision",
			(BiConsumer<DealerMasters, String>)DealerMasters::setEcPrDivision);
		attributeGetterFunctions.put(
			"ecPrDistrict", DealerMasters::getEcPrDistrict);
		attributeSetterBiConsumers.put(
			"ecPrDistrict",
			(BiConsumer<DealerMasters, String>)DealerMasters::setEcPrDistrict);
		attributeGetterFunctions.put("ecPrRmo", DealerMasters::getEcPrRmo);
		attributeSetterBiConsumers.put(
			"ecPrRmo",
			(BiConsumer<DealerMasters, String>)DealerMasters::setEcPrRmo);
		attributeGetterFunctions.put(
			"ecPrUpazila", DealerMasters::getEcPrUpazila);
		attributeSetterBiConsumers.put(
			"ecPrUpazila",
			(BiConsumer<DealerMasters, String>)DealerMasters::setEcPrUpazila);
		attributeGetterFunctions.put(
			"ecPrCityCorpMunicipality",
			DealerMasters::getEcPrCityCorpMunicipality);
		attributeSetterBiConsumers.put(
			"ecPrCityCorpMunicipality",
			(BiConsumer<DealerMasters, String>)
				DealerMasters::setEcPrCityCorpMunicipality);
		attributeGetterFunctions.put(
			"ecPrUnionWard", DealerMasters::getEcPrUnionWard);
		attributeSetterBiConsumers.put(
			"ecPrUnionWard",
			(BiConsumer<DealerMasters, String>)DealerMasters::setEcPrUnionWard);
		attributeGetterFunctions.put(
			"ecPrPostOffice", DealerMasters::getEcPrPostOffice);
		attributeSetterBiConsumers.put(
			"ecPrPostOffice",
			(BiConsumer<DealerMasters, String>)
				DealerMasters::setEcPrPostOffice);
		attributeGetterFunctions.put(
			"ecPrPostalCode", DealerMasters::getEcPrPostalCode);
		attributeSetterBiConsumers.put(
			"ecPrPostalCode",
			(BiConsumer<DealerMasters, String>)
				DealerMasters::setEcPrPostalCode);
		attributeGetterFunctions.put(
			"ecPrWardUnionPorishod", DealerMasters::getEcPrWardUnionPorishod);
		attributeSetterBiConsumers.put(
			"ecPrWardUnionPorishod",
			(BiConsumer<DealerMasters, String>)
				DealerMasters::setEcPrWardUnionPorishod);
		attributeGetterFunctions.put(
			"ecPrMouzaMoholla", DealerMasters::getEcPrMouzaMoholla);
		attributeSetterBiConsumers.put(
			"ecPrMouzaMoholla",
			(BiConsumer<DealerMasters, String>)
				DealerMasters::setEcPrMouzaMoholla);
		attributeGetterFunctions.put(
			"ecPrAdditionalMouzaMoholla",
			DealerMasters::getEcPrAdditionalMouzaMoholla);
		attributeSetterBiConsumers.put(
			"ecPrAdditionalMouzaMoholla",
			(BiConsumer<DealerMasters, String>)
				DealerMasters::setEcPrAdditionalMouzaMoholla);
		attributeGetterFunctions.put(
			"ecPrVillageRoad", DealerMasters::getEcPrVillageRoad);
		attributeSetterBiConsumers.put(
			"ecPrVillageRoad",
			(BiConsumer<DealerMasters, String>)
				DealerMasters::setEcPrVillageRoad);
		attributeGetterFunctions.put(
			"ecPrAdditionalVillageRoad",
			DealerMasters::getEcPrAdditionalVillageRoad);
		attributeSetterBiConsumers.put(
			"ecPrAdditionalVillageRoad",
			(BiConsumer<DealerMasters, String>)
				DealerMasters::setEcPrAdditionalVillageRoad);
		attributeGetterFunctions.put(
			"ecPrHomeHoldingNo", DealerMasters::getEcPrHomeHoldingNo);
		attributeSetterBiConsumers.put(
			"ecPrHomeHoldingNo",
			(BiConsumer<DealerMasters, String>)
				DealerMasters::setEcPrHomeHoldingNo);
		attributeGetterFunctions.put(
			"ecPrRegion", DealerMasters::getEcPrRegion);
		attributeSetterBiConsumers.put(
			"ecPrRegion",
			(BiConsumer<DealerMasters, String>)DealerMasters::setEcPrRegion);
		attributeGetterFunctions.put(
			"ecOccupation", DealerMasters::getEcOccupation);
		attributeSetterBiConsumers.put(
			"ecOccupation",
			(BiConsumer<DealerMasters, String>)DealerMasters::setEcOccupation);
		attributeGetterFunctions.put(
			"ecBloodGroup", DealerMasters::getEcBloodGroup);
		attributeSetterBiConsumers.put(
			"ecBloodGroup",
			(BiConsumer<DealerMasters, String>)DealerMasters::setEcBloodGroup);
		attributeGetterFunctions.put("age", DealerMasters::getAge);
		attributeSetterBiConsumers.put(
			"age", (BiConsumer<DealerMasters, Long>)DealerMasters::setAge);
		attributeGetterFunctions.put(
			"pmDivisionId", DealerMasters::getPmDivisionId);
		attributeSetterBiConsumers.put(
			"pmDivisionId",
			(BiConsumer<DealerMasters, Long>)DealerMasters::setPmDivisionId);
		attributeGetterFunctions.put(
			"pmDistrictId", DealerMasters::getPmDistrictId);
		attributeSetterBiConsumers.put(
			"pmDistrictId",
			(BiConsumer<DealerMasters, Long>)DealerMasters::setPmDistrictId);
		attributeGetterFunctions.put(
			"pmUpazilaId", DealerMasters::getPmUpazilaId);
		attributeSetterBiConsumers.put(
			"pmUpazilaId",
			(BiConsumer<DealerMasters, Long>)DealerMasters::setPmUpazilaId);
		attributeGetterFunctions.put("pmUnionId", DealerMasters::getPmUnionId);
		attributeSetterBiConsumers.put(
			"pmUnionId",
			(BiConsumer<DealerMasters, Long>)DealerMasters::setPmUnionId);
		attributeGetterFunctions.put(
			"pmPostOffice", DealerMasters::getPmPostOffice);
		attributeSetterBiConsumers.put(
			"pmPostOffice",
			(BiConsumer<DealerMasters, String>)DealerMasters::setPmPostOffice);
		attributeGetterFunctions.put("pmWordNo", DealerMasters::getPmWordNo);
		attributeSetterBiConsumers.put(
			"pmWordNo",
			(BiConsumer<DealerMasters, String>)DealerMasters::setPmWordNo);
		attributeGetterFunctions.put("pmVillage", DealerMasters::getPmVillage);
		attributeSetterBiConsumers.put(
			"pmVillage",
			(BiConsumer<DealerMasters, String>)DealerMasters::setPmVillage);
		attributeGetterFunctions.put(
			"pmHoldingInfo", DealerMasters::getPmHoldingInfo);
		attributeSetterBiConsumers.put(
			"pmHoldingInfo",
			(BiConsumer<DealerMasters, String>)DealerMasters::setPmHoldingInfo);
		attributeGetterFunctions.put(
			"prDivisionId", DealerMasters::getPrDivisionId);
		attributeSetterBiConsumers.put(
			"prDivisionId",
			(BiConsumer<DealerMasters, Long>)DealerMasters::setPrDivisionId);
		attributeGetterFunctions.put(
			"prDistrictId", DealerMasters::getPrDistrictId);
		attributeSetterBiConsumers.put(
			"prDistrictId",
			(BiConsumer<DealerMasters, Long>)DealerMasters::setPrDistrictId);
		attributeGetterFunctions.put(
			"prUpazilaId", DealerMasters::getPrUpazilaId);
		attributeSetterBiConsumers.put(
			"prUpazilaId",
			(BiConsumer<DealerMasters, Long>)DealerMasters::setPrUpazilaId);
		attributeGetterFunctions.put("prUnionId", DealerMasters::getPrUnionId);
		attributeSetterBiConsumers.put(
			"prUnionId",
			(BiConsumer<DealerMasters, Long>)DealerMasters::setPrUnionId);
		attributeGetterFunctions.put(
			"prPostOffice", DealerMasters::getPrPostOffice);
		attributeSetterBiConsumers.put(
			"prPostOffice",
			(BiConsumer<DealerMasters, String>)DealerMasters::setPrPostOffice);
		attributeGetterFunctions.put("prWordNo", DealerMasters::getPrWordNo);
		attributeSetterBiConsumers.put(
			"prWordNo",
			(BiConsumer<DealerMasters, String>)DealerMasters::setPrWordNo);
		attributeGetterFunctions.put("prVillage", DealerMasters::getPrVillage);
		attributeSetterBiConsumers.put(
			"prVillage",
			(BiConsumer<DealerMasters, String>)DealerMasters::setPrVillage);
		attributeGetterFunctions.put(
			"prHoldingInfo", DealerMasters::getPrHoldingInfo);
		attributeSetterBiConsumers.put(
			"prHoldingInfo",
			(BiConsumer<DealerMasters, String>)DealerMasters::setPrHoldingInfo);
		attributeGetterFunctions.put(
			"dealerMobileNo", DealerMasters::getDealerMobileNo);
		attributeSetterBiConsumers.put(
			"dealerMobileNo",
			(BiConsumer<DealerMasters, String>)
				DealerMasters::setDealerMobileNo);
		attributeGetterFunctions.put(
			"dealerNationalId", DealerMasters::getDealerNationalId);
		attributeSetterBiConsumers.put(
			"dealerNationalId",
			(BiConsumer<DealerMasters, String>)
				DealerMasters::setDealerNationalId);
		attributeGetterFunctions.put(
			"secondNationalId", DealerMasters::getSecondNationalId);
		attributeSetterBiConsumers.put(
			"secondNationalId",
			(BiConsumer<DealerMasters, String>)
				DealerMasters::setSecondNationalId);
		attributeGetterFunctions.put(
			"spouseName", DealerMasters::getSpouseName);
		attributeSetterBiConsumers.put(
			"spouseName",
			(BiConsumer<DealerMasters, String>)DealerMasters::setSpouseName);
		attributeGetterFunctions.put(
			"spouseFatherName", DealerMasters::getSpouseFatherName);
		attributeSetterBiConsumers.put(
			"spouseFatherName",
			(BiConsumer<DealerMasters, String>)
				DealerMasters::setSpouseFatherName);
		attributeGetterFunctions.put(
			"spouseBirthDate", DealerMasters::getSpouseBirthDate);
		attributeSetterBiConsumers.put(
			"spouseBirthDate",
			(BiConsumer<DealerMasters, Date>)DealerMasters::setSpouseBirthDate);
		attributeGetterFunctions.put("spouseNid", DealerMasters::getSpouseNid);
		attributeSetterBiConsumers.put(
			"spouseNid",
			(BiConsumer<DealerMasters, String>)DealerMasters::setSpouseNid);
		attributeGetterFunctions.put(
			"spouseSecondNid", DealerMasters::getSpouseSecondNid);
		attributeSetterBiConsumers.put(
			"spouseSecondNid",
			(BiConsumer<DealerMasters, String>)
				DealerMasters::setSpouseSecondNid);
		attributeGetterFunctions.put(
			"govtEmployee", DealerMasters::getGovtEmployee);
		attributeSetterBiConsumers.put(
			"govtEmployee",
			(BiConsumer<DealerMasters, String>)DealerMasters::setGovtEmployee);
		attributeGetterFunctions.put("handicap", DealerMasters::getHandicap);
		attributeSetterBiConsumers.put(
			"handicap",
			(BiConsumer<DealerMasters, String>)DealerMasters::setHandicap);
		attributeGetterFunctions.put(
			"publicRepresentative", DealerMasters::getPublicRepresentative);
		attributeSetterBiConsumers.put(
			"publicRepresentative",
			(BiConsumer<DealerMasters, String>)
				DealerMasters::setPublicRepresentative);
		attributeGetterFunctions.put("vgdStatus", DealerMasters::getVgdStatus);
		attributeSetterBiConsumers.put(
			"vgdStatus",
			(BiConsumer<DealerMasters, String>)DealerMasters::setVgdStatus);
		attributeGetterFunctions.put(
			"cardNoFromOne", DealerMasters::getCardNoFromOne);
		attributeSetterBiConsumers.put(
			"cardNoFromOne",
			(BiConsumer<DealerMasters, Long>)DealerMasters::setCardNoFromOne);
		attributeGetterFunctions.put(
			"cardNoToOne", DealerMasters::getCardNoToOne);
		attributeSetterBiConsumers.put(
			"cardNoToOne",
			(BiConsumer<DealerMasters, Long>)DealerMasters::setCardNoToOne);
		attributeGetterFunctions.put(
			"cardNoFromTwo", DealerMasters::getCardNoFromTwo);
		attributeSetterBiConsumers.put(
			"cardNoFromTwo",
			(BiConsumer<DealerMasters, Long>)DealerMasters::setCardNoFromTwo);
		attributeGetterFunctions.put(
			"cardNoToTwo", DealerMasters::getCardNoToTwo);
		attributeSetterBiConsumers.put(
			"cardNoToTwo",
			(BiConsumer<DealerMasters, Long>)DealerMasters::setCardNoToTwo);
		attributeGetterFunctions.put(
			"cardNoFromThree", DealerMasters::getCardNoFromThree);
		attributeSetterBiConsumers.put(
			"cardNoFromThree",
			(BiConsumer<DealerMasters, Long>)DealerMasters::setCardNoFromThree);
		attributeGetterFunctions.put(
			"cardNoToThree", DealerMasters::getCardNoToThree);
		attributeSetterBiConsumers.put(
			"cardNoToThree",
			(BiConsumer<DealerMasters, Long>)DealerMasters::setCardNoToThree);
		attributeGetterFunctions.put("status", DealerMasters::getStatus);
		attributeSetterBiConsumers.put(
			"status",
			(BiConsumer<DealerMasters, String>)DealerMasters::setStatus);
		attributeGetterFunctions.put("createdAt", DealerMasters::getCreatedAt);
		attributeSetterBiConsumers.put(
			"createdAt",
			(BiConsumer<DealerMasters, Date>)DealerMasters::setCreatedAt);
		attributeGetterFunctions.put("updatedAt", DealerMasters::getUpdatedAt);
		attributeSetterBiConsumers.put(
			"updatedAt",
			(BiConsumer<DealerMasters, Date>)DealerMasters::setUpdatedAt);
		attributeGetterFunctions.put(
			"cardNoFromFour", DealerMasters::getCardNoFromFour);
		attributeSetterBiConsumers.put(
			"cardNoFromFour",
			(BiConsumer<DealerMasters, Long>)DealerMasters::setCardNoFromFour);
		attributeGetterFunctions.put(
			"cardNoToFour", DealerMasters::getCardNoToFour);
		attributeSetterBiConsumers.put(
			"cardNoToFour",
			(BiConsumer<DealerMasters, Long>)DealerMasters::setCardNoToFour);
		attributeGetterFunctions.put(
			"cardNoFromFive", DealerMasters::getCardNoFromFive);
		attributeSetterBiConsumers.put(
			"cardNoFromFive",
			(BiConsumer<DealerMasters, Long>)DealerMasters::setCardNoFromFive);
		attributeGetterFunctions.put(
			"cardNoToFive", DealerMasters::getCardNoToFive);
		attributeSetterBiConsumers.put(
			"cardNoToFive",
			(BiConsumer<DealerMasters, Long>)DealerMasters::setCardNoToFive);
		attributeGetterFunctions.put(
			"singleCards", DealerMasters::getSingleCards);
		attributeSetterBiConsumers.put(
			"singleCards",
			(BiConsumer<DealerMasters, String>)DealerMasters::setSingleCards);
		attributeGetterFunctions.put("userId", DealerMasters::getUserId);
		attributeSetterBiConsumers.put(
			"userId",
			(BiConsumer<DealerMasters, Long>)DealerMasters::setUserId);
		attributeGetterFunctions.put(
			"additionalUnionId", DealerMasters::getAdditionalUnionId);
		attributeSetterBiConsumers.put(
			"additionalUnionId",
			(BiConsumer<DealerMasters, Long>)
				DealerMasters::setAdditionalUnionId);
		attributeGetterFunctions.put("upazilaId", DealerMasters::getUpazilaId);
		attributeSetterBiConsumers.put(
			"upazilaId",
			(BiConsumer<DealerMasters, Long>)DealerMasters::setUpazilaId);
		attributeGetterFunctions.put("remarks", DealerMasters::getRemarks);
		attributeSetterBiConsumers.put(
			"remarks",
			(BiConsumer<DealerMasters, String>)DealerMasters::setRemarks);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_id = id;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("id"));
	}

	@JSON
	@Override
	public long getUnionId() {
		return _unionId;
	}

	@Override
	public void setUnionId(long unionId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_unionId = unionId;
	}

	@JSON
	@Override
	public String getDealerName() {
		if (_dealerName == null) {
			return "";
		}
		else {
			return _dealerName;
		}
	}

	@Override
	public void setDealerName(String dealerName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dealerName = dealerName;
	}

	@JSON
	@Override
	public String getDealerNameEn() {
		if (_dealerNameEn == null) {
			return "";
		}
		else {
			return _dealerNameEn;
		}
	}

	@Override
	public void setDealerNameEn(String dealerNameEn) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dealerNameEn = dealerNameEn;
	}

	@JSON
	@Override
	public String getDealerSlug() {
		if (_dealerSlug == null) {
			return "";
		}
		else {
			return _dealerSlug;
		}
	}

	@Override
	public void setDealerSlug(String dealerSlug) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dealerSlug = dealerSlug;
	}

	@JSON
	@Override
	public String getFatherName() {
		if (_fatherName == null) {
			return "";
		}
		else {
			return _fatherName;
		}
	}

	@Override
	public void setFatherName(String fatherName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_fatherName = fatherName;
	}

	@JSON
	@Override
	public String getMotherName() {
		if (_motherName == null) {
			return "";
		}
		else {
			return _motherName;
		}
	}

	@Override
	public void setMotherName(String motherName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_motherName = motherName;
	}

	@JSON
	@Override
	public Date getBirthDate() {
		return _birthDate;
	}

	@Override
	public void setBirthDate(Date birthDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_birthDate = birthDate;
	}

	@JSON
	@Override
	public String getGender() {
		if (_gender == null) {
			return "";
		}
		else {
			return _gender;
		}
	}

	@Override
	public void setGender(String gender) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_gender = gender;
	}

	@JSON
	@Override
	public String getImagePathReal() {
		if (_imagePathReal == null) {
			return "";
		}
		else {
			return _imagePathReal;
		}
	}

	@Override
	public void setImagePathReal(String imagePathReal) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_imagePathReal = imagePathReal;
	}

	@JSON
	@Override
	public String getImagePathEc() {
		if (_imagePathEc == null) {
			return "";
		}
		else {
			return _imagePathEc;
		}
	}

	@Override
	public void setImagePathEc(String imagePathEc) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_imagePathEc = imagePathEc;
	}

	@JSON
	@Override
	public String getEcPmDivision() {
		if (_ecPmDivision == null) {
			return "";
		}
		else {
			return _ecPmDivision;
		}
	}

	@Override
	public void setEcPmDivision(String ecPmDivision) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPmDivision = ecPmDivision;
	}

	@JSON
	@Override
	public String getEcPmDistrict() {
		if (_ecPmDistrict == null) {
			return "";
		}
		else {
			return _ecPmDistrict;
		}
	}

	@Override
	public void setEcPmDistrict(String ecPmDistrict) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPmDistrict = ecPmDistrict;
	}

	@JSON
	@Override
	public String getEcPmRmo() {
		if (_ecPmRmo == null) {
			return "";
		}
		else {
			return _ecPmRmo;
		}
	}

	@Override
	public void setEcPmRmo(String ecPmRmo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPmRmo = ecPmRmo;
	}

	@JSON
	@Override
	public String getEcPmUpazila() {
		if (_ecPmUpazila == null) {
			return "";
		}
		else {
			return _ecPmUpazila;
		}
	}

	@Override
	public void setEcPmUpazila(String ecPmUpazila) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPmUpazila = ecPmUpazila;
	}

	@JSON
	@Override
	public String getEcPmUnionWard() {
		if (_ecPmUnionWard == null) {
			return "";
		}
		else {
			return _ecPmUnionWard;
		}
	}

	@Override
	public void setEcPmUnionWard(String ecPmUnionWard) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPmUnionWard = ecPmUnionWard;
	}

	@JSON
	@Override
	public String getEcPmWardUnionPorishod() {
		if (_ecPmWardUnionPorishod == null) {
			return "";
		}
		else {
			return _ecPmWardUnionPorishod;
		}
	}

	@Override
	public void setEcPmWardUnionPorishod(String ecPmWardUnionPorishod) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPmWardUnionPorishod = ecPmWardUnionPorishod;
	}

	@JSON
	@Override
	public String getEcPmPostOffice() {
		if (_ecPmPostOffice == null) {
			return "";
		}
		else {
			return _ecPmPostOffice;
		}
	}

	@Override
	public void setEcPmPostOffice(String ecPmPostOffice) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPmPostOffice = ecPmPostOffice;
	}

	@JSON
	@Override
	public String getEcPmPostalCode() {
		if (_ecPmPostalCode == null) {
			return "";
		}
		else {
			return _ecPmPostalCode;
		}
	}

	@Override
	public void setEcPmPostalCode(String ecPmPostalCode) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPmPostalCode = ecPmPostalCode;
	}

	@JSON
	@Override
	public String getEcPmMouzaMoholla() {
		if (_ecPmMouzaMoholla == null) {
			return "";
		}
		else {
			return _ecPmMouzaMoholla;
		}
	}

	@Override
	public void setEcPmMouzaMoholla(String ecPmMouzaMoholla) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPmMouzaMoholla = ecPmMouzaMoholla;
	}

	@JSON
	@Override
	public String getEcPmAdditionalMouzaMoholla() {
		if (_ecPmAdditionalMouzaMoholla == null) {
			return "";
		}
		else {
			return _ecPmAdditionalMouzaMoholla;
		}
	}

	@Override
	public void setEcPmAdditionalMouzaMoholla(
		String ecPmAdditionalMouzaMoholla) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPmAdditionalMouzaMoholla = ecPmAdditionalMouzaMoholla;
	}

	@JSON
	@Override
	public String getEcPmVillageRoad() {
		if (_ecPmVillageRoad == null) {
			return "";
		}
		else {
			return _ecPmVillageRoad;
		}
	}

	@Override
	public void setEcPmVillageRoad(String ecPmVillageRoad) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPmVillageRoad = ecPmVillageRoad;
	}

	@JSON
	@Override
	public String getEcPmAdditionalVillageRoad() {
		if (_ecPmAdditionalVillageRoad == null) {
			return "";
		}
		else {
			return _ecPmAdditionalVillageRoad;
		}
	}

	@Override
	public void setEcPmAdditionalVillageRoad(String ecPmAdditionalVillageRoad) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPmAdditionalVillageRoad = ecPmAdditionalVillageRoad;
	}

	@JSON
	@Override
	public String getEcPmHomeHoldingNo() {
		if (_ecPmHomeHoldingNo == null) {
			return "";
		}
		else {
			return _ecPmHomeHoldingNo;
		}
	}

	@Override
	public void setEcPmHomeHoldingNo(String ecPmHomeHoldingNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPmHomeHoldingNo = ecPmHomeHoldingNo;
	}

	@JSON
	@Override
	public String getEcPmRegion() {
		if (_ecPmRegion == null) {
			return "";
		}
		else {
			return _ecPmRegion;
		}
	}

	@Override
	public void setEcPmRegion(String ecPmRegion) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPmRegion = ecPmRegion;
	}

	@JSON
	@Override
	public String getEcPrDivision() {
		if (_ecPrDivision == null) {
			return "";
		}
		else {
			return _ecPrDivision;
		}
	}

	@Override
	public void setEcPrDivision(String ecPrDivision) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrDivision = ecPrDivision;
	}

	@JSON
	@Override
	public String getEcPrDistrict() {
		if (_ecPrDistrict == null) {
			return "";
		}
		else {
			return _ecPrDistrict;
		}
	}

	@Override
	public void setEcPrDistrict(String ecPrDistrict) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrDistrict = ecPrDistrict;
	}

	@JSON
	@Override
	public String getEcPrRmo() {
		if (_ecPrRmo == null) {
			return "";
		}
		else {
			return _ecPrRmo;
		}
	}

	@Override
	public void setEcPrRmo(String ecPrRmo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrRmo = ecPrRmo;
	}

	@JSON
	@Override
	public String getEcPrUpazila() {
		if (_ecPrUpazila == null) {
			return "";
		}
		else {
			return _ecPrUpazila;
		}
	}

	@Override
	public void setEcPrUpazila(String ecPrUpazila) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrUpazila = ecPrUpazila;
	}

	@JSON
	@Override
	public String getEcPrCityCorpMunicipality() {
		if (_ecPrCityCorpMunicipality == null) {
			return "";
		}
		else {
			return _ecPrCityCorpMunicipality;
		}
	}

	@Override
	public void setEcPrCityCorpMunicipality(String ecPrCityCorpMunicipality) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrCityCorpMunicipality = ecPrCityCorpMunicipality;
	}

	@JSON
	@Override
	public String getEcPrUnionWard() {
		if (_ecPrUnionWard == null) {
			return "";
		}
		else {
			return _ecPrUnionWard;
		}
	}

	@Override
	public void setEcPrUnionWard(String ecPrUnionWard) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrUnionWard = ecPrUnionWard;
	}

	@JSON
	@Override
	public String getEcPrPostOffice() {
		if (_ecPrPostOffice == null) {
			return "";
		}
		else {
			return _ecPrPostOffice;
		}
	}

	@Override
	public void setEcPrPostOffice(String ecPrPostOffice) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrPostOffice = ecPrPostOffice;
	}

	@JSON
	@Override
	public String getEcPrPostalCode() {
		if (_ecPrPostalCode == null) {
			return "";
		}
		else {
			return _ecPrPostalCode;
		}
	}

	@Override
	public void setEcPrPostalCode(String ecPrPostalCode) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrPostalCode = ecPrPostalCode;
	}

	@JSON
	@Override
	public String getEcPrWardUnionPorishod() {
		if (_ecPrWardUnionPorishod == null) {
			return "";
		}
		else {
			return _ecPrWardUnionPorishod;
		}
	}

	@Override
	public void setEcPrWardUnionPorishod(String ecPrWardUnionPorishod) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrWardUnionPorishod = ecPrWardUnionPorishod;
	}

	@JSON
	@Override
	public String getEcPrMouzaMoholla() {
		if (_ecPrMouzaMoholla == null) {
			return "";
		}
		else {
			return _ecPrMouzaMoholla;
		}
	}

	@Override
	public void setEcPrMouzaMoholla(String ecPrMouzaMoholla) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrMouzaMoholla = ecPrMouzaMoholla;
	}

	@JSON
	@Override
	public String getEcPrAdditionalMouzaMoholla() {
		if (_ecPrAdditionalMouzaMoholla == null) {
			return "";
		}
		else {
			return _ecPrAdditionalMouzaMoholla;
		}
	}

	@Override
	public void setEcPrAdditionalMouzaMoholla(
		String ecPrAdditionalMouzaMoholla) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrAdditionalMouzaMoholla = ecPrAdditionalMouzaMoholla;
	}

	@JSON
	@Override
	public String getEcPrVillageRoad() {
		if (_ecPrVillageRoad == null) {
			return "";
		}
		else {
			return _ecPrVillageRoad;
		}
	}

	@Override
	public void setEcPrVillageRoad(String ecPrVillageRoad) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrVillageRoad = ecPrVillageRoad;
	}

	@JSON
	@Override
	public String getEcPrAdditionalVillageRoad() {
		if (_ecPrAdditionalVillageRoad == null) {
			return "";
		}
		else {
			return _ecPrAdditionalVillageRoad;
		}
	}

	@Override
	public void setEcPrAdditionalVillageRoad(String ecPrAdditionalVillageRoad) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrAdditionalVillageRoad = ecPrAdditionalVillageRoad;
	}

	@JSON
	@Override
	public String getEcPrHomeHoldingNo() {
		if (_ecPrHomeHoldingNo == null) {
			return "";
		}
		else {
			return _ecPrHomeHoldingNo;
		}
	}

	@Override
	public void setEcPrHomeHoldingNo(String ecPrHomeHoldingNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrHomeHoldingNo = ecPrHomeHoldingNo;
	}

	@JSON
	@Override
	public String getEcPrRegion() {
		if (_ecPrRegion == null) {
			return "";
		}
		else {
			return _ecPrRegion;
		}
	}

	@Override
	public void setEcPrRegion(String ecPrRegion) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecPrRegion = ecPrRegion;
	}

	@JSON
	@Override
	public String getEcOccupation() {
		if (_ecOccupation == null) {
			return "";
		}
		else {
			return _ecOccupation;
		}
	}

	@Override
	public void setEcOccupation(String ecOccupation) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecOccupation = ecOccupation;
	}

	@JSON
	@Override
	public String getEcBloodGroup() {
		if (_ecBloodGroup == null) {
			return "";
		}
		else {
			return _ecBloodGroup;
		}
	}

	@Override
	public void setEcBloodGroup(String ecBloodGroup) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ecBloodGroup = ecBloodGroup;
	}

	@JSON
	@Override
	public long getAge() {
		return _age;
	}

	@Override
	public void setAge(long age) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_age = age;
	}

	@JSON
	@Override
	public long getPmDivisionId() {
		return _pmDivisionId;
	}

	@Override
	public void setPmDivisionId(long pmDivisionId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pmDivisionId = pmDivisionId;
	}

	@JSON
	@Override
	public long getPmDistrictId() {
		return _pmDistrictId;
	}

	@Override
	public void setPmDistrictId(long pmDistrictId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pmDistrictId = pmDistrictId;
	}

	@JSON
	@Override
	public long getPmUpazilaId() {
		return _pmUpazilaId;
	}

	@Override
	public void setPmUpazilaId(long pmUpazilaId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pmUpazilaId = pmUpazilaId;
	}

	@JSON
	@Override
	public long getPmUnionId() {
		return _pmUnionId;
	}

	@Override
	public void setPmUnionId(long pmUnionId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pmUnionId = pmUnionId;
	}

	@JSON
	@Override
	public String getPmPostOffice() {
		if (_pmPostOffice == null) {
			return "";
		}
		else {
			return _pmPostOffice;
		}
	}

	@Override
	public void setPmPostOffice(String pmPostOffice) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pmPostOffice = pmPostOffice;
	}

	@JSON
	@Override
	public String getPmWordNo() {
		if (_pmWordNo == null) {
			return "";
		}
		else {
			return _pmWordNo;
		}
	}

	@Override
	public void setPmWordNo(String pmWordNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pmWordNo = pmWordNo;
	}

	@JSON
	@Override
	public String getPmVillage() {
		if (_pmVillage == null) {
			return "";
		}
		else {
			return _pmVillage;
		}
	}

	@Override
	public void setPmVillage(String pmVillage) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pmVillage = pmVillage;
	}

	@JSON
	@Override
	public String getPmHoldingInfo() {
		if (_pmHoldingInfo == null) {
			return "";
		}
		else {
			return _pmHoldingInfo;
		}
	}

	@Override
	public void setPmHoldingInfo(String pmHoldingInfo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pmHoldingInfo = pmHoldingInfo;
	}

	@JSON
	@Override
	public long getPrDivisionId() {
		return _prDivisionId;
	}

	@Override
	public void setPrDivisionId(long prDivisionId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_prDivisionId = prDivisionId;
	}

	@JSON
	@Override
	public long getPrDistrictId() {
		return _prDistrictId;
	}

	@Override
	public void setPrDistrictId(long prDistrictId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_prDistrictId = prDistrictId;
	}

	@JSON
	@Override
	public long getPrUpazilaId() {
		return _prUpazilaId;
	}

	@Override
	public void setPrUpazilaId(long prUpazilaId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_prUpazilaId = prUpazilaId;
	}

	@JSON
	@Override
	public long getPrUnionId() {
		return _prUnionId;
	}

	@Override
	public void setPrUnionId(long prUnionId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_prUnionId = prUnionId;
	}

	@JSON
	@Override
	public String getPrPostOffice() {
		if (_prPostOffice == null) {
			return "";
		}
		else {
			return _prPostOffice;
		}
	}

	@Override
	public void setPrPostOffice(String prPostOffice) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_prPostOffice = prPostOffice;
	}

	@JSON
	@Override
	public String getPrWordNo() {
		if (_prWordNo == null) {
			return "";
		}
		else {
			return _prWordNo;
		}
	}

	@Override
	public void setPrWordNo(String prWordNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_prWordNo = prWordNo;
	}

	@JSON
	@Override
	public String getPrVillage() {
		if (_prVillage == null) {
			return "";
		}
		else {
			return _prVillage;
		}
	}

	@Override
	public void setPrVillage(String prVillage) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_prVillage = prVillage;
	}

	@JSON
	@Override
	public String getPrHoldingInfo() {
		if (_prHoldingInfo == null) {
			return "";
		}
		else {
			return _prHoldingInfo;
		}
	}

	@Override
	public void setPrHoldingInfo(String prHoldingInfo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_prHoldingInfo = prHoldingInfo;
	}

	@JSON
	@Override
	public String getDealerMobileNo() {
		if (_dealerMobileNo == null) {
			return "";
		}
		else {
			return _dealerMobileNo;
		}
	}

	@Override
	public void setDealerMobileNo(String dealerMobileNo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dealerMobileNo = dealerMobileNo;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalDealerMobileNo() {
		return getColumnOriginalValue("dealer_mobile_no");
	}

	@JSON
	@Override
	public String getDealerNationalId() {
		if (_dealerNationalId == null) {
			return "";
		}
		else {
			return _dealerNationalId;
		}
	}

	@Override
	public void setDealerNationalId(String dealerNationalId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dealerNationalId = dealerNationalId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalDealerNationalId() {
		return getColumnOriginalValue("dealer_national_id");
	}

	@JSON
	@Override
	public String getSecondNationalId() {
		if (_secondNationalId == null) {
			return "";
		}
		else {
			return _secondNationalId;
		}
	}

	@Override
	public void setSecondNationalId(String secondNationalId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_secondNationalId = secondNationalId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalSecondNationalId() {
		return getColumnOriginalValue("second_national_id");
	}

	@JSON
	@Override
	public String getSpouseName() {
		if (_spouseName == null) {
			return "";
		}
		else {
			return _spouseName;
		}
	}

	@Override
	public void setSpouseName(String spouseName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_spouseName = spouseName;
	}

	@JSON
	@Override
	public String getSpouseFatherName() {
		if (_spouseFatherName == null) {
			return "";
		}
		else {
			return _spouseFatherName;
		}
	}

	@Override
	public void setSpouseFatherName(String spouseFatherName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_spouseFatherName = spouseFatherName;
	}

	@JSON
	@Override
	public Date getSpouseBirthDate() {
		return _spouseBirthDate;
	}

	@Override
	public void setSpouseBirthDate(Date spouseBirthDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_spouseBirthDate = spouseBirthDate;
	}

	@JSON
	@Override
	public String getSpouseNid() {
		if (_spouseNid == null) {
			return "";
		}
		else {
			return _spouseNid;
		}
	}

	@Override
	public void setSpouseNid(String spouseNid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_spouseNid = spouseNid;
	}

	@JSON
	@Override
	public String getSpouseSecondNid() {
		if (_spouseSecondNid == null) {
			return "";
		}
		else {
			return _spouseSecondNid;
		}
	}

	@Override
	public void setSpouseSecondNid(String spouseSecondNid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_spouseSecondNid = spouseSecondNid;
	}

	@JSON
	@Override
	public String getGovtEmployee() {
		if (_govtEmployee == null) {
			return "";
		}
		else {
			return _govtEmployee;
		}
	}

	@Override
	public void setGovtEmployee(String govtEmployee) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_govtEmployee = govtEmployee;
	}

	@JSON
	@Override
	public String getHandicap() {
		if (_handicap == null) {
			return "";
		}
		else {
			return _handicap;
		}
	}

	@Override
	public void setHandicap(String handicap) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_handicap = handicap;
	}

	@JSON
	@Override
	public String getPublicRepresentative() {
		if (_publicRepresentative == null) {
			return "";
		}
		else {
			return _publicRepresentative;
		}
	}

	@Override
	public void setPublicRepresentative(String publicRepresentative) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_publicRepresentative = publicRepresentative;
	}

	@JSON
	@Override
	public String getVgdStatus() {
		if (_vgdStatus == null) {
			return "";
		}
		else {
			return _vgdStatus;
		}
	}

	@Override
	public void setVgdStatus(String vgdStatus) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_vgdStatus = vgdStatus;
	}

	@JSON
	@Override
	public long getCardNoFromOne() {
		return _cardNoFromOne;
	}

	@Override
	public void setCardNoFromOne(long cardNoFromOne) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_cardNoFromOne = cardNoFromOne;
	}

	@JSON
	@Override
	public long getCardNoToOne() {
		return _cardNoToOne;
	}

	@Override
	public void setCardNoToOne(long cardNoToOne) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_cardNoToOne = cardNoToOne;
	}

	@JSON
	@Override
	public long getCardNoFromTwo() {
		return _cardNoFromTwo;
	}

	@Override
	public void setCardNoFromTwo(long cardNoFromTwo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_cardNoFromTwo = cardNoFromTwo;
	}

	@JSON
	@Override
	public long getCardNoToTwo() {
		return _cardNoToTwo;
	}

	@Override
	public void setCardNoToTwo(long cardNoToTwo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_cardNoToTwo = cardNoToTwo;
	}

	@JSON
	@Override
	public long getCardNoFromThree() {
		return _cardNoFromThree;
	}

	@Override
	public void setCardNoFromThree(long cardNoFromThree) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_cardNoFromThree = cardNoFromThree;
	}

	@JSON
	@Override
	public long getCardNoToThree() {
		return _cardNoToThree;
	}

	@Override
	public void setCardNoToThree(long cardNoToThree) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_cardNoToThree = cardNoToThree;
	}

	@JSON
	@Override
	public String getStatus() {
		if (_status == null) {
			return "";
		}
		else {
			return _status;
		}
	}

	@Override
	public void setStatus(String status) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_status = status;
	}

	@JSON
	@Override
	public Date getCreatedAt() {
		return _createdAt;
	}

	@Override
	public void setCreatedAt(Date createdAt) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createdAt = createdAt;
	}

	@JSON
	@Override
	public Date getUpdatedAt() {
		return _updatedAt;
	}

	@Override
	public void setUpdatedAt(Date updatedAt) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_updatedAt = updatedAt;
	}

	@JSON
	@Override
	public long getCardNoFromFour() {
		return _cardNoFromFour;
	}

	@Override
	public void setCardNoFromFour(long cardNoFromFour) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_cardNoFromFour = cardNoFromFour;
	}

	@JSON
	@Override
	public long getCardNoToFour() {
		return _cardNoToFour;
	}

	@Override
	public void setCardNoToFour(long cardNoToFour) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_cardNoToFour = cardNoToFour;
	}

	@JSON
	@Override
	public long getCardNoFromFive() {
		return _cardNoFromFive;
	}

	@Override
	public void setCardNoFromFive(long cardNoFromFive) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_cardNoFromFive = cardNoFromFive;
	}

	@JSON
	@Override
	public long getCardNoToFive() {
		return _cardNoToFive;
	}

	@Override
	public void setCardNoToFive(long cardNoToFive) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_cardNoToFive = cardNoToFive;
	}

	@JSON
	@Override
	public String getSingleCards() {
		if (_singleCards == null) {
			return "";
		}
		else {
			return _singleCards;
		}
	}

	@Override
	public void setSingleCards(String singleCards) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_singleCards = singleCards;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public long getAdditionalUnionId() {
		return _additionalUnionId;
	}

	@Override
	public void setAdditionalUnionId(long additionalUnionId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_additionalUnionId = additionalUnionId;
	}

	@JSON
	@Override
	public long getUpazilaId() {
		return _upazilaId;
	}

	@Override
	public void setUpazilaId(long upazilaId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_upazilaId = upazilaId;
	}

	@JSON
	@Override
	public String getRemarks() {
		if (_remarks == null) {
			return "";
		}
		else {
			return _remarks;
		}
	}

	@Override
	public void setRemarks(String remarks) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_remarks = remarks;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, DealerMasters.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public DealerMasters toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, DealerMasters>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DealerMastersImpl dealerMastersImpl = new DealerMastersImpl();

		dealerMastersImpl.setId(getId());
		dealerMastersImpl.setUnionId(getUnionId());
		dealerMastersImpl.setDealerName(getDealerName());
		dealerMastersImpl.setDealerNameEn(getDealerNameEn());
		dealerMastersImpl.setDealerSlug(getDealerSlug());
		dealerMastersImpl.setFatherName(getFatherName());
		dealerMastersImpl.setMotherName(getMotherName());
		dealerMastersImpl.setBirthDate(getBirthDate());
		dealerMastersImpl.setGender(getGender());
		dealerMastersImpl.setImagePathReal(getImagePathReal());
		dealerMastersImpl.setImagePathEc(getImagePathEc());
		dealerMastersImpl.setEcPmDivision(getEcPmDivision());
		dealerMastersImpl.setEcPmDistrict(getEcPmDistrict());
		dealerMastersImpl.setEcPmRmo(getEcPmRmo());
		dealerMastersImpl.setEcPmUpazila(getEcPmUpazila());
		dealerMastersImpl.setEcPmUnionWard(getEcPmUnionWard());
		dealerMastersImpl.setEcPmWardUnionPorishod(getEcPmWardUnionPorishod());
		dealerMastersImpl.setEcPmPostOffice(getEcPmPostOffice());
		dealerMastersImpl.setEcPmPostalCode(getEcPmPostalCode());
		dealerMastersImpl.setEcPmMouzaMoholla(getEcPmMouzaMoholla());
		dealerMastersImpl.setEcPmAdditionalMouzaMoholla(
			getEcPmAdditionalMouzaMoholla());
		dealerMastersImpl.setEcPmVillageRoad(getEcPmVillageRoad());
		dealerMastersImpl.setEcPmAdditionalVillageRoad(
			getEcPmAdditionalVillageRoad());
		dealerMastersImpl.setEcPmHomeHoldingNo(getEcPmHomeHoldingNo());
		dealerMastersImpl.setEcPmRegion(getEcPmRegion());
		dealerMastersImpl.setEcPrDivision(getEcPrDivision());
		dealerMastersImpl.setEcPrDistrict(getEcPrDistrict());
		dealerMastersImpl.setEcPrRmo(getEcPrRmo());
		dealerMastersImpl.setEcPrUpazila(getEcPrUpazila());
		dealerMastersImpl.setEcPrCityCorpMunicipality(
			getEcPrCityCorpMunicipality());
		dealerMastersImpl.setEcPrUnionWard(getEcPrUnionWard());
		dealerMastersImpl.setEcPrPostOffice(getEcPrPostOffice());
		dealerMastersImpl.setEcPrPostalCode(getEcPrPostalCode());
		dealerMastersImpl.setEcPrWardUnionPorishod(getEcPrWardUnionPorishod());
		dealerMastersImpl.setEcPrMouzaMoholla(getEcPrMouzaMoholla());
		dealerMastersImpl.setEcPrAdditionalMouzaMoholla(
			getEcPrAdditionalMouzaMoholla());
		dealerMastersImpl.setEcPrVillageRoad(getEcPrVillageRoad());
		dealerMastersImpl.setEcPrAdditionalVillageRoad(
			getEcPrAdditionalVillageRoad());
		dealerMastersImpl.setEcPrHomeHoldingNo(getEcPrHomeHoldingNo());
		dealerMastersImpl.setEcPrRegion(getEcPrRegion());
		dealerMastersImpl.setEcOccupation(getEcOccupation());
		dealerMastersImpl.setEcBloodGroup(getEcBloodGroup());
		dealerMastersImpl.setAge(getAge());
		dealerMastersImpl.setPmDivisionId(getPmDivisionId());
		dealerMastersImpl.setPmDistrictId(getPmDistrictId());
		dealerMastersImpl.setPmUpazilaId(getPmUpazilaId());
		dealerMastersImpl.setPmUnionId(getPmUnionId());
		dealerMastersImpl.setPmPostOffice(getPmPostOffice());
		dealerMastersImpl.setPmWordNo(getPmWordNo());
		dealerMastersImpl.setPmVillage(getPmVillage());
		dealerMastersImpl.setPmHoldingInfo(getPmHoldingInfo());
		dealerMastersImpl.setPrDivisionId(getPrDivisionId());
		dealerMastersImpl.setPrDistrictId(getPrDistrictId());
		dealerMastersImpl.setPrUpazilaId(getPrUpazilaId());
		dealerMastersImpl.setPrUnionId(getPrUnionId());
		dealerMastersImpl.setPrPostOffice(getPrPostOffice());
		dealerMastersImpl.setPrWordNo(getPrWordNo());
		dealerMastersImpl.setPrVillage(getPrVillage());
		dealerMastersImpl.setPrHoldingInfo(getPrHoldingInfo());
		dealerMastersImpl.setDealerMobileNo(getDealerMobileNo());
		dealerMastersImpl.setDealerNationalId(getDealerNationalId());
		dealerMastersImpl.setSecondNationalId(getSecondNationalId());
		dealerMastersImpl.setSpouseName(getSpouseName());
		dealerMastersImpl.setSpouseFatherName(getSpouseFatherName());
		dealerMastersImpl.setSpouseBirthDate(getSpouseBirthDate());
		dealerMastersImpl.setSpouseNid(getSpouseNid());
		dealerMastersImpl.setSpouseSecondNid(getSpouseSecondNid());
		dealerMastersImpl.setGovtEmployee(getGovtEmployee());
		dealerMastersImpl.setHandicap(getHandicap());
		dealerMastersImpl.setPublicRepresentative(getPublicRepresentative());
		dealerMastersImpl.setVgdStatus(getVgdStatus());
		dealerMastersImpl.setCardNoFromOne(getCardNoFromOne());
		dealerMastersImpl.setCardNoToOne(getCardNoToOne());
		dealerMastersImpl.setCardNoFromTwo(getCardNoFromTwo());
		dealerMastersImpl.setCardNoToTwo(getCardNoToTwo());
		dealerMastersImpl.setCardNoFromThree(getCardNoFromThree());
		dealerMastersImpl.setCardNoToThree(getCardNoToThree());
		dealerMastersImpl.setStatus(getStatus());
		dealerMastersImpl.setCreatedAt(getCreatedAt());
		dealerMastersImpl.setUpdatedAt(getUpdatedAt());
		dealerMastersImpl.setCardNoFromFour(getCardNoFromFour());
		dealerMastersImpl.setCardNoToFour(getCardNoToFour());
		dealerMastersImpl.setCardNoFromFive(getCardNoFromFive());
		dealerMastersImpl.setCardNoToFive(getCardNoToFive());
		dealerMastersImpl.setSingleCards(getSingleCards());
		dealerMastersImpl.setUserId(getUserId());
		dealerMastersImpl.setAdditionalUnionId(getAdditionalUnionId());
		dealerMastersImpl.setUpazilaId(getUpazilaId());
		dealerMastersImpl.setRemarks(getRemarks());

		dealerMastersImpl.resetOriginalValues();

		return dealerMastersImpl;
	}

	@Override
	public DealerMasters cloneWithOriginalValues() {
		DealerMastersImpl dealerMastersImpl = new DealerMastersImpl();

		dealerMastersImpl.setId(this.<Long>getColumnOriginalValue("id"));
		dealerMastersImpl.setUnionId(
			this.<Long>getColumnOriginalValue("union_id"));
		dealerMastersImpl.setDealerName(
			this.<String>getColumnOriginalValue("dealer_name"));
		dealerMastersImpl.setDealerNameEn(
			this.<String>getColumnOriginalValue("dealer_name_en"));
		dealerMastersImpl.setDealerSlug(
			this.<String>getColumnOriginalValue("dealer_slug"));
		dealerMastersImpl.setFatherName(
			this.<String>getColumnOriginalValue("father_name"));
		dealerMastersImpl.setMotherName(
			this.<String>getColumnOriginalValue("mother_name"));
		dealerMastersImpl.setBirthDate(
			this.<Date>getColumnOriginalValue("birth_date"));
		dealerMastersImpl.setGender(
			this.<String>getColumnOriginalValue("gender"));
		dealerMastersImpl.setImagePathReal(
			this.<String>getColumnOriginalValue("image_path_real"));
		dealerMastersImpl.setImagePathEc(
			this.<String>getColumnOriginalValue("image_path_ec"));
		dealerMastersImpl.setEcPmDivision(
			this.<String>getColumnOriginalValue("ec_pm_division"));
		dealerMastersImpl.setEcPmDistrict(
			this.<String>getColumnOriginalValue("ec_pm_district"));
		dealerMastersImpl.setEcPmRmo(
			this.<String>getColumnOriginalValue("ec_pm_rmo"));
		dealerMastersImpl.setEcPmUpazila(
			this.<String>getColumnOriginalValue("ec_pm_upazila"));
		dealerMastersImpl.setEcPmUnionWard(
			this.<String>getColumnOriginalValue("ec_pm_union_ward"));
		dealerMastersImpl.setEcPmWardUnionPorishod(
			this.<String>getColumnOriginalValue("ec_pm_ward_union_porishod"));
		dealerMastersImpl.setEcPmPostOffice(
			this.<String>getColumnOriginalValue("ec_pm_post_office"));
		dealerMastersImpl.setEcPmPostalCode(
			this.<String>getColumnOriginalValue("ec_pm_postal_code"));
		dealerMastersImpl.setEcPmMouzaMoholla(
			this.<String>getColumnOriginalValue("ec_pm_mouza_moholla"));
		dealerMastersImpl.setEcPmAdditionalMouzaMoholla(
			this.<String>getColumnOriginalValue(
				"ec_pm_additional_mouza_moholla"));
		dealerMastersImpl.setEcPmVillageRoad(
			this.<String>getColumnOriginalValue("ec_pm_village_road"));
		dealerMastersImpl.setEcPmAdditionalVillageRoad(
			this.<String>getColumnOriginalValue(
				"ec_pm_additional_village_road"));
		dealerMastersImpl.setEcPmHomeHoldingNo(
			this.<String>getColumnOriginalValue("ec_pm_home_holding_no"));
		dealerMastersImpl.setEcPmRegion(
			this.<String>getColumnOriginalValue("ec_pm_region"));
		dealerMastersImpl.setEcPrDivision(
			this.<String>getColumnOriginalValue("ec_pr_division"));
		dealerMastersImpl.setEcPrDistrict(
			this.<String>getColumnOriginalValue("ec_pr_district"));
		dealerMastersImpl.setEcPrRmo(
			this.<String>getColumnOriginalValue("ec_pr_rmo"));
		dealerMastersImpl.setEcPrUpazila(
			this.<String>getColumnOriginalValue("ec_pr_upazila"));
		dealerMastersImpl.setEcPrCityCorpMunicipality(
			this.<String>getColumnOriginalValue(
				"ec_pr_city_corp_municipality"));
		dealerMastersImpl.setEcPrUnionWard(
			this.<String>getColumnOriginalValue("ec_pr_union_ward"));
		dealerMastersImpl.setEcPrPostOffice(
			this.<String>getColumnOriginalValue("ec_pr_post_office"));
		dealerMastersImpl.setEcPrPostalCode(
			this.<String>getColumnOriginalValue("ec_pr_postal_code"));
		dealerMastersImpl.setEcPrWardUnionPorishod(
			this.<String>getColumnOriginalValue("ec_pr_ward_union_porishod"));
		dealerMastersImpl.setEcPrMouzaMoholla(
			this.<String>getColumnOriginalValue("ec_pr_mouza_moholla"));
		dealerMastersImpl.setEcPrAdditionalMouzaMoholla(
			this.<String>getColumnOriginalValue(
				"ec_pr_additional_mouza_moholla"));
		dealerMastersImpl.setEcPrVillageRoad(
			this.<String>getColumnOriginalValue("ec_pr_village_road"));
		dealerMastersImpl.setEcPrAdditionalVillageRoad(
			this.<String>getColumnOriginalValue(
				"ec_pr_additional_village_road"));
		dealerMastersImpl.setEcPrHomeHoldingNo(
			this.<String>getColumnOriginalValue("ec_pr_home_holding_no"));
		dealerMastersImpl.setEcPrRegion(
			this.<String>getColumnOriginalValue("ec_pr_region"));
		dealerMastersImpl.setEcOccupation(
			this.<String>getColumnOriginalValue("ec_occupation"));
		dealerMastersImpl.setEcBloodGroup(
			this.<String>getColumnOriginalValue("ec_blood_group"));
		dealerMastersImpl.setAge(this.<Long>getColumnOriginalValue("age"));
		dealerMastersImpl.setPmDivisionId(
			this.<Long>getColumnOriginalValue("pm_division_id"));
		dealerMastersImpl.setPmDistrictId(
			this.<Long>getColumnOriginalValue("pm_district_id"));
		dealerMastersImpl.setPmUpazilaId(
			this.<Long>getColumnOriginalValue("pm_upazila_id"));
		dealerMastersImpl.setPmUnionId(
			this.<Long>getColumnOriginalValue("pm_union_id"));
		dealerMastersImpl.setPmPostOffice(
			this.<String>getColumnOriginalValue("pm_post_office"));
		dealerMastersImpl.setPmWordNo(
			this.<String>getColumnOriginalValue("pm_word_no"));
		dealerMastersImpl.setPmVillage(
			this.<String>getColumnOriginalValue("pm_village"));
		dealerMastersImpl.setPmHoldingInfo(
			this.<String>getColumnOriginalValue("pm_holding_info"));
		dealerMastersImpl.setPrDivisionId(
			this.<Long>getColumnOriginalValue("pr_division_id"));
		dealerMastersImpl.setPrDistrictId(
			this.<Long>getColumnOriginalValue("pr_district_id"));
		dealerMastersImpl.setPrUpazilaId(
			this.<Long>getColumnOriginalValue("pr_upazila_id"));
		dealerMastersImpl.setPrUnionId(
			this.<Long>getColumnOriginalValue("pr_union_id"));
		dealerMastersImpl.setPrPostOffice(
			this.<String>getColumnOriginalValue("pr_post_office"));
		dealerMastersImpl.setPrWordNo(
			this.<String>getColumnOriginalValue("pr_word_no"));
		dealerMastersImpl.setPrVillage(
			this.<String>getColumnOriginalValue("pr_village"));
		dealerMastersImpl.setPrHoldingInfo(
			this.<String>getColumnOriginalValue("pr_holding_info"));
		dealerMastersImpl.setDealerMobileNo(
			this.<String>getColumnOriginalValue("dealer_mobile_no"));
		dealerMastersImpl.setDealerNationalId(
			this.<String>getColumnOriginalValue("dealer_national_id"));
		dealerMastersImpl.setSecondNationalId(
			this.<String>getColumnOriginalValue("second_national_id"));
		dealerMastersImpl.setSpouseName(
			this.<String>getColumnOriginalValue("spouse_name"));
		dealerMastersImpl.setSpouseFatherName(
			this.<String>getColumnOriginalValue("spouse_father_name"));
		dealerMastersImpl.setSpouseBirthDate(
			this.<Date>getColumnOriginalValue("spouse_birth_date"));
		dealerMastersImpl.setSpouseNid(
			this.<String>getColumnOriginalValue("spouse_nid"));
		dealerMastersImpl.setSpouseSecondNid(
			this.<String>getColumnOriginalValue("spouse_second_nid"));
		dealerMastersImpl.setGovtEmployee(
			this.<String>getColumnOriginalValue("govt_employee"));
		dealerMastersImpl.setHandicap(
			this.<String>getColumnOriginalValue("handicap"));
		dealerMastersImpl.setPublicRepresentative(
			this.<String>getColumnOriginalValue("public_representative"));
		dealerMastersImpl.setVgdStatus(
			this.<String>getColumnOriginalValue("vgd_status"));
		dealerMastersImpl.setCardNoFromOne(
			this.<Long>getColumnOriginalValue("card_no_from_one"));
		dealerMastersImpl.setCardNoToOne(
			this.<Long>getColumnOriginalValue("card_no_to_one"));
		dealerMastersImpl.setCardNoFromTwo(
			this.<Long>getColumnOriginalValue("card_no_from_two"));
		dealerMastersImpl.setCardNoToTwo(
			this.<Long>getColumnOriginalValue("card_no_to_two"));
		dealerMastersImpl.setCardNoFromThree(
			this.<Long>getColumnOriginalValue("card_no_from_three"));
		dealerMastersImpl.setCardNoToThree(
			this.<Long>getColumnOriginalValue("card_no_to_three"));
		dealerMastersImpl.setStatus(
			this.<String>getColumnOriginalValue("status"));
		dealerMastersImpl.setCreatedAt(
			this.<Date>getColumnOriginalValue("created_at"));
		dealerMastersImpl.setUpdatedAt(
			this.<Date>getColumnOriginalValue("updated_at"));
		dealerMastersImpl.setCardNoFromFour(
			this.<Long>getColumnOriginalValue("card_no_from_four"));
		dealerMastersImpl.setCardNoToFour(
			this.<Long>getColumnOriginalValue("card_no_to_four"));
		dealerMastersImpl.setCardNoFromFive(
			this.<Long>getColumnOriginalValue("card_no_from_five"));
		dealerMastersImpl.setCardNoToFive(
			this.<Long>getColumnOriginalValue("card_no_to_five"));
		dealerMastersImpl.setSingleCards(
			this.<String>getColumnOriginalValue("single_cards"));
		dealerMastersImpl.setUserId(
			this.<Long>getColumnOriginalValue("user_id"));
		dealerMastersImpl.setAdditionalUnionId(
			this.<Long>getColumnOriginalValue("additional_union_id"));
		dealerMastersImpl.setUpazilaId(
			this.<Long>getColumnOriginalValue("upazila_id"));
		dealerMastersImpl.setRemarks(
			this.<String>getColumnOriginalValue("remarks"));

		return dealerMastersImpl;
	}

	@Override
	public int compareTo(DealerMasters dealerMasters) {
		long primaryKey = dealerMasters.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof DealerMasters)) {
			return false;
		}

		DealerMasters dealerMasters = (DealerMasters)object;

		long primaryKey = dealerMasters.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();
	}

	@Override
	public CacheModel<DealerMasters> toCacheModel() {
		DealerMastersCacheModel dealerMastersCacheModel =
			new DealerMastersCacheModel();

		dealerMastersCacheModel.id = getId();

		dealerMastersCacheModel.unionId = getUnionId();

		dealerMastersCacheModel.dealerName = getDealerName();

		String dealerName = dealerMastersCacheModel.dealerName;

		if ((dealerName != null) && (dealerName.length() == 0)) {
			dealerMastersCacheModel.dealerName = null;
		}

		dealerMastersCacheModel.dealerNameEn = getDealerNameEn();

		String dealerNameEn = dealerMastersCacheModel.dealerNameEn;

		if ((dealerNameEn != null) && (dealerNameEn.length() == 0)) {
			dealerMastersCacheModel.dealerNameEn = null;
		}

		dealerMastersCacheModel.dealerSlug = getDealerSlug();

		String dealerSlug = dealerMastersCacheModel.dealerSlug;

		if ((dealerSlug != null) && (dealerSlug.length() == 0)) {
			dealerMastersCacheModel.dealerSlug = null;
		}

		dealerMastersCacheModel.fatherName = getFatherName();

		String fatherName = dealerMastersCacheModel.fatherName;

		if ((fatherName != null) && (fatherName.length() == 0)) {
			dealerMastersCacheModel.fatherName = null;
		}

		dealerMastersCacheModel.motherName = getMotherName();

		String motherName = dealerMastersCacheModel.motherName;

		if ((motherName != null) && (motherName.length() == 0)) {
			dealerMastersCacheModel.motherName = null;
		}

		Date birthDate = getBirthDate();

		if (birthDate != null) {
			dealerMastersCacheModel.birthDate = birthDate.getTime();
		}
		else {
			dealerMastersCacheModel.birthDate = Long.MIN_VALUE;
		}

		dealerMastersCacheModel.gender = getGender();

		String gender = dealerMastersCacheModel.gender;

		if ((gender != null) && (gender.length() == 0)) {
			dealerMastersCacheModel.gender = null;
		}

		dealerMastersCacheModel.imagePathReal = getImagePathReal();

		String imagePathReal = dealerMastersCacheModel.imagePathReal;

		if ((imagePathReal != null) && (imagePathReal.length() == 0)) {
			dealerMastersCacheModel.imagePathReal = null;
		}

		dealerMastersCacheModel.imagePathEc = getImagePathEc();

		String imagePathEc = dealerMastersCacheModel.imagePathEc;

		if ((imagePathEc != null) && (imagePathEc.length() == 0)) {
			dealerMastersCacheModel.imagePathEc = null;
		}

		dealerMastersCacheModel.ecPmDivision = getEcPmDivision();

		String ecPmDivision = dealerMastersCacheModel.ecPmDivision;

		if ((ecPmDivision != null) && (ecPmDivision.length() == 0)) {
			dealerMastersCacheModel.ecPmDivision = null;
		}

		dealerMastersCacheModel.ecPmDistrict = getEcPmDistrict();

		String ecPmDistrict = dealerMastersCacheModel.ecPmDistrict;

		if ((ecPmDistrict != null) && (ecPmDistrict.length() == 0)) {
			dealerMastersCacheModel.ecPmDistrict = null;
		}

		dealerMastersCacheModel.ecPmRmo = getEcPmRmo();

		String ecPmRmo = dealerMastersCacheModel.ecPmRmo;

		if ((ecPmRmo != null) && (ecPmRmo.length() == 0)) {
			dealerMastersCacheModel.ecPmRmo = null;
		}

		dealerMastersCacheModel.ecPmUpazila = getEcPmUpazila();

		String ecPmUpazila = dealerMastersCacheModel.ecPmUpazila;

		if ((ecPmUpazila != null) && (ecPmUpazila.length() == 0)) {
			dealerMastersCacheModel.ecPmUpazila = null;
		}

		dealerMastersCacheModel.ecPmUnionWard = getEcPmUnionWard();

		String ecPmUnionWard = dealerMastersCacheModel.ecPmUnionWard;

		if ((ecPmUnionWard != null) && (ecPmUnionWard.length() == 0)) {
			dealerMastersCacheModel.ecPmUnionWard = null;
		}

		dealerMastersCacheModel.ecPmWardUnionPorishod =
			getEcPmWardUnionPorishod();

		String ecPmWardUnionPorishod =
			dealerMastersCacheModel.ecPmWardUnionPorishod;

		if ((ecPmWardUnionPorishod != null) &&
			(ecPmWardUnionPorishod.length() == 0)) {

			dealerMastersCacheModel.ecPmWardUnionPorishod = null;
		}

		dealerMastersCacheModel.ecPmPostOffice = getEcPmPostOffice();

		String ecPmPostOffice = dealerMastersCacheModel.ecPmPostOffice;

		if ((ecPmPostOffice != null) && (ecPmPostOffice.length() == 0)) {
			dealerMastersCacheModel.ecPmPostOffice = null;
		}

		dealerMastersCacheModel.ecPmPostalCode = getEcPmPostalCode();

		String ecPmPostalCode = dealerMastersCacheModel.ecPmPostalCode;

		if ((ecPmPostalCode != null) && (ecPmPostalCode.length() == 0)) {
			dealerMastersCacheModel.ecPmPostalCode = null;
		}

		dealerMastersCacheModel.ecPmMouzaMoholla = getEcPmMouzaMoholla();

		String ecPmMouzaMoholla = dealerMastersCacheModel.ecPmMouzaMoholla;

		if ((ecPmMouzaMoholla != null) && (ecPmMouzaMoholla.length() == 0)) {
			dealerMastersCacheModel.ecPmMouzaMoholla = null;
		}

		dealerMastersCacheModel.ecPmAdditionalMouzaMoholla =
			getEcPmAdditionalMouzaMoholla();

		String ecPmAdditionalMouzaMoholla =
			dealerMastersCacheModel.ecPmAdditionalMouzaMoholla;

		if ((ecPmAdditionalMouzaMoholla != null) &&
			(ecPmAdditionalMouzaMoholla.length() == 0)) {

			dealerMastersCacheModel.ecPmAdditionalMouzaMoholla = null;
		}

		dealerMastersCacheModel.ecPmVillageRoad = getEcPmVillageRoad();

		String ecPmVillageRoad = dealerMastersCacheModel.ecPmVillageRoad;

		if ((ecPmVillageRoad != null) && (ecPmVillageRoad.length() == 0)) {
			dealerMastersCacheModel.ecPmVillageRoad = null;
		}

		dealerMastersCacheModel.ecPmAdditionalVillageRoad =
			getEcPmAdditionalVillageRoad();

		String ecPmAdditionalVillageRoad =
			dealerMastersCacheModel.ecPmAdditionalVillageRoad;

		if ((ecPmAdditionalVillageRoad != null) &&
			(ecPmAdditionalVillageRoad.length() == 0)) {

			dealerMastersCacheModel.ecPmAdditionalVillageRoad = null;
		}

		dealerMastersCacheModel.ecPmHomeHoldingNo = getEcPmHomeHoldingNo();

		String ecPmHomeHoldingNo = dealerMastersCacheModel.ecPmHomeHoldingNo;

		if ((ecPmHomeHoldingNo != null) && (ecPmHomeHoldingNo.length() == 0)) {
			dealerMastersCacheModel.ecPmHomeHoldingNo = null;
		}

		dealerMastersCacheModel.ecPmRegion = getEcPmRegion();

		String ecPmRegion = dealerMastersCacheModel.ecPmRegion;

		if ((ecPmRegion != null) && (ecPmRegion.length() == 0)) {
			dealerMastersCacheModel.ecPmRegion = null;
		}

		dealerMastersCacheModel.ecPrDivision = getEcPrDivision();

		String ecPrDivision = dealerMastersCacheModel.ecPrDivision;

		if ((ecPrDivision != null) && (ecPrDivision.length() == 0)) {
			dealerMastersCacheModel.ecPrDivision = null;
		}

		dealerMastersCacheModel.ecPrDistrict = getEcPrDistrict();

		String ecPrDistrict = dealerMastersCacheModel.ecPrDistrict;

		if ((ecPrDistrict != null) && (ecPrDistrict.length() == 0)) {
			dealerMastersCacheModel.ecPrDistrict = null;
		}

		dealerMastersCacheModel.ecPrRmo = getEcPrRmo();

		String ecPrRmo = dealerMastersCacheModel.ecPrRmo;

		if ((ecPrRmo != null) && (ecPrRmo.length() == 0)) {
			dealerMastersCacheModel.ecPrRmo = null;
		}

		dealerMastersCacheModel.ecPrUpazila = getEcPrUpazila();

		String ecPrUpazila = dealerMastersCacheModel.ecPrUpazila;

		if ((ecPrUpazila != null) && (ecPrUpazila.length() == 0)) {
			dealerMastersCacheModel.ecPrUpazila = null;
		}

		dealerMastersCacheModel.ecPrCityCorpMunicipality =
			getEcPrCityCorpMunicipality();

		String ecPrCityCorpMunicipality =
			dealerMastersCacheModel.ecPrCityCorpMunicipality;

		if ((ecPrCityCorpMunicipality != null) &&
			(ecPrCityCorpMunicipality.length() == 0)) {

			dealerMastersCacheModel.ecPrCityCorpMunicipality = null;
		}

		dealerMastersCacheModel.ecPrUnionWard = getEcPrUnionWard();

		String ecPrUnionWard = dealerMastersCacheModel.ecPrUnionWard;

		if ((ecPrUnionWard != null) && (ecPrUnionWard.length() == 0)) {
			dealerMastersCacheModel.ecPrUnionWard = null;
		}

		dealerMastersCacheModel.ecPrPostOffice = getEcPrPostOffice();

		String ecPrPostOffice = dealerMastersCacheModel.ecPrPostOffice;

		if ((ecPrPostOffice != null) && (ecPrPostOffice.length() == 0)) {
			dealerMastersCacheModel.ecPrPostOffice = null;
		}

		dealerMastersCacheModel.ecPrPostalCode = getEcPrPostalCode();

		String ecPrPostalCode = dealerMastersCacheModel.ecPrPostalCode;

		if ((ecPrPostalCode != null) && (ecPrPostalCode.length() == 0)) {
			dealerMastersCacheModel.ecPrPostalCode = null;
		}

		dealerMastersCacheModel.ecPrWardUnionPorishod =
			getEcPrWardUnionPorishod();

		String ecPrWardUnionPorishod =
			dealerMastersCacheModel.ecPrWardUnionPorishod;

		if ((ecPrWardUnionPorishod != null) &&
			(ecPrWardUnionPorishod.length() == 0)) {

			dealerMastersCacheModel.ecPrWardUnionPorishod = null;
		}

		dealerMastersCacheModel.ecPrMouzaMoholla = getEcPrMouzaMoholla();

		String ecPrMouzaMoholla = dealerMastersCacheModel.ecPrMouzaMoholla;

		if ((ecPrMouzaMoholla != null) && (ecPrMouzaMoholla.length() == 0)) {
			dealerMastersCacheModel.ecPrMouzaMoholla = null;
		}

		dealerMastersCacheModel.ecPrAdditionalMouzaMoholla =
			getEcPrAdditionalMouzaMoholla();

		String ecPrAdditionalMouzaMoholla =
			dealerMastersCacheModel.ecPrAdditionalMouzaMoholla;

		if ((ecPrAdditionalMouzaMoholla != null) &&
			(ecPrAdditionalMouzaMoholla.length() == 0)) {

			dealerMastersCacheModel.ecPrAdditionalMouzaMoholla = null;
		}

		dealerMastersCacheModel.ecPrVillageRoad = getEcPrVillageRoad();

		String ecPrVillageRoad = dealerMastersCacheModel.ecPrVillageRoad;

		if ((ecPrVillageRoad != null) && (ecPrVillageRoad.length() == 0)) {
			dealerMastersCacheModel.ecPrVillageRoad = null;
		}

		dealerMastersCacheModel.ecPrAdditionalVillageRoad =
			getEcPrAdditionalVillageRoad();

		String ecPrAdditionalVillageRoad =
			dealerMastersCacheModel.ecPrAdditionalVillageRoad;

		if ((ecPrAdditionalVillageRoad != null) &&
			(ecPrAdditionalVillageRoad.length() == 0)) {

			dealerMastersCacheModel.ecPrAdditionalVillageRoad = null;
		}

		dealerMastersCacheModel.ecPrHomeHoldingNo = getEcPrHomeHoldingNo();

		String ecPrHomeHoldingNo = dealerMastersCacheModel.ecPrHomeHoldingNo;

		if ((ecPrHomeHoldingNo != null) && (ecPrHomeHoldingNo.length() == 0)) {
			dealerMastersCacheModel.ecPrHomeHoldingNo = null;
		}

		dealerMastersCacheModel.ecPrRegion = getEcPrRegion();

		String ecPrRegion = dealerMastersCacheModel.ecPrRegion;

		if ((ecPrRegion != null) && (ecPrRegion.length() == 0)) {
			dealerMastersCacheModel.ecPrRegion = null;
		}

		dealerMastersCacheModel.ecOccupation = getEcOccupation();

		String ecOccupation = dealerMastersCacheModel.ecOccupation;

		if ((ecOccupation != null) && (ecOccupation.length() == 0)) {
			dealerMastersCacheModel.ecOccupation = null;
		}

		dealerMastersCacheModel.ecBloodGroup = getEcBloodGroup();

		String ecBloodGroup = dealerMastersCacheModel.ecBloodGroup;

		if ((ecBloodGroup != null) && (ecBloodGroup.length() == 0)) {
			dealerMastersCacheModel.ecBloodGroup = null;
		}

		dealerMastersCacheModel.age = getAge();

		dealerMastersCacheModel.pmDivisionId = getPmDivisionId();

		dealerMastersCacheModel.pmDistrictId = getPmDistrictId();

		dealerMastersCacheModel.pmUpazilaId = getPmUpazilaId();

		dealerMastersCacheModel.pmUnionId = getPmUnionId();

		dealerMastersCacheModel.pmPostOffice = getPmPostOffice();

		String pmPostOffice = dealerMastersCacheModel.pmPostOffice;

		if ((pmPostOffice != null) && (pmPostOffice.length() == 0)) {
			dealerMastersCacheModel.pmPostOffice = null;
		}

		dealerMastersCacheModel.pmWordNo = getPmWordNo();

		String pmWordNo = dealerMastersCacheModel.pmWordNo;

		if ((pmWordNo != null) && (pmWordNo.length() == 0)) {
			dealerMastersCacheModel.pmWordNo = null;
		}

		dealerMastersCacheModel.pmVillage = getPmVillage();

		String pmVillage = dealerMastersCacheModel.pmVillage;

		if ((pmVillage != null) && (pmVillage.length() == 0)) {
			dealerMastersCacheModel.pmVillage = null;
		}

		dealerMastersCacheModel.pmHoldingInfo = getPmHoldingInfo();

		String pmHoldingInfo = dealerMastersCacheModel.pmHoldingInfo;

		if ((pmHoldingInfo != null) && (pmHoldingInfo.length() == 0)) {
			dealerMastersCacheModel.pmHoldingInfo = null;
		}

		dealerMastersCacheModel.prDivisionId = getPrDivisionId();

		dealerMastersCacheModel.prDistrictId = getPrDistrictId();

		dealerMastersCacheModel.prUpazilaId = getPrUpazilaId();

		dealerMastersCacheModel.prUnionId = getPrUnionId();

		dealerMastersCacheModel.prPostOffice = getPrPostOffice();

		String prPostOffice = dealerMastersCacheModel.prPostOffice;

		if ((prPostOffice != null) && (prPostOffice.length() == 0)) {
			dealerMastersCacheModel.prPostOffice = null;
		}

		dealerMastersCacheModel.prWordNo = getPrWordNo();

		String prWordNo = dealerMastersCacheModel.prWordNo;

		if ((prWordNo != null) && (prWordNo.length() == 0)) {
			dealerMastersCacheModel.prWordNo = null;
		}

		dealerMastersCacheModel.prVillage = getPrVillage();

		String prVillage = dealerMastersCacheModel.prVillage;

		if ((prVillage != null) && (prVillage.length() == 0)) {
			dealerMastersCacheModel.prVillage = null;
		}

		dealerMastersCacheModel.prHoldingInfo = getPrHoldingInfo();

		String prHoldingInfo = dealerMastersCacheModel.prHoldingInfo;

		if ((prHoldingInfo != null) && (prHoldingInfo.length() == 0)) {
			dealerMastersCacheModel.prHoldingInfo = null;
		}

		dealerMastersCacheModel.dealerMobileNo = getDealerMobileNo();

		String dealerMobileNo = dealerMastersCacheModel.dealerMobileNo;

		if ((dealerMobileNo != null) && (dealerMobileNo.length() == 0)) {
			dealerMastersCacheModel.dealerMobileNo = null;
		}

		dealerMastersCacheModel.dealerNationalId = getDealerNationalId();

		String dealerNationalId = dealerMastersCacheModel.dealerNationalId;

		if ((dealerNationalId != null) && (dealerNationalId.length() == 0)) {
			dealerMastersCacheModel.dealerNationalId = null;
		}

		dealerMastersCacheModel.secondNationalId = getSecondNationalId();

		String secondNationalId = dealerMastersCacheModel.secondNationalId;

		if ((secondNationalId != null) && (secondNationalId.length() == 0)) {
			dealerMastersCacheModel.secondNationalId = null;
		}

		dealerMastersCacheModel.spouseName = getSpouseName();

		String spouseName = dealerMastersCacheModel.spouseName;

		if ((spouseName != null) && (spouseName.length() == 0)) {
			dealerMastersCacheModel.spouseName = null;
		}

		dealerMastersCacheModel.spouseFatherName = getSpouseFatherName();

		String spouseFatherName = dealerMastersCacheModel.spouseFatherName;

		if ((spouseFatherName != null) && (spouseFatherName.length() == 0)) {
			dealerMastersCacheModel.spouseFatherName = null;
		}

		Date spouseBirthDate = getSpouseBirthDate();

		if (spouseBirthDate != null) {
			dealerMastersCacheModel.spouseBirthDate = spouseBirthDate.getTime();
		}
		else {
			dealerMastersCacheModel.spouseBirthDate = Long.MIN_VALUE;
		}

		dealerMastersCacheModel.spouseNid = getSpouseNid();

		String spouseNid = dealerMastersCacheModel.spouseNid;

		if ((spouseNid != null) && (spouseNid.length() == 0)) {
			dealerMastersCacheModel.spouseNid = null;
		}

		dealerMastersCacheModel.spouseSecondNid = getSpouseSecondNid();

		String spouseSecondNid = dealerMastersCacheModel.spouseSecondNid;

		if ((spouseSecondNid != null) && (spouseSecondNid.length() == 0)) {
			dealerMastersCacheModel.spouseSecondNid = null;
		}

		dealerMastersCacheModel.govtEmployee = getGovtEmployee();

		String govtEmployee = dealerMastersCacheModel.govtEmployee;

		if ((govtEmployee != null) && (govtEmployee.length() == 0)) {
			dealerMastersCacheModel.govtEmployee = null;
		}

		dealerMastersCacheModel.handicap = getHandicap();

		String handicap = dealerMastersCacheModel.handicap;

		if ((handicap != null) && (handicap.length() == 0)) {
			dealerMastersCacheModel.handicap = null;
		}

		dealerMastersCacheModel.publicRepresentative =
			getPublicRepresentative();

		String publicRepresentative =
			dealerMastersCacheModel.publicRepresentative;

		if ((publicRepresentative != null) &&
			(publicRepresentative.length() == 0)) {

			dealerMastersCacheModel.publicRepresentative = null;
		}

		dealerMastersCacheModel.vgdStatus = getVgdStatus();

		String vgdStatus = dealerMastersCacheModel.vgdStatus;

		if ((vgdStatus != null) && (vgdStatus.length() == 0)) {
			dealerMastersCacheModel.vgdStatus = null;
		}

		dealerMastersCacheModel.cardNoFromOne = getCardNoFromOne();

		dealerMastersCacheModel.cardNoToOne = getCardNoToOne();

		dealerMastersCacheModel.cardNoFromTwo = getCardNoFromTwo();

		dealerMastersCacheModel.cardNoToTwo = getCardNoToTwo();

		dealerMastersCacheModel.cardNoFromThree = getCardNoFromThree();

		dealerMastersCacheModel.cardNoToThree = getCardNoToThree();

		dealerMastersCacheModel.status = getStatus();

		String status = dealerMastersCacheModel.status;

		if ((status != null) && (status.length() == 0)) {
			dealerMastersCacheModel.status = null;
		}

		Date createdAt = getCreatedAt();

		if (createdAt != null) {
			dealerMastersCacheModel.createdAt = createdAt.getTime();
		}
		else {
			dealerMastersCacheModel.createdAt = Long.MIN_VALUE;
		}

		Date updatedAt = getUpdatedAt();

		if (updatedAt != null) {
			dealerMastersCacheModel.updatedAt = updatedAt.getTime();
		}
		else {
			dealerMastersCacheModel.updatedAt = Long.MIN_VALUE;
		}

		dealerMastersCacheModel.cardNoFromFour = getCardNoFromFour();

		dealerMastersCacheModel.cardNoToFour = getCardNoToFour();

		dealerMastersCacheModel.cardNoFromFive = getCardNoFromFive();

		dealerMastersCacheModel.cardNoToFive = getCardNoToFive();

		dealerMastersCacheModel.singleCards = getSingleCards();

		String singleCards = dealerMastersCacheModel.singleCards;

		if ((singleCards != null) && (singleCards.length() == 0)) {
			dealerMastersCacheModel.singleCards = null;
		}

		dealerMastersCacheModel.userId = getUserId();

		dealerMastersCacheModel.additionalUnionId = getAdditionalUnionId();

		dealerMastersCacheModel.upazilaId = getUpazilaId();

		dealerMastersCacheModel.remarks = getRemarks();

		String remarks = dealerMastersCacheModel.remarks;

		if ((remarks != null) && (remarks.length() == 0)) {
			dealerMastersCacheModel.remarks = null;
		}

		return dealerMastersCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<DealerMasters, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<DealerMasters, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<DealerMasters, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((DealerMasters)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, DealerMasters>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					DealerMasters.class, ModelWrapper.class);

	}

	private long _id;
	private long _unionId;
	private String _dealerName;
	private String _dealerNameEn;
	private String _dealerSlug;
	private String _fatherName;
	private String _motherName;
	private Date _birthDate;
	private String _gender;
	private String _imagePathReal;
	private String _imagePathEc;
	private String _ecPmDivision;
	private String _ecPmDistrict;
	private String _ecPmRmo;
	private String _ecPmUpazila;
	private String _ecPmUnionWard;
	private String _ecPmWardUnionPorishod;
	private String _ecPmPostOffice;
	private String _ecPmPostalCode;
	private String _ecPmMouzaMoholla;
	private String _ecPmAdditionalMouzaMoholla;
	private String _ecPmVillageRoad;
	private String _ecPmAdditionalVillageRoad;
	private String _ecPmHomeHoldingNo;
	private String _ecPmRegion;
	private String _ecPrDivision;
	private String _ecPrDistrict;
	private String _ecPrRmo;
	private String _ecPrUpazila;
	private String _ecPrCityCorpMunicipality;
	private String _ecPrUnionWard;
	private String _ecPrPostOffice;
	private String _ecPrPostalCode;
	private String _ecPrWardUnionPorishod;
	private String _ecPrMouzaMoholla;
	private String _ecPrAdditionalMouzaMoholla;
	private String _ecPrVillageRoad;
	private String _ecPrAdditionalVillageRoad;
	private String _ecPrHomeHoldingNo;
	private String _ecPrRegion;
	private String _ecOccupation;
	private String _ecBloodGroup;
	private long _age;
	private long _pmDivisionId;
	private long _pmDistrictId;
	private long _pmUpazilaId;
	private long _pmUnionId;
	private String _pmPostOffice;
	private String _pmWordNo;
	private String _pmVillage;
	private String _pmHoldingInfo;
	private long _prDivisionId;
	private long _prDistrictId;
	private long _prUpazilaId;
	private long _prUnionId;
	private String _prPostOffice;
	private String _prWordNo;
	private String _prVillage;
	private String _prHoldingInfo;
	private String _dealerMobileNo;
	private String _dealerNationalId;
	private String _secondNationalId;
	private String _spouseName;
	private String _spouseFatherName;
	private Date _spouseBirthDate;
	private String _spouseNid;
	private String _spouseSecondNid;
	private String _govtEmployee;
	private String _handicap;
	private String _publicRepresentative;
	private String _vgdStatus;
	private long _cardNoFromOne;
	private long _cardNoToOne;
	private long _cardNoFromTwo;
	private long _cardNoToTwo;
	private long _cardNoFromThree;
	private long _cardNoToThree;
	private String _status;
	private Date _createdAt;
	private Date _updatedAt;
	private long _cardNoFromFour;
	private long _cardNoToFour;
	private long _cardNoFromFive;
	private long _cardNoToFive;
	private String _singleCards;
	private long _userId;
	private long _additionalUnionId;
	private long _upazilaId;
	private String _remarks;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<DealerMasters, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((DealerMasters)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("id", _id);
		_columnOriginalValues.put("union_id", _unionId);
		_columnOriginalValues.put("dealer_name", _dealerName);
		_columnOriginalValues.put("dealer_name_en", _dealerNameEn);
		_columnOriginalValues.put("dealer_slug", _dealerSlug);
		_columnOriginalValues.put("father_name", _fatherName);
		_columnOriginalValues.put("mother_name", _motherName);
		_columnOriginalValues.put("birth_date", _birthDate);
		_columnOriginalValues.put("gender", _gender);
		_columnOriginalValues.put("image_path_real", _imagePathReal);
		_columnOriginalValues.put("image_path_ec", _imagePathEc);
		_columnOriginalValues.put("ec_pm_division", _ecPmDivision);
		_columnOriginalValues.put("ec_pm_district", _ecPmDistrict);
		_columnOriginalValues.put("ec_pm_rmo", _ecPmRmo);
		_columnOriginalValues.put("ec_pm_upazila", _ecPmUpazila);
		_columnOriginalValues.put("ec_pm_union_ward", _ecPmUnionWard);
		_columnOriginalValues.put(
			"ec_pm_ward_union_porishod", _ecPmWardUnionPorishod);
		_columnOriginalValues.put("ec_pm_post_office", _ecPmPostOffice);
		_columnOriginalValues.put("ec_pm_postal_code", _ecPmPostalCode);
		_columnOriginalValues.put("ec_pm_mouza_moholla", _ecPmMouzaMoholla);
		_columnOriginalValues.put(
			"ec_pm_additional_mouza_moholla", _ecPmAdditionalMouzaMoholla);
		_columnOriginalValues.put("ec_pm_village_road", _ecPmVillageRoad);
		_columnOriginalValues.put(
			"ec_pm_additional_village_road", _ecPmAdditionalVillageRoad);
		_columnOriginalValues.put("ec_pm_home_holding_no", _ecPmHomeHoldingNo);
		_columnOriginalValues.put("ec_pm_region", _ecPmRegion);
		_columnOriginalValues.put("ec_pr_division", _ecPrDivision);
		_columnOriginalValues.put("ec_pr_district", _ecPrDistrict);
		_columnOriginalValues.put("ec_pr_rmo", _ecPrRmo);
		_columnOriginalValues.put("ec_pr_upazila", _ecPrUpazila);
		_columnOriginalValues.put(
			"ec_pr_city_corp_municipality", _ecPrCityCorpMunicipality);
		_columnOriginalValues.put("ec_pr_union_ward", _ecPrUnionWard);
		_columnOriginalValues.put("ec_pr_post_office", _ecPrPostOffice);
		_columnOriginalValues.put("ec_pr_postal_code", _ecPrPostalCode);
		_columnOriginalValues.put(
			"ec_pr_ward_union_porishod", _ecPrWardUnionPorishod);
		_columnOriginalValues.put("ec_pr_mouza_moholla", _ecPrMouzaMoholla);
		_columnOriginalValues.put(
			"ec_pr_additional_mouza_moholla", _ecPrAdditionalMouzaMoholla);
		_columnOriginalValues.put("ec_pr_village_road", _ecPrVillageRoad);
		_columnOriginalValues.put(
			"ec_pr_additional_village_road", _ecPrAdditionalVillageRoad);
		_columnOriginalValues.put("ec_pr_home_holding_no", _ecPrHomeHoldingNo);
		_columnOriginalValues.put("ec_pr_region", _ecPrRegion);
		_columnOriginalValues.put("ec_occupation", _ecOccupation);
		_columnOriginalValues.put("ec_blood_group", _ecBloodGroup);
		_columnOriginalValues.put("age", _age);
		_columnOriginalValues.put("pm_division_id", _pmDivisionId);
		_columnOriginalValues.put("pm_district_id", _pmDistrictId);
		_columnOriginalValues.put("pm_upazila_id", _pmUpazilaId);
		_columnOriginalValues.put("pm_union_id", _pmUnionId);
		_columnOriginalValues.put("pm_post_office", _pmPostOffice);
		_columnOriginalValues.put("pm_word_no", _pmWordNo);
		_columnOriginalValues.put("pm_village", _pmVillage);
		_columnOriginalValues.put("pm_holding_info", _pmHoldingInfo);
		_columnOriginalValues.put("pr_division_id", _prDivisionId);
		_columnOriginalValues.put("pr_district_id", _prDistrictId);
		_columnOriginalValues.put("pr_upazila_id", _prUpazilaId);
		_columnOriginalValues.put("pr_union_id", _prUnionId);
		_columnOriginalValues.put("pr_post_office", _prPostOffice);
		_columnOriginalValues.put("pr_word_no", _prWordNo);
		_columnOriginalValues.put("pr_village", _prVillage);
		_columnOriginalValues.put("pr_holding_info", _prHoldingInfo);
		_columnOriginalValues.put("dealer_mobile_no", _dealerMobileNo);
		_columnOriginalValues.put("dealer_national_id", _dealerNationalId);
		_columnOriginalValues.put("second_national_id", _secondNationalId);
		_columnOriginalValues.put("spouse_name", _spouseName);
		_columnOriginalValues.put("spouse_father_name", _spouseFatherName);
		_columnOriginalValues.put("spouse_birth_date", _spouseBirthDate);
		_columnOriginalValues.put("spouse_nid", _spouseNid);
		_columnOriginalValues.put("spouse_second_nid", _spouseSecondNid);
		_columnOriginalValues.put("govt_employee", _govtEmployee);
		_columnOriginalValues.put("handicap", _handicap);
		_columnOriginalValues.put(
			"public_representative", _publicRepresentative);
		_columnOriginalValues.put("vgd_status", _vgdStatus);
		_columnOriginalValues.put("card_no_from_one", _cardNoFromOne);
		_columnOriginalValues.put("card_no_to_one", _cardNoToOne);
		_columnOriginalValues.put("card_no_from_two", _cardNoFromTwo);
		_columnOriginalValues.put("card_no_to_two", _cardNoToTwo);
		_columnOriginalValues.put("card_no_from_three", _cardNoFromThree);
		_columnOriginalValues.put("card_no_to_three", _cardNoToThree);
		_columnOriginalValues.put("status", _status);
		_columnOriginalValues.put("created_at", _createdAt);
		_columnOriginalValues.put("updated_at", _updatedAt);
		_columnOriginalValues.put("card_no_from_four", _cardNoFromFour);
		_columnOriginalValues.put("card_no_to_four", _cardNoToFour);
		_columnOriginalValues.put("card_no_from_five", _cardNoFromFive);
		_columnOriginalValues.put("card_no_to_five", _cardNoToFive);
		_columnOriginalValues.put("single_cards", _singleCards);
		_columnOriginalValues.put("user_id", _userId);
		_columnOriginalValues.put("additional_union_id", _additionalUnionId);
		_columnOriginalValues.put("upazila_id", _upazilaId);
		_columnOriginalValues.put("remarks", _remarks);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("union_id", "unionId");
		attributeNames.put("dealer_name", "dealerName");
		attributeNames.put("dealer_name_en", "dealerNameEn");
		attributeNames.put("dealer_slug", "dealerSlug");
		attributeNames.put("father_name", "fatherName");
		attributeNames.put("mother_name", "motherName");
		attributeNames.put("birth_date", "birthDate");
		attributeNames.put("image_path_real", "imagePathReal");
		attributeNames.put("image_path_ec", "imagePathEc");
		attributeNames.put("ec_pm_division", "ecPmDivision");
		attributeNames.put("ec_pm_district", "ecPmDistrict");
		attributeNames.put("ec_pm_rmo", "ecPmRmo");
		attributeNames.put("ec_pm_upazila", "ecPmUpazila");
		attributeNames.put("ec_pm_union_ward", "ecPmUnionWard");
		attributeNames.put(
			"ec_pm_ward_union_porishod", "ecPmWardUnionPorishod");
		attributeNames.put("ec_pm_post_office", "ecPmPostOffice");
		attributeNames.put("ec_pm_postal_code", "ecPmPostalCode");
		attributeNames.put("ec_pm_mouza_moholla", "ecPmMouzaMoholla");
		attributeNames.put(
			"ec_pm_additional_mouza_moholla", "ecPmAdditionalMouzaMoholla");
		attributeNames.put("ec_pm_village_road", "ecPmVillageRoad");
		attributeNames.put(
			"ec_pm_additional_village_road", "ecPmAdditionalVillageRoad");
		attributeNames.put("ec_pm_home_holding_no", "ecPmHomeHoldingNo");
		attributeNames.put("ec_pm_region", "ecPmRegion");
		attributeNames.put("ec_pr_division", "ecPrDivision");
		attributeNames.put("ec_pr_district", "ecPrDistrict");
		attributeNames.put("ec_pr_rmo", "ecPrRmo");
		attributeNames.put("ec_pr_upazila", "ecPrUpazila");
		attributeNames.put(
			"ec_pr_city_corp_municipality", "ecPrCityCorpMunicipality");
		attributeNames.put("ec_pr_union_ward", "ecPrUnionWard");
		attributeNames.put("ec_pr_post_office", "ecPrPostOffice");
		attributeNames.put("ec_pr_postal_code", "ecPrPostalCode");
		attributeNames.put(
			"ec_pr_ward_union_porishod", "ecPrWardUnionPorishod");
		attributeNames.put("ec_pr_mouza_moholla", "ecPrMouzaMoholla");
		attributeNames.put(
			"ec_pr_additional_mouza_moholla", "ecPrAdditionalMouzaMoholla");
		attributeNames.put("ec_pr_village_road", "ecPrVillageRoad");
		attributeNames.put(
			"ec_pr_additional_village_road", "ecPrAdditionalVillageRoad");
		attributeNames.put("ec_pr_home_holding_no", "ecPrHomeHoldingNo");
		attributeNames.put("ec_pr_region", "ecPrRegion");
		attributeNames.put("ec_occupation", "ecOccupation");
		attributeNames.put("ec_blood_group", "ecBloodGroup");
		attributeNames.put("pm_division_id", "pmDivisionId");
		attributeNames.put("pm_district_id", "pmDistrictId");
		attributeNames.put("pm_upazila_id", "pmUpazilaId");
		attributeNames.put("pm_union_id", "pmUnionId");
		attributeNames.put("pm_post_office", "pmPostOffice");
		attributeNames.put("pm_word_no", "pmWordNo");
		attributeNames.put("pm_village", "pmVillage");
		attributeNames.put("pm_holding_info", "pmHoldingInfo");
		attributeNames.put("pr_division_id", "prDivisionId");
		attributeNames.put("pr_district_id", "prDistrictId");
		attributeNames.put("pr_upazila_id", "prUpazilaId");
		attributeNames.put("pr_union_id", "prUnionId");
		attributeNames.put("pr_post_office", "prPostOffice");
		attributeNames.put("pr_word_no", "prWordNo");
		attributeNames.put("pr_village", "prVillage");
		attributeNames.put("pr_holding_info", "prHoldingInfo");
		attributeNames.put("dealer_mobile_no", "dealerMobileNo");
		attributeNames.put("dealer_national_id", "dealerNationalId");
		attributeNames.put("second_national_id", "secondNationalId");
		attributeNames.put("spouse_name", "spouseName");
		attributeNames.put("spouse_father_name", "spouseFatherName");
		attributeNames.put("spouse_birth_date", "spouseBirthDate");
		attributeNames.put("spouse_nid", "spouseNid");
		attributeNames.put("spouse_second_nid", "spouseSecondNid");
		attributeNames.put("govt_employee", "govtEmployee");
		attributeNames.put("public_representative", "publicRepresentative");
		attributeNames.put("vgd_status", "vgdStatus");
		attributeNames.put("card_no_from_one", "cardNoFromOne");
		attributeNames.put("card_no_to_one", "cardNoToOne");
		attributeNames.put("card_no_from_two", "cardNoFromTwo");
		attributeNames.put("card_no_to_two", "cardNoToTwo");
		attributeNames.put("card_no_from_three", "cardNoFromThree");
		attributeNames.put("card_no_to_three", "cardNoToThree");
		attributeNames.put("created_at", "createdAt");
		attributeNames.put("updated_at", "updatedAt");
		attributeNames.put("card_no_from_four", "cardNoFromFour");
		attributeNames.put("card_no_to_four", "cardNoToFour");
		attributeNames.put("card_no_from_five", "cardNoFromFive");
		attributeNames.put("card_no_to_five", "cardNoToFive");
		attributeNames.put("single_cards", "singleCards");
		attributeNames.put("user_id", "userId");
		attributeNames.put("additional_union_id", "additionalUnionId");
		attributeNames.put("upazila_id", "upazilaId");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;
	private DealerMasters _escapedModel;

}