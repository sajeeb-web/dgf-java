/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package bd.gov.dgfood.food.grain.license.model.impl;

import bd.gov.dgfood.food.grain.license.model.DgfBussAddrDtls;
import bd.gov.dgfood.food.grain.license.model.DgfBussAddrDtlsModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the DgfBussAddrDtls service. Represents a row in the &quot;dgf_buss_addr_dtls&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>DgfBussAddrDtlsModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DgfBussAddrDtlsImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see DgfBussAddrDtlsImpl
 * @generated
 */
@JSON(strict = true)
public class DgfBussAddrDtlsModelImpl
	extends BaseModelImpl<DgfBussAddrDtls> implements DgfBussAddrDtlsModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a dgf buss addr dtls model instance should use the <code>DgfBussAddrDtls</code> interface instead.
	 */
	public static final String TABLE_NAME = "dgf_buss_addr_dtls";

	public static final Object[][] TABLE_COLUMNS = {
		{"businessAddressId", Types.BIGINT}, {"nationalId", Types.BIGINT},
		{"businessDivision", Types.BIGINT}, {"businessDistrict", Types.BIGINT},
		{"businessUpzilla", Types.BIGINT}, {"businessUnionName", Types.BIGINT},
		{"businessVillage", Types.VARCHAR}, {"businessWard", Types.VARCHAR},
		{"businessZipCode", Types.VARCHAR},
		{"businessPostOffice", Types.VARCHAR},
		{"businessHouseAddress", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("businessAddressId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("nationalId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("businessDivision", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("businessDistrict", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("businessUpzilla", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("businessUnionName", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("businessVillage", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("businessWard", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("businessZipCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("businessPostOffice", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("businessHouseAddress", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table dgf_buss_addr_dtls (businessAddressId LONG not null primary key,nationalId LONG,businessDivision LONG,businessDistrict LONG,businessUpzilla LONG,businessUnionName LONG,businessVillage VARCHAR(75) null,businessWard VARCHAR(75) null,businessZipCode VARCHAR(75) null,businessPostOffice VARCHAR(75) null,businessHouseAddress VARCHAR(75) null)";

	public static final String TABLE_SQL_DROP = "drop table dgf_buss_addr_dtls";

	public static final String ORDER_BY_JPQL =
		" ORDER BY dgfBussAddrDtls.businessAddressId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY dgf_buss_addr_dtls.businessAddressId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long BUSINESSDISTRICT_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long BUSINESSUNIONNAME_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long BUSINESSUPZILLA_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long BUSINESSWARD_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long BUSINESSADDRESSID_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public DgfBussAddrDtlsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _businessAddressId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setBusinessAddressId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _businessAddressId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return DgfBussAddrDtls.class;
	}

	@Override
	public String getModelClassName() {
		return DgfBussAddrDtls.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<DgfBussAddrDtls, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<DgfBussAddrDtls, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<DgfBussAddrDtls, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((DgfBussAddrDtls)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<DgfBussAddrDtls, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<DgfBussAddrDtls, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(DgfBussAddrDtls)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<DgfBussAddrDtls, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<DgfBussAddrDtls, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<DgfBussAddrDtls, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<DgfBussAddrDtls, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<DgfBussAddrDtls, Object>>
			attributeGetterFunctions =
				new LinkedHashMap<String, Function<DgfBussAddrDtls, Object>>();
		Map<String, BiConsumer<DgfBussAddrDtls, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<DgfBussAddrDtls, ?>>();

		attributeGetterFunctions.put(
			"businessAddressId", DgfBussAddrDtls::getBusinessAddressId);
		attributeSetterBiConsumers.put(
			"businessAddressId",
			(BiConsumer<DgfBussAddrDtls, Long>)
				DgfBussAddrDtls::setBusinessAddressId);
		attributeGetterFunctions.put(
			"nationalId", DgfBussAddrDtls::getNationalId);
		attributeSetterBiConsumers.put(
			"nationalId",
			(BiConsumer<DgfBussAddrDtls, Long>)DgfBussAddrDtls::setNationalId);
		attributeGetterFunctions.put(
			"businessDivision", DgfBussAddrDtls::getBusinessDivision);
		attributeSetterBiConsumers.put(
			"businessDivision",
			(BiConsumer<DgfBussAddrDtls, Long>)
				DgfBussAddrDtls::setBusinessDivision);
		attributeGetterFunctions.put(
			"businessDistrict", DgfBussAddrDtls::getBusinessDistrict);
		attributeSetterBiConsumers.put(
			"businessDistrict",
			(BiConsumer<DgfBussAddrDtls, Long>)
				DgfBussAddrDtls::setBusinessDistrict);
		attributeGetterFunctions.put(
			"businessUpzilla", DgfBussAddrDtls::getBusinessUpzilla);
		attributeSetterBiConsumers.put(
			"businessUpzilla",
			(BiConsumer<DgfBussAddrDtls, Long>)
				DgfBussAddrDtls::setBusinessUpzilla);
		attributeGetterFunctions.put(
			"businessUnionName", DgfBussAddrDtls::getBusinessUnionName);
		attributeSetterBiConsumers.put(
			"businessUnionName",
			(BiConsumer<DgfBussAddrDtls, Long>)
				DgfBussAddrDtls::setBusinessUnionName);
		attributeGetterFunctions.put(
			"businessVillage", DgfBussAddrDtls::getBusinessVillage);
		attributeSetterBiConsumers.put(
			"businessVillage",
			(BiConsumer<DgfBussAddrDtls, String>)
				DgfBussAddrDtls::setBusinessVillage);
		attributeGetterFunctions.put(
			"businessWard", DgfBussAddrDtls::getBusinessWard);
		attributeSetterBiConsumers.put(
			"businessWard",
			(BiConsumer<DgfBussAddrDtls, String>)
				DgfBussAddrDtls::setBusinessWard);
		attributeGetterFunctions.put(
			"businessZipCode", DgfBussAddrDtls::getBusinessZipCode);
		attributeSetterBiConsumers.put(
			"businessZipCode",
			(BiConsumer<DgfBussAddrDtls, String>)
				DgfBussAddrDtls::setBusinessZipCode);
		attributeGetterFunctions.put(
			"businessPostOffice", DgfBussAddrDtls::getBusinessPostOffice);
		attributeSetterBiConsumers.put(
			"businessPostOffice",
			(BiConsumer<DgfBussAddrDtls, String>)
				DgfBussAddrDtls::setBusinessPostOffice);
		attributeGetterFunctions.put(
			"businessHouseAddress", DgfBussAddrDtls::getBusinessHouseAddress);
		attributeSetterBiConsumers.put(
			"businessHouseAddress",
			(BiConsumer<DgfBussAddrDtls, String>)
				DgfBussAddrDtls::setBusinessHouseAddress);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getBusinessAddressId() {
		return _businessAddressId;
	}

	@Override
	public void setBusinessAddressId(long businessAddressId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessAddressId = businessAddressId;
	}

	@JSON
	@Override
	public long getNationalId() {
		return _nationalId;
	}

	@Override
	public void setNationalId(long nationalId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nationalId = nationalId;
	}

	@JSON
	@Override
	public long getBusinessDivision() {
		return _businessDivision;
	}

	@Override
	public void setBusinessDivision(long businessDivision) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessDivision = businessDivision;
	}

	@JSON
	@Override
	public long getBusinessDistrict() {
		return _businessDistrict;
	}

	@Override
	public void setBusinessDistrict(long businessDistrict) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessDistrict = businessDistrict;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalBusinessDistrict() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("businessDistrict"));
	}

	@JSON
	@Override
	public long getBusinessUpzilla() {
		return _businessUpzilla;
	}

	@Override
	public void setBusinessUpzilla(long businessUpzilla) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessUpzilla = businessUpzilla;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalBusinessUpzilla() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("businessUpzilla"));
	}

	@JSON
	@Override
	public long getBusinessUnionName() {
		return _businessUnionName;
	}

	@Override
	public void setBusinessUnionName(long businessUnionName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessUnionName = businessUnionName;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalBusinessUnionName() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("businessUnionName"));
	}

	@JSON
	@Override
	public String getBusinessVillage() {
		if (_businessVillage == null) {
			return "";
		}
		else {
			return _businessVillage;
		}
	}

	@Override
	public void setBusinessVillage(String businessVillage) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessVillage = businessVillage;
	}

	@JSON
	@Override
	public String getBusinessWard() {
		if (_businessWard == null) {
			return "";
		}
		else {
			return _businessWard;
		}
	}

	@Override
	public void setBusinessWard(String businessWard) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessWard = businessWard;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalBusinessWard() {
		return getColumnOriginalValue("businessWard");
	}

	@JSON
	@Override
	public String getBusinessZipCode() {
		if (_businessZipCode == null) {
			return "";
		}
		else {
			return _businessZipCode;
		}
	}

	@Override
	public void setBusinessZipCode(String businessZipCode) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessZipCode = businessZipCode;
	}

	@JSON
	@Override
	public String getBusinessPostOffice() {
		if (_businessPostOffice == null) {
			return "";
		}
		else {
			return _businessPostOffice;
		}
	}

	@Override
	public void setBusinessPostOffice(String businessPostOffice) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessPostOffice = businessPostOffice;
	}

	@JSON
	@Override
	public String getBusinessHouseAddress() {
		if (_businessHouseAddress == null) {
			return "";
		}
		else {
			return _businessHouseAddress;
		}
	}

	@Override
	public void setBusinessHouseAddress(String businessHouseAddress) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_businessHouseAddress = businessHouseAddress;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, DgfBussAddrDtls.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public DgfBussAddrDtls toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, DgfBussAddrDtls>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DgfBussAddrDtlsImpl dgfBussAddrDtlsImpl = new DgfBussAddrDtlsImpl();

		dgfBussAddrDtlsImpl.setBusinessAddressId(getBusinessAddressId());
		dgfBussAddrDtlsImpl.setNationalId(getNationalId());
		dgfBussAddrDtlsImpl.setBusinessDivision(getBusinessDivision());
		dgfBussAddrDtlsImpl.setBusinessDistrict(getBusinessDistrict());
		dgfBussAddrDtlsImpl.setBusinessUpzilla(getBusinessUpzilla());
		dgfBussAddrDtlsImpl.setBusinessUnionName(getBusinessUnionName());
		dgfBussAddrDtlsImpl.setBusinessVillage(getBusinessVillage());
		dgfBussAddrDtlsImpl.setBusinessWard(getBusinessWard());
		dgfBussAddrDtlsImpl.setBusinessZipCode(getBusinessZipCode());
		dgfBussAddrDtlsImpl.setBusinessPostOffice(getBusinessPostOffice());
		dgfBussAddrDtlsImpl.setBusinessHouseAddress(getBusinessHouseAddress());

		dgfBussAddrDtlsImpl.resetOriginalValues();

		return dgfBussAddrDtlsImpl;
	}

	@Override
	public DgfBussAddrDtls cloneWithOriginalValues() {
		DgfBussAddrDtlsImpl dgfBussAddrDtlsImpl = new DgfBussAddrDtlsImpl();

		dgfBussAddrDtlsImpl.setBusinessAddressId(
			this.<Long>getColumnOriginalValue("businessAddressId"));
		dgfBussAddrDtlsImpl.setNationalId(
			this.<Long>getColumnOriginalValue("nationalId"));
		dgfBussAddrDtlsImpl.setBusinessDivision(
			this.<Long>getColumnOriginalValue("businessDivision"));
		dgfBussAddrDtlsImpl.setBusinessDistrict(
			this.<Long>getColumnOriginalValue("businessDistrict"));
		dgfBussAddrDtlsImpl.setBusinessUpzilla(
			this.<Long>getColumnOriginalValue("businessUpzilla"));
		dgfBussAddrDtlsImpl.setBusinessUnionName(
			this.<Long>getColumnOriginalValue("businessUnionName"));
		dgfBussAddrDtlsImpl.setBusinessVillage(
			this.<String>getColumnOriginalValue("businessVillage"));
		dgfBussAddrDtlsImpl.setBusinessWard(
			this.<String>getColumnOriginalValue("businessWard"));
		dgfBussAddrDtlsImpl.setBusinessZipCode(
			this.<String>getColumnOriginalValue("businessZipCode"));
		dgfBussAddrDtlsImpl.setBusinessPostOffice(
			this.<String>getColumnOriginalValue("businessPostOffice"));
		dgfBussAddrDtlsImpl.setBusinessHouseAddress(
			this.<String>getColumnOriginalValue("businessHouseAddress"));

		return dgfBussAddrDtlsImpl;
	}

	@Override
	public int compareTo(DgfBussAddrDtls dgfBussAddrDtls) {
		long primaryKey = dgfBussAddrDtls.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof DgfBussAddrDtls)) {
			return false;
		}

		DgfBussAddrDtls dgfBussAddrDtls = (DgfBussAddrDtls)object;

		long primaryKey = dgfBussAddrDtls.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<DgfBussAddrDtls> toCacheModel() {
		DgfBussAddrDtlsCacheModel dgfBussAddrDtlsCacheModel =
			new DgfBussAddrDtlsCacheModel();

		dgfBussAddrDtlsCacheModel.businessAddressId = getBusinessAddressId();

		dgfBussAddrDtlsCacheModel.nationalId = getNationalId();

		dgfBussAddrDtlsCacheModel.businessDivision = getBusinessDivision();

		dgfBussAddrDtlsCacheModel.businessDistrict = getBusinessDistrict();

		dgfBussAddrDtlsCacheModel.businessUpzilla = getBusinessUpzilla();

		dgfBussAddrDtlsCacheModel.businessUnionName = getBusinessUnionName();

		dgfBussAddrDtlsCacheModel.businessVillage = getBusinessVillage();

		String businessVillage = dgfBussAddrDtlsCacheModel.businessVillage;

		if ((businessVillage != null) && (businessVillage.length() == 0)) {
			dgfBussAddrDtlsCacheModel.businessVillage = null;
		}

		dgfBussAddrDtlsCacheModel.businessWard = getBusinessWard();

		String businessWard = dgfBussAddrDtlsCacheModel.businessWard;

		if ((businessWard != null) && (businessWard.length() == 0)) {
			dgfBussAddrDtlsCacheModel.businessWard = null;
		}

		dgfBussAddrDtlsCacheModel.businessZipCode = getBusinessZipCode();

		String businessZipCode = dgfBussAddrDtlsCacheModel.businessZipCode;

		if ((businessZipCode != null) && (businessZipCode.length() == 0)) {
			dgfBussAddrDtlsCacheModel.businessZipCode = null;
		}

		dgfBussAddrDtlsCacheModel.businessPostOffice = getBusinessPostOffice();

		String businessPostOffice =
			dgfBussAddrDtlsCacheModel.businessPostOffice;

		if ((businessPostOffice != null) &&
			(businessPostOffice.length() == 0)) {

			dgfBussAddrDtlsCacheModel.businessPostOffice = null;
		}

		dgfBussAddrDtlsCacheModel.businessHouseAddress =
			getBusinessHouseAddress();

		String businessHouseAddress =
			dgfBussAddrDtlsCacheModel.businessHouseAddress;

		if ((businessHouseAddress != null) &&
			(businessHouseAddress.length() == 0)) {

			dgfBussAddrDtlsCacheModel.businessHouseAddress = null;
		}

		return dgfBussAddrDtlsCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<DgfBussAddrDtls, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<DgfBussAddrDtls, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<DgfBussAddrDtls, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((DgfBussAddrDtls)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, DgfBussAddrDtls>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					DgfBussAddrDtls.class, ModelWrapper.class);

	}

	private long _businessAddressId;
	private long _nationalId;
	private long _businessDivision;
	private long _businessDistrict;
	private long _businessUpzilla;
	private long _businessUnionName;
	private String _businessVillage;
	private String _businessWard;
	private String _businessZipCode;
	private String _businessPostOffice;
	private String _businessHouseAddress;

	public <T> T getColumnValue(String columnName) {
		Function<DgfBussAddrDtls, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((DgfBussAddrDtls)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("businessAddressId", _businessAddressId);
		_columnOriginalValues.put("nationalId", _nationalId);
		_columnOriginalValues.put("businessDivision", _businessDivision);
		_columnOriginalValues.put("businessDistrict", _businessDistrict);
		_columnOriginalValues.put("businessUpzilla", _businessUpzilla);
		_columnOriginalValues.put("businessUnionName", _businessUnionName);
		_columnOriginalValues.put("businessVillage", _businessVillage);
		_columnOriginalValues.put("businessWard", _businessWard);
		_columnOriginalValues.put("businessZipCode", _businessZipCode);
		_columnOriginalValues.put("businessPostOffice", _businessPostOffice);
		_columnOriginalValues.put(
			"businessHouseAddress", _businessHouseAddress);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("businessAddressId", 1L);

		columnBitmasks.put("nationalId", 2L);

		columnBitmasks.put("businessDivision", 4L);

		columnBitmasks.put("businessDistrict", 8L);

		columnBitmasks.put("businessUpzilla", 16L);

		columnBitmasks.put("businessUnionName", 32L);

		columnBitmasks.put("businessVillage", 64L);

		columnBitmasks.put("businessWard", 128L);

		columnBitmasks.put("businessZipCode", 256L);

		columnBitmasks.put("businessPostOffice", 512L);

		columnBitmasks.put("businessHouseAddress", 1024L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private DgfBussAddrDtls _escapedModel;

}